{"remainingRequest":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\pncui-portal-fashional\\src\\layout\\login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\pncui-portal-fashional\\src\\layout\\login.vue","mtime":1636081374903},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n\r\nimport {encrypt} from '@eladmin/utils/rsaEncrypt'\r\nimport Config from '@public/config/settings'\r\nimport {getCodeImg} from '@eladmin/api/login'\r\nimport Cookies from 'js-cookie'\r\nimport {mapGetters, mapActions} from 'vuex'\r\n\r\nimport ThemeSelect from '../components/ThemeSelect'\r\n\r\nexport default {\r\n  name: 'Login',\r\n  data() {\r\n    return {\r\n      title: Config.title,\r\n      codeEnabled: false,\r\n      codeUrl: '',\r\n      cookiePass: '',\r\n      theme: 'default',\r\n      loginForm: {\r\n        username: '',\r\n        password: '',\r\n        rememberMe: false,\r\n        code: '',\r\n        uuid: ''\r\n      },\r\n      loginRules: {\r\n        username: [{required: true, trigger: 'blur', message: '用户名不能为空'}],\r\n        password: [{required: true, trigger: 'blur', message: '密码不能为空'}],\r\n        code: [{required: true, trigger: 'change', message: '验证码不能为空'}]\r\n      },\r\n      loading: false,\r\n      redirect: undefined,\r\n      currentRole: {id:'',name:''},\r\n      selectRole: false\r\n    }\r\n  },\r\n  components: {\r\n    ThemeSelect\r\n  },\r\n  computed: {\r\n    logo() {\r\n      //console.log('lllllogo>>>>>', Config.logo, typeof (Config.logo))\r\n      return Config.logo ? Config.logo : require('../../public/themes/' + this.getStyle()['style'] + '/images/logo.png')\r\n    },\r\n    getBackground() {\r\n      //return '/themes/' + this.getTheme().layout + '/' + this.getTheme().style + '/images/login_bg_' + (new Date().getDay() + 1) + '.jpg'\r\n      return Config.loginBackground ? Config.loginBackground : require('../../public/themes/' + this.getStyle().style + '/images/login_bg_' + (new Date().getDay() + 1) + '.jpg')\r\n    }\r\n  },\r\n  watch: {\r\n    $route: {\r\n      handler: function (route) {\r\n        this.redirect = route.query && route.query.redirect\r\n      },\r\n      immediate: true\r\n    }\r\n  },\r\n  created() {\r\n    this.getCode()\r\n    this.getCookie()\r\n  },\r\n  mounted() {\r\n  },\r\n  methods: {\r\n\r\n    getCode() {\r\n      getCodeImg().then(res => {\r\n        this.codeEnabled = res.enabled\r\n        if (res.enabled) {\r\n          this.codeUrl = res.img\r\n          this.loginForm.uuid = res.uuid\r\n        }\r\n      })\r\n    },\r\n    getCookie() {\r\n      const username = Cookies.get('username')\r\n      let password = Cookies.get('password')\r\n      const rememberMe = Cookies.get('rememberMe')\r\n      // 保存cookie里面的加密后的密码\r\n      this.cookiePass = password === undefined ? '' : password\r\n      password = password === undefined ? this.loginForm.password : password\r\n      this.loginForm = {\r\n        username: username === undefined ? this.loginForm.username : username,\r\n        password: password,\r\n        rememberMe: rememberMe === undefined ? false : Boolean(rememberMe),\r\n        code: ''\r\n      }\r\n    },\r\n    handleLogin() {\r\n      this.$refs.loginForm.validate(valid => {\r\n        const user = {\r\n          username: this.loginForm.username,\r\n          password: this.loginForm.password,\r\n          rememberMe: this.loginForm.rememberMe,\r\n          code: this.loginForm.code,\r\n          uuid: this.loginForm.uuid\r\n        }\r\n        if (user.password !== this.cookiePass) {\r\n          user.password = encrypt(user.password)\r\n        }\r\n        if (valid) {\r\n          this.loading = true\r\n          if (user.rememberMe) {\r\n            Cookies.set('username', user.username, {expires: Config.passCookieExpires})\r\n            Cookies.set('password', user.password, {expires: Config.passCookieExpires})\r\n            Cookies.set('rememberMe', user.rememberMe, {expires: Config.passCookieExpires})\r\n          } else {\r\n            Cookies.remove('username')\r\n            Cookies.remove('password')\r\n            Cookies.remove('rememberMe')\r\n          }\r\n          this.$store.dispatch('Login', user).then(() => {\r\n            //console.log('======dddddd======', this.user())\r\n            if (this.user().roles != null && this.user().roles.length > 0) {\r\n              if (this.user().roles.length > 1) {\r\n                 console.log('=======login=====>', this.user())\r\n\r\n                for(var i=0;i<this.user().roles.length;i++){\r\n                  this.currentRole.id += this.user().roles[i].id+\",\";\r\n                  this.currentRole.name += this.user().roles[i].name+\",\";\r\n                }\r\n                this.currentRole.id = this.currentRole.id.substr(0,this.currentRole.id.length -1);\r\n                this.currentRole.name = this.currentRole.name.substr(0,this.currentRole.name.length -1);\r\n                this.selectRole = false\r\n                this.goin()\r\n              } else if (this.user().roles.length == 1) {\r\n                this.currentRoleid = this.user().roles[0].id\r\n                this.currentRole.name += this.user().roles[0].name;\r\n                this.goin()\r\n              }\r\n            } else {\r\n              this.$message('当前用户没有访问该系统的权限，请联系管理员！', 'error')\r\n            }\r\n          }).catch((error) => {\r\n            console.log(error)\r\n            this.loading = false\r\n            this.getCode()\r\n          })\r\n        } else {\r\n          console.log('error submit!!')\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    goin() {\r\n      if (!this.currentRole) {\r\n        this.$message('请选择角色', 'error')\r\n        return\r\n      }\r\n      //console.log('======goin============', this.currentRole, this.user().roles.find(e => e.id == this.currentRole))\r\n      this.$store.dispatch('setCurrentRole', this.currentRole)\r\n      this.$router.push({path: this.redirect || '/'})\r\n    },\r\n    cancel() {\r\n      this.selectRole = false\r\n      this.loading = false\r\n    },\r\n    ...mapGetters(['user', 'getStyle']),\r\n  }\r\n}\r\n",null]}