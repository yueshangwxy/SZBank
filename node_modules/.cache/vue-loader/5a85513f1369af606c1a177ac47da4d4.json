{"remainingRequest":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DataAssetPlatform000\\Pncui-Ind\\src\\views\\indicators\\detailsView\\tableDetailsView.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\src\\views\\indicators\\detailsView\\tableDetailsView.vue","mtime":1654824275291},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1650418886580}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mixinsFunctions } from \"@/mixins/mixinsFunc\";\r\nexport default {\r\n  mixins: [mixinsFunctions],\r\n  data() {\r\n    return {\r\n      // basicinfo\r\n      basicinfo: {\r\n        tableName: \"ind_dim_info_dd_org\",\r\n        chineseName: \"指标机构表\",\r\n        owner: \"48\",\r\n        tenantCode: \"idmp\",\r\n        project: \"std_01_uat1\",\r\n        driverType: \"odps\",\r\n        myCrtTime: \"2022-01-01\",\r\n        myUpdTime: \"2022-04-12\",\r\n        online: \"是\",\r\n        catalogue1: \"个贷\",\r\n        catalogue2: \"网贷\",\r\n        catalogue1Name: \"产品/贷款/个贷\",\r\n        catalogue2Name: \"产品/贷款/网贷\",\r\n      },\r\n      dataList: [],\r\n      propList: [],\r\n      detailsView: false,\r\n      id: \"\",\r\n      assetsState: \"\",\r\n      // 目录树\r\n      catalogueList: [],\r\n      cataValue: [],\r\n    };\r\n  },\r\n  methods: {\r\n    initData() {\r\n      if (this.$route.name === \"表详情\") {\r\n        this.detailsView = true;\r\n      }\r\n      // 目录树\r\n      this.$api.getAllCatalogueList({}).then((res) => {\r\n        this.catalogueList = res;\r\n      });\r\n      // 数据\r\n      this.id = this.$route.query.id; // 通过路由传递id\r\n      this.$api\r\n        .getTableById({\r\n          id: this.id,\r\n          isRecord: this.detailsView,\r\n        })\r\n        .then((res) => {\r\n          let data = res.data;\r\n          this.basicinfo = data.table;\r\n          // 表格数据\r\n          this.dataList = data.column;\r\n          this.cataValue = [];\r\n          // 发布状态\r\n          this.assetsState = this.basicinfo.assetsState;\r\n          // 返回的目录  -- 渲染\r\n          let temp = this.basicinfo.catalogues;\r\n          for (let key in temp) {\r\n            key = key.split(\"/\");\r\n            this.cataValue.push({ id: key });\r\n          }\r\n        });\r\n      this.propList = [\r\n        {\r\n          prop: \"columnName\",\r\n          label: \"字段名称\",\r\n          align: \"center\",\r\n        },\r\n        {\r\n          prop: \"columnMessage\",\r\n          label: \"字段信息\",\r\n          align: \"center\",\r\n        },\r\n        {\r\n          prop: \"type\",\r\n          label: \"字段类型\",\r\n          align: \"center\",\r\n        },\r\n        {\r\n          prop: \"length\",\r\n          label: \"字段长度\",\r\n          align: \"center\",\r\n        },\r\n        {\r\n          prop: \"isNull\",\r\n          label: \"是否可以为空\",\r\n          align: \"center\",\r\n        },\r\n      ];\r\n    },\r\n    confirmModify() {\r\n      let list = JSON.parse(JSON.stringify(this.cataValue));\r\n      list = list.map((item) => {\r\n        return (item = item.id.join(\"/\"));\r\n      });\r\n\r\n      let listSet = Array.from(new Set(list));\r\n      if (listSet.length !== list.length) {\r\n        this.$message.error(\"添加目录不能重复\");\r\n      } else {\r\n        this.$api\r\n          .updateAssetTable({\r\n            id: this.id,\r\n            list: list,\r\n            assetsState: this.assetsState,\r\n          })\r\n          .then((res) => {\r\n            if (res.code == 0) {\r\n              this.$message.success(\"修改成功!\");\r\n              this.closeThisPage();\r\n            } else {\r\n              this.$message.error(res.msg);\r\n              this.closeThisPage();\r\n            }\r\n          });\r\n      }\r\n    },\r\n    handleChange(value) {\r\n      console.log(value);\r\n    },\r\n    deleteCatalogue(index) {\r\n      this.cataValue.splice(index, 1);\r\n    },\r\n    transOnline(online) {\r\n      if (online === 1) {\r\n        return \"是\";\r\n      } else if (online === 0) {\r\n        return \"否\";\r\n      } else {\r\n        return \"\";\r\n      }\r\n    },\r\n    addCatalogue() {\r\n      if (this.cataValue.length > 4) {\r\n        this.$message.warning(\"最多添加5条目录\");\r\n      } else {\r\n        this.cataValue.push({\r\n          id: [],\r\n        });\r\n      }\r\n    },\r\n  },\r\n};\r\n",null]}