{"remainingRequest":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\eladmin-common\\src\\views\\monitor\\server\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\eladmin-common\\src\\views\\monitor\\server\\index.vue","mtime":1650772037020},{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650772030926},{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1650772030306},{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650772030926},{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1650772056629}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport crudServer from '../../../api/monitor/server'\r\nimport CRUD, {presenter, header, form, crud} from '../../../components/Crud/crud'\r\nimport rrOperation from '../../../components/Crud/RR.operation'\r\nimport crudOperation from '../../../components/Crud/CRUD.operation'\r\nimport udOperation from '../../../components/Crud/UD.operation'\r\nimport pagination from '../../../components/Crud/Pagination'\r\n\r\n// crud交由presenter持有\r\nconst defaultCrud = CRUD({title: '监控', url: 'api/server', sort: 'sort,asc', crudMethod: {...crudServer}})\r\nconst defaultForm = {\r\n  id: null,\r\n  address: 'localhost',\r\n  name: null,\r\n  ip: null,\r\n  port: 8777,\r\n  state: null,\r\n  cpuRate: null,\r\n  cpuCore: null,\r\n  memTotal: null,\r\n  memUsed: null,\r\n  diskTotal: null,\r\n  diskUsed: null,\r\n  swapTotal: null,\r\n  swapUsed: null,\r\n  sort: 999\r\n}\r\nexport default {\r\n  name: 'ServerMonitor',\r\n  components: {pagination, crudOperation, rrOperation, udOperation},\r\n  mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\r\n  data() {\r\n    return {\r\n      permission: {\r\n        add: ['admin', 'server:add'],\r\n        edit: ['admin', 'server:edit'],\r\n        del: ['admin', 'server:del']\r\n      },\r\n      rules: {\r\n        name: [\r\n          {required: true, message: '请输入名称', trigger: 'blur'}\r\n        ],\r\n        address: [\r\n          {required: true, message: '请输入IP', trigger: 'blur'}\r\n        ],\r\n        port: [\r\n          {required: true, message: '请输入访问端口', trigger: 'blur', type: 'number'}\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.crud.optShow.download = false\r\n  },\r\n  methods: {\r\n    formatCpuRate(row, column) {\r\n      const value = row.cpuRate\r\n      if (!value) {\r\n        return 0\r\n      }\r\n      return (Math.floor(value * 10000) / 100) + '%'\r\n    },\r\n    percentNumber(value, total) {\r\n      if (!value || !total) {\r\n        return 0\r\n      }\r\n      return value / total * 100\r\n    },\r\n    percentStatus(value, total) {\r\n      const percent = this.percentNumber(value, total)\r\n      if (percent < 60) {\r\n        return 'success'\r\n      } else if (percent < 90) {\r\n        return 'warning'\r\n      } else {\r\n        return 'exception'\r\n      }\r\n    },\r\n    convertToGb(num) {\r\n      if (!num) {\r\n        return '-'\r\n      }\r\n      let unit = 'G'\r\n      if (num > 1024) {\r\n        num = num / 1024\r\n        unit = 'T'\r\n      }\r\n      num = Math.floor(num * 100) / 100\r\n      return num + unit\r\n    },\r\n    formatMem(row, column) {\r\n      return this.convertToGb(row.memUsed) + ' / ' + this.convertToGb(row.memTotal)\r\n    },\r\n    formatDisk(row, column) {\r\n      return this.convertToGb(row.diskUsed) + ' / ' + this.convertToGb(row.diskTotal)\r\n    },\r\n    formatSwap(row, column) {\r\n      return this.convertToGb(row.swapUsed) + ' / ' + this.convertToGb(row.swapTotal)\r\n    }\r\n  }\r\n}\r\n",null]}