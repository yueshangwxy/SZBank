{"remainingRequest":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DataAssetPlatform000\\Pncui-Ind\\src\\views\\indicators\\layout\\panelGroup.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\src\\views\\indicators\\layout\\panelGroup.vue","mtime":1654584083719},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1650418886580}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport {countAssets,countAssetsByDept,topTen,data2Charts} from '../../../api/searchPage/homePage'\r\n    export default {\r\n        components: {},\r\n        data() {\r\n            return {\r\n                searchInput: '',\r\n                dateValue: '',\r\n                countAssetsData :[],\r\n\r\n                topTenData :[],\r\n                pieData :[], //饼图数据\r\n                deptData :[], //柱状图y轴\r\n                barData :[], //柱状图数据\r\n                firstTableLineData :[],//第一个折线图(表)\r\n                firstTargetLineData :[],//第一个折线图(指标)\r\n                firstApiLineData :[],//第一个折线图(api)\r\n                firstLabelLineData :[],//第一个折线图(标签)\r\n                secondTableLineData :[],//第二个折线图(表)\r\n                secondTargetLineData :[],//第二个折线图(指标)\r\n                secondApiLineData :[],//第二个折线图(api)\r\n                secondLabelLineData :[],//第二个折线图(标签)\r\n                countAssetsByDeptData: [\r\n                    {deptName: 1,num:2},\r\n                    {deptName: 2,num:3},\r\n                    {deptName: 3,num:4},\r\n                    {deptName: 4,num:5},\r\n                    {deptName: 5,num:6},\r\n                ],\r\n            }\r\n        },\r\n        created() {\r\n\r\n            countAssetsByDept().then(data =>{\r\n                this.countAssetsByDeptData = data\r\n            })\r\n                /*this.countAssetsByDeptData = [{\"deptName\":\"部门1\",\"num\":6,\"deptCode\":\"1\"},\r\n                    {\"deptName\":\"部门2\",\"num\":2,\"deptCode\":\"2\"},\r\n                    {\"deptName\":\"部门3\",\"num\":3,\"deptCode\":\"3\"},\r\n                    {\"deptName\":\"部门4\",\"num\":2,\"deptCode\":\"4\"}]*/\r\n            topTen().then(data =>{\r\n                this.topTenData = data\r\n            })\r\n        },\r\n        mounted() {\r\n            //各类资产已发布的数量\r\n            countAssets().then(data =>{\r\n                this.countAssetsData = data\r\n            });\r\n            data2Charts().then(data =>{\r\n                this.pieData = data.pieData\r\n                this.deptData = data.barData.deptList\r\n                this.barData = data.barData.numList\r\n                this.firstTableLineData = data.lineData.first.table\r\n                this.firstTargetLineData = data.lineData.first.target\r\n                this.firstApiLineData = data.lineData.first.api\r\n                this.firstLabelLineData = data.lineData.first.label\r\n                this.secondTableLineData = data.lineData.second.table\r\n                this.secondTargetLineData = data.lineData.second.target\r\n                this.secondApiLineData = data.lineData.second.api\r\n                this.secondLabelLineData = data.lineData.second.label\r\n                console.log(JSON.stringify(this.deptData))\r\n                console.log(JSON.stringify(this.barData))\r\n                console.log(JSON.stringify(data.lineData))\r\n\r\n                this.drawChart()\r\n            });\r\n            // 轮播图\r\n            let liWidth = $(\"#carousel ul>li\").outerWidth();\r\n            let count = 0;\r\n            \r\n            $(\"#carousel ul\").append($(\"#carousel ul\").find(\"li\").eq(0).clone())\r\n            $(\"#carousel ul\").append($(\"#carousel ul\").find(\"li\").eq(1).clone())\r\n            $(\"#carousel ul\").append($(\"#carousel ul\").find(\"li\").eq(2).clone())\r\n            $(\"#carousel ul\").append($(\"#carousel ul\").find(\"li\").eq(3).clone())\r\n            $(\"#carousel ul\").append($(\"#carousel ul\").find(\"li\").eq(4).clone())\r\n            \r\n            $(\"#carousel ul\").css(\"width\", $(\"#carousel ul>li\").length + \"00%\");\r\n            let flag = true;\r\n            $(\".car .arrow-left\").click(function () {\r\n                if (flag) {\r\n                    flag = false;\r\n                    if (count == 0) {\r\n                        count = $(\"#carousel ul>li\").length - 5;\r\n                        $(\"#carousel ul\").css(\"left\", -liWidth * count + \"px\");\r\n                    }\r\n                    count--;\r\n                    $(\"#carousel ul\").animate({ \"left\": -liWidth * count }, function () {\r\n                        return flag = true;\r\n                    });\r\n                }\r\n            })\r\n            $(\".car .arrow-right\").click(function () {\r\n                if (flag) {\r\n                    flag = false;\r\n                    if (count == $(\"#carousel ul>li\").length - 5) {\r\n                        count = 0;\r\n                        $(\"#carousel ul\").css(\"left\", -liWidth * count + \"px\");\r\n                    }\r\n                    count++;\r\n                    $(\"#carousel ul\").animate({ \"left\": -liWidth * count }, function () {\r\n                        return flag = true;\r\n                    });\r\n                }\r\n            });\r\n        },\r\n        methods: {\r\n            openSearchPage(desc) {\r\n                this.$router.push({\r\n                    path: 'asset/searchPage/index',\r\n                    query: {\r\n                        desc: desc\r\n                    }\r\n                })\r\n            },\r\n            // 搜索\r\n            queryList(inputValue) {\r\n                // 去除空格\r\n                inputValue = inputValue.replace(/\\s*/g,\"\")  \r\n\r\n/*                this.historyTags.unshift(inputValue);\r\n                this.historyTags = Array.from(new Set(this.historyTags))\r\n                localStorage.setItem('historyTags',JSON.stringify(this.historyTags))*/\r\n                this.$router.push({\r\n                    path: 'asset/searchPage/index',query:{searchInput:this.searchInput}\r\n                })\r\n            },\r\n            // 搜索建议\r\n            querySearch(queryString, cb) {\r\n                let suggest = [\r\n                        { \"value\": \"三全鲜食（北新泾店）\", \"address\": \"长宁区新渔路144号\" },\r\n                        { \"value\": \"Hot honey 首尔炸鸡（仙霞路）\", \"address\": \"上海市长宁区淞虹路661号\" },\r\n                        { \"value\": \"新旺角茶餐厅\", \"address\": \"上海市普陀区真北路988号创邑金沙谷6号楼113\" },\r\n                    ]\r\n                // suggest数据由接口返回\r\n                let results = queryString ? suggest.filter(this.createFilter(queryString)) : suggest;\r\n                // 调用 callback 返回建议列表的数据\r\n                cb(results);\r\n            },\r\n            createFilter(queryString) {\r\n                return (res) => {\r\n                    return (res.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\r\n                };\r\n            },\r\n            // 搜索建议选中\r\n            handleSelect(item) {\r\n                console.log(item);\r\n                this.queryList(item.value)\r\n            },\r\n            // 绘图\r\n            drawChart() {\r\n                // 饼图\r\n                let pieChartDom = document.getElementById('pieChart');\r\n                let pieChart = this.$echarts.init(pieChartDom);\r\n                let pieChartOption = {\r\n                    title: {\r\n                        text: '资产分类',\r\n                        left: '5%',\r\n                        top: '5%'\r\n                    },\r\n                    tooltip: {\r\n                        trigger: 'item'\r\n                    },\r\n                    legend: {\r\n                        orient: 'vertical',\r\n                        left: '60%',  \r\n                        y: 'center',  \r\n                        formatter: function (name) {\r\n                            let data = pieChartOption.series[0].data\r\n                            let total = 0\r\n                            let tarValue\r\n                            for (let i = 0; i < data.length; i++) {\r\n                            total += data[i].value\r\n                            if (data[i].name == name) {\r\n                                tarValue = data[i].value\r\n                            }\r\n                            }\r\n                            let v = tarValue\r\n                            return `${name}     ${parseInt(v/total*100)} %   `\r\n                        },\r\n                    },\r\n                    series: [\r\n                        {\r\n                            name: '资产分类',\r\n                            type: 'pie',\r\n                            center: ['35%', '50%'],\r\n                            radius: ['30%', '40%'],\r\n                            avoidLabelOverlap: false,\r\n                            label: {\r\n                                show: false,\r\n                                position: 'center',\r\n                                formatter: `{c}资产分类`\r\n                            },\r\n                            emphasis: {\r\n                                label: {\r\n                                show: true,\r\n                                fontSize: '20',\r\n                                fontWeight: 'bold'\r\n                                }\r\n                            },\r\n                            labelLine: {\r\n                                show: false\r\n                            },\r\n                            data: this.pieData\r\n                        }\r\n                    ]\r\n                }\r\n\r\n                pieChartOption && pieChart.setOption(pieChartOption);\r\n                // 柱状图\r\n                let barChartDom = document.getElementById('barChart');\r\n                let barChart = this.$echarts.init(barChartDom);\r\n                let barChartOption = {\r\n                    tooltip: {\r\n                        trigger: 'axis',\r\n                        axisPointer: {\r\n                        type: 'shadow'\r\n                        }\r\n                    },\r\n                    grid: {\r\n                        left: '3%',\r\n                        right: '4%',\r\n                        // bottom: '3%',\r\n                        top: '5%',\r\n                        containLabel: true\r\n                    },\r\n                    xAxis: {\r\n                        type: 'value',\r\n                        boundaryGap: [0, 0.01]\r\n                    },\r\n                    yAxis: {\r\n                        type: 'category',\r\n                        data: this.deptData\r\n                    },\r\n                    series: [\r\n                        {\r\n                            name: '资产数',\r\n                            type: 'bar',\r\n                            data: this.barData,\r\n                            itemStyle: {\r\n                                normal: {\r\n                                    color: 'blue'\r\n                                }\r\n                            }\r\n                        },\r\n                    ]\r\n                }\r\n\r\n                barChartOption && barChart.setOption(barChartOption);\r\n                // 折线图\r\n                let lineChartDom = document.getElementById('lineChart');\r\n                let lineChart = this.$echarts.init(lineChartDom);\r\n                let lineChartOption = {\r\n                    title: {\r\n                        text: '业务趋势',\r\n                        left: '5%',\r\n                        top: '5%'\r\n                    },\r\n                    tooltip: {\r\n                        trigger: 'axis'\r\n                    },\r\n                    legend: {\r\n                        selectedMode: false,\r\n                        data: ['表资产', 'API资产', '目标资产', '标签资产'],\r\n                        top: '5%'\r\n                    },\r\n                    grid: {\r\n                        left: '5%',\r\n                        right: '5%',\r\n                        bottom: '5%',\r\n                        containLabel: true\r\n                    },\r\n                    xAxis: {\r\n                        type: 'category',\r\n                        boundaryGap: false,\r\n                        data: ['1', '2', '3', '4', '5', '6', '7']\r\n                    },\r\n                    yAxis: {\r\n                        type: 'value'\r\n                    },\r\n                    series: [\r\n                        {\r\n                            name: '表资产',\r\n                            type: 'line',\r\n                            stack: 'Total',\r\n                            data: this.firstTableLineData\r\n                        },\r\n                        {\r\n                            name: 'API资产',\r\n                            type: 'line',\r\n                            stack: 'Total',\r\n                            data: this.firstApiLineData\r\n                        },\r\n                        {\r\n                            name: '目标资产',\r\n                            type: 'line',\r\n                            stack: 'Total',\r\n                            data: this.firstTargetLineData\r\n                        },\r\n                        {\r\n                            name: '标签资产',\r\n                            type: 'line',\r\n                            stack: 'Total',\r\n                            data: this.firstLabelLineData\r\n                        },\r\n                    ]\r\n                }\r\n\r\n                lineChartOption && lineChart.setOption(lineChartOption);\r\n\r\n\r\n                // 折线图2\r\n                let smoothLineChartDom = document.getElementById('smoothLineChart');\r\n                let smoothLineChart = this.$echarts.init(smoothLineChartDom);\r\n                let smoothLineChartOption = {\r\n                    title: {\r\n                        text: '资产数据增长情况',\r\n                        left: '5%',\r\n                        top: '5%'\r\n                    },\r\n                    tooltip: {\r\n                        trigger: 'axis'\r\n                    },\r\n                    legend: {\r\n                        selectedMode: false,\r\n                        data: ['1部', '2部', '3部', '4部'],\r\n                        top: '5%'\r\n                    },\r\n                    grid: {\r\n                        left: '5%',\r\n                        right: '5%',\r\n                        bottom: '5%',\r\n                        containLabel: true\r\n                    },\r\n                    xAxis: {\r\n                        type: 'category',\r\n                        boundaryGap: false,\r\n                        data: ['1', '2', '3', '4', '5', '6', '7']\r\n                    },\r\n                    yAxis: {\r\n                        type: 'value'\r\n                    },\r\n                    series: [\r\n                        {\r\n                            name: '表资产',\r\n                            type: 'line',\r\n                            smooth: true,\r\n                            stack: 'Total',\r\n                            data: this.secondTableLineData\r\n                        },\r\n                        {\r\n                            name: '指标资产',\r\n                            type: 'line',\r\n                            smooth: true,\r\n                            stack: 'Total',\r\n                            data: this.secondTargetLineData\r\n                        },\r\n                        {\r\n                            name: 'Api资产',\r\n                            type: 'line',\r\n                            smooth: true,\r\n                            stack: 'Total',\r\n                            data: this.secondApiLineData\r\n                        },\r\n                        {\r\n                            name: '标签',\r\n                            type: 'line',\r\n                            smooth: true,\r\n                            stack: 'Total',\r\n                            data: this.secondLabelLineData\r\n                        },\r\n                    ]\r\n                }\r\n\r\n                smoothLineChartOption && smoothLineChart.setOption(smoothLineChartOption);\r\n                setTimeout(function () {\r\n                    window.onresize = function () {\r\n                        pieChart.resize();\r\n                        barChart.resize();\r\n                        lineChart.resize();\r\n                        smoothLineChart.resize();\r\n                    }\r\n                }, 200)\r\n            },\r\n        }\r\n    }\r\n",null]}