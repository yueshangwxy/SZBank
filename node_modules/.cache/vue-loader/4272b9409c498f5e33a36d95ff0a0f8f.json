{"remainingRequest":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\eladmin-common\\src\\views\\components\\MarkDown.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\eladmin-common\\src\\views\\components\\MarkDown.vue","mtime":499162500000},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { upload } from '../../utils/upload'\nimport { mapGetters } from 'vuex'\nexport default {\n  name: 'Markdown',\n  data() {\n    return {\n      height: document.documentElement.clientHeight - 200 + 'px'\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'imagesUploadApi'\n    ])\n  },\n  mounted() {\n    const that = this\n    window.onresize = function temp() {\n      that.height = document.documentElement.clientHeight - 200 + 'px'\n    }\n  },\n  methods: {\n    imgAdd(pos, $file) {\n      upload(this.imagesUploadApi, $file).then(data => {\n        this.$refs.md.$img2Url(pos, data.data.url)\n      })\n    }\n  }\n}\n",null]}