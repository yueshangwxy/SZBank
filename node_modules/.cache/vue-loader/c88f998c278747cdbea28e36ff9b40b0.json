{"remainingRequest":"D:\\SZBank\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\SZBank\\src\\views\\indicators\\portalHome\\manager\\addUserDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\SZBank\\src\\views\\indicators\\portalHome\\manager\\addUserDialog.vue","mtime":1654852398638},{"path":"D:\\SZBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\SZBank\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733},{"path":"D:\\SZBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\SZBank\\node_modules\\vue-loader\\lib\\index.js","mtime":1650418886580}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  name: \"addUser\",\r\n  props: {\r\n    rowId: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    addUserVisible: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      // 对话框标题\r\n      title: \"当前角色\",\r\n      name: \"\",\r\n      // 树状图\r\n      filterText: \"\",\r\n      treeData: [],\r\n      defaultProps: {\r\n        id: \"id\",\r\n        children: \"children\",\r\n        label: \"name\",\r\n      },\r\n      // 表格\r\n      tableData: [],\r\n      propList: [],\r\n      // 分页\r\n      pageSize: 10,\r\n      total: 10,\r\n      currentPage: 1,\r\n      // tag标签\r\n      dynamicTags: [],\r\n      // 节点id\r\n      nodeId: \"\",\r\n      rowSelectLock: false,\r\n    };\r\n  },\r\n  watch: {\r\n    addUserVisible(val) {\r\n      if (val) {\r\n        this.name = \"\";\r\n        this.filterText = \"\";\r\n        this.initList();\r\n        this.dynamicTags = [];\r\n        // 查询已有菜单\r\n        this.$api.queryUserByRole({ roleId: this.rowId }).then((res) => {\r\n          this.dynamicTags = res;\r\n          let names = res.map((item) => item.username);\r\n          this.tableData.forEach((row) => {\r\n            if (names.includes(row.username)) {\r\n              this.$nextTick(() => {\r\n                this.rowSelectLock = true;\r\n                this.$refs.multipleTable.toggleRowSelection(row, true);\r\n                this.rowSelectLock = false;\r\n              });\r\n            }\r\n          });\r\n        });\r\n      }\r\n    },\r\n    // 节点过滤\r\n    filterText(val) {\r\n      this.$refs.tree.filter(val);\r\n    },\r\n  },\r\n  created() {\r\n    this.$api.getSysDeptList({}).then((res) => {\r\n      this.treeData = res.content;\r\n    });\r\n    this.propList = [\r\n      {\r\n        prop: \"username\",\r\n        label: \"用户名\",\r\n      },\r\n      {\r\n        prop: \"nickName\",\r\n        label: \"姓名\",\r\n      },\r\n      {\r\n        prop: \"email\",\r\n        label: \"邮箱\",\r\n      },\r\n      {\r\n        prop: \"deptName\",\r\n        label: \"部门\",\r\n      },\r\n    ];\r\n  },\r\n  methods: {\r\n    // 从第一页开始查询\r\n    initList() {\r\n      this.currentPage = 1;\r\n      this.queryList();\r\n    },\r\n    // 分页\r\n    handleCurrentChange(val) {\r\n      this.currentPage = val;\r\n      this.queryList();\r\n    },\r\n    // 列表查询\r\n    queryList() {\r\n      let request = {\r\n        deptId: this.nodeId,\r\n        keyWord: this.name,\r\n        size: this.pageSize,\r\n        page: this.currentPage,\r\n      };\r\n      this.$api.qryUserListPage(request).then((res) => {\r\n        this.tableData = res.data.records;\r\n        this.total = res.data.total;\r\n        let names = this.dynamicTags.map((item) => item.username);\r\n        res.data.records.forEach((row) => {\r\n          if (names.includes(row.username)) {\r\n            this.$nextTick(() => {\r\n              // this.rowSelectLock = true;\r\n              this.$refs.multipleTable.toggleRowSelection(row, true);\r\n              // this.rowSelectLock = false;\r\n            });\r\n          } else {\r\n            this.$nextTick(() => {\r\n              this.$refs.multipleTable.toggleRowSelection(row, false);\r\n            });\r\n          }\r\n        });\r\n      });\r\n    },\r\n    // 关闭对话框\r\n    closeAddUser() {\r\n      this.$emit(\"closeAddUser\");\r\n    },\r\n    // 确定\r\n    confirmAddUser() {\r\n      let ids = this.dynamicTags.map((item) => item.id);\r\n      this.$api\r\n        .saveUserRoles({\r\n          roleId: this.rowId,\r\n          userIds: ids,\r\n        })\r\n        .then((res) => {\r\n          if (res.code == 200 || res.code == 0) {\r\n            this.$message.success(res.msg);\r\n            this.$emit(\"confirmAddUser\");\r\n          } else {\r\n            this.$message.error(res.msg);\r\n          }\r\n        });\r\n    },\r\n    // 树状图过滤\r\n    filterNode(value, data) {\r\n      if (!value) return true;\r\n      return data.name.indexOf(value.toString()) !== -1;\r\n    },\r\n    // 树状图节点点击\r\n    handleNodeClick(node, data) {\r\n      console.log(node);\r\n      this.nodeId = node.id;\r\n      this.initList();\r\n    },\r\n    // 复选框\r\n    handleSelectionChange(val) {\r\n      if (this.rowSelectLock) return;\r\n      // 当前页选择的用户\r\n      let currentPageIds = val.map((item) => item.id);\r\n      // 当前页没有选择的用户\r\n      let currentPageNoIds = [];\r\n      this.tableData.forEach((item) => {\r\n        if (currentPageIds.indexOf(item.id) < 0) currentPageNoIds.push(item.id);\r\n      });\r\n      // 当前选择的所有用户\r\n      let allSelectIds = this.dynamicTags.map((item) => item.id);\r\n      val.map((item) => {\r\n        // 添加\r\n        if (allSelectIds.indexOf(item.id) < 0) {\r\n          this.dynamicTags.push(item);\r\n        }\r\n      });\r\n      allSelectIds.forEach((item, key) => {\r\n        if (currentPageNoIds.indexOf(item) > -1) {\r\n          this.$delete(this.dynamicTags, key);\r\n        }\r\n      });\r\n    },\r\n    // tag标签关闭\r\n    handleClose(tagId, index) {\r\n      this.$delete(this.dynamicTags, index);\r\n      this.tableData.forEach((row) => {\r\n        if (tagId === row.id) {\r\n          this.$refs.multipleTable.toggleRowSelection(row, false);\r\n        }\r\n      });\r\n    },\r\n  },\r\n};\r\n",null]}