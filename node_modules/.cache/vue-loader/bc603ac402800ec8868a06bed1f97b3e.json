{"remainingRequest":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\eladmin-common\\src\\views\\mnt\\server\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\eladmin-common\\src\\views\\mnt\\server\\index.vue","mtime":499162500000},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport crudServer from '../../../api/mnt/serverDeploy'\nimport { testServerConnect } from '../../../api/mnt/connect'\nimport { validateIP } from '../../../utils/validate'\nimport CRUD, { presenter, header, form, crud } from '../../../components/Crud/crud'\nimport rrOperation from '../../../components/Crud/RR.operation'\nimport crudOperation from '../../../components/Crud/CRUD.operation'\nimport udOperation from '../../../components/Crud/UD.operation'\nimport pagination from '../../../components/Crud/Pagination'\n// crud交由presenter持有\nconst defaultCrud = CRUD({ title: '服务器', url: 'api/serverDeploy', crudMethod: { ...crudServer }})\nconst defaultForm = { id: null, name: null, ip: null, port: 22, account: 'root', password: null }\nexport default {\n  name: 'Server',\n  components: { pagination, crudOperation, rrOperation, udOperation },\n  mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\n  data() {\n    return {\n      accountList: [],\n      accountMap: {},\n      loading: false,\n      permission: {\n        add: ['admin', 'serverDeploy:add'],\n        edit: ['admin', 'serverDeploy:edit'],\n        del: ['admin', 'serverDeploy:del']\n      },\n      rules: {\n        name: [\n          { required: true, message: '请输入名称', trigger: 'blur' }\n        ],\n        ip: [\n          { required: true, message: '请输入IP', trigger: 'blur' },\n          { validator: validateIP, trigger: 'change' }\n        ],\n        port: [\n          { required: true, message: '请输入端口', trigger: 'blur', type: 'number' }\n        ],\n        account: [\n          { required: true, message: '请输入账号', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    testConnectServer() {\n      this.$refs['form'].validate((valid) => {\n        if (valid) {\n          this.loading = true\n          testServerConnect(this.form).then((res) => {\n            this.loading = false\n            this.$notify({\n              title: res ? '连接成功' : '连接失败',\n              type: res ? 'success' : 'error',\n              duration: 2500\n            })\n          }).catch(() => {\n            this.loading = false\n          })\n        }\n      })\n    }\n  }\n}\n",null]}