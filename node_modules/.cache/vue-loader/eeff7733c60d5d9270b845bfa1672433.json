{"remainingRequest":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\code\\indicator\\Pncui-Indicator\\src\\views\\indicators\\category\\categoryInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\code\\indicator\\Pncui-Indicator\\src\\views\\indicators\\category\\categoryInfo.vue","mtime":1633767215668},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport crudIndCategory from '../../../api/indicators/indCategory'\nconst defaultForm = {\n  id: null,\n  categoryType: null,\n  categoryName: null,\n  categoryDesc: null,\n  parentId: null,\n  crtUserCode: null,\n  crtOrgCode: null,\n  crtDate: null,\n  updUserCode: null,\n  updOrgCode: null,\n  updDate: null\n}\nexport default {\n  name: 'IndCategory',\n  // components: {pagination, crudOperation, rrOperation, udOperation},\n  props: {\n    type: { type: String, default: '1' },\n    parentId: { type: String, default: '0' }\n  },\n  // mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\n  data() {\n    return {\n      filterText: '',\n      defaultProps: { children: 'children', label: 'name' },\n      treeData: [\n        { id: '1', categoryType: '1', categoryName: '基础指标', children: [] },\n        { id: '2', categoryType: '2', categoryName: '衍生指标', children: [] },\n        { id: '3', categoryType: '9', categoryName: '参数', children: [] }\n      ],\n      permission: {\n        add: ['admin', 'indCategory:add'],\n        edit: ['admin', 'indCategory:edit'],\n        del: ['admin', 'indCategory:del']\n      },\n      rules: {\n        id: [\n          { required: true, message: '分类ID不能为空', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  watch: {\n    filterText(val) {\n      this.$refs.tree.filter(val)\n    }\n  },\n  mounted() {\n    // console.log('=====category---mounted....')\n    this.init()\n  },\n  methods: {\n    // 获取数据前设置好接口地址\n    /* [CRUD.HOOK.beforeRefresh]() {\n       return true\n     },*/\n    filterNode(value, treeData) {\n      if (!value) return true\n      return treeData.categoryName.indexOf(value) !== -1\n    },\n    // 点击事件\n    handleNodeClick(data) {\n      this.$emit('node-click', data)\n    },\n    init() {\n      if (this.type == 0) {\n        // 查询基础指标分类+信息\n        crudIndCategory.treeInfo('1', this.parentId).then(res => {\n          this.treeData[0].children = res.data\n        }).catch(() => {\n          console.log('')\n        })\n        // 查询衍生指标分类+信息\n        crudIndCategory.treeInfo('2', this.parentId).then(res => {\n          this.treeData[1].children = res.data\n        }).catch(() => {\n          console.log('')\n        })\n        // 查询参数分类+信息\n        crudIndCategory.treeInfo('9', this.parentId).then(res => {\n          this.treeData[2].children = res.data\n        }).catch(() => {\n          console.log('')\n        })\n      } else if (this.type == 1) {\n        this.treeData = [{ id: '1', categoryType: '1', categoryName: '基础指标', children: [] }]\n        // 查询基础指标分类+信息\n        crudIndCategory.treeInfo('1', this.parentId).then(res => {\n          this.treeData[0].children = res.data\n        }).catch(() => {\n          console.log('')\n        })\n      } else if (this.type == 2) {\n        this.treeData = [{ id: '1', categoryType: '2', categoryName: '衍生指标', children: [] }]\n        // 查询衍生指标分类+信息\n        crudIndCategory.treeInfo('2', this.parentId).then(res => {\n          this.treeData[0].children = res.data\n        }).catch(() => {\n          console.log('')\n        })\n      }\n    },\n    // 刷新左侧树状列表的方法\n    refresh() {\n      console.log('测试一下')\n    }\n  }\n}\n",null]}