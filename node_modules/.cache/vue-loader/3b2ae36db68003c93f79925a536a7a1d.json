{"remainingRequest":"D:\\code\\DataAssetPlatform000\\Pncui-SZBank\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DataAssetPlatform000\\Pncui-SZBank\\src\\views\\indicators\\portalHome\\manager\\roleManager.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\DataAssetPlatform000\\Pncui-SZBank\\src\\views\\indicators\\portalHome\\manager\\roleManager.vue","mtime":1654848715707},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-SZBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-SZBank\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-SZBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-SZBank\\node_modules\\vue-loader\\lib\\index.js","mtime":1650418886580}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport AddUserDialog from \"./addUserDialog.vue\";\r\nexport default {\r\n  name: \"roleManager\",\r\n  components: {\r\n    AddUserDialog,\r\n  },\r\n  data() {\r\n    return {\r\n      name: \"\",\r\n      date: \"\",\r\n      dateValue: [],\r\n      // 表格\r\n      tableData: [],\r\n      propList: [\r\n        {\r\n          prop: \"name\",\r\n          label: \"名称\",\r\n          align: \"center\",\r\n        },\r\n        // {\r\n        //   prop: \"tenantName\",\r\n        //   label: \"所属租户\",\r\n        //   align: \"center\",\r\n        // },\r\n        {\r\n          prop: \"remark\",\r\n          label: \"描述\",\r\n        },\r\n        {\r\n          prop: \"crtDate\",\r\n          type: \"dateTime\",\r\n          label: \"创建日期\",\r\n        },\r\n      ],\r\n      // 分页\r\n      pageSize: 10,\r\n      total: 10,\r\n      currentPage: 1,\r\n      // 角色新增弹窗\r\n      addOrEditTitle: \"\",\r\n      addRoleVisible: false,\r\n      // tenantList: [],\r\n      ruleForm: {\r\n        // tenant: '',\r\n        name: \"\",\r\n        remark: \"\",\r\n      },\r\n      rules: {\r\n        tenantName: [\r\n          { required: true, message: \"请选择租户\", trigger: \"change\" },\r\n        ],\r\n        name: [{ required: true, message: \"请输入名称\", trigger: \"blur\" }],\r\n      },\r\n      // 单条数据删除popover框\r\n      singleDelVis: false,\r\n      // 新增用户弹窗\r\n      addUserVisible: false,\r\n      // 批量删除提示框\r\n      batchDeleteVisible: false,\r\n      // 当前选中行\r\n      selectRows: [],\r\n      // 当前操作行id\r\n      rowId: \"\",\r\n    };\r\n  },\r\n  watch: {\r\n    date(val) {\r\n      if (val) {\r\n        let startTime = this.$formatDate(val[0]);\r\n        let endTime = this.$formatDate(val[1]);\r\n        this.dateValue = [startTime, endTime];\r\n      } else {\r\n        this.dateValue = [];\r\n      }\r\n    },\r\n  },\r\n  mounted() {},\r\n  computed: {},\r\n  created() {\r\n    this.queryList();\r\n  },\r\n  methods: {\r\n    // 重置\r\n    reset() {\r\n      this.name = \"\";\r\n      this.date = \"\";\r\n    },\r\n    // 从第一页开始搜索\r\n    initList() {\r\n      this.currentPage = 1;\r\n      this.queryList();\r\n    },\r\n    // 列表查询\r\n    queryList() {\r\n      // name(输入名称或者描述搜索) crtDate(时间控制) size(分页条数)  page(页码)\r\n      let request = {\r\n        name: this.name,\r\n        crtDateBeg: this.dateValue[0] || '',\r\n        crtDateEnd: this.dateValue[1] || '', \r\n        size: this.pageSize,\r\n        page: this.currentPage,\r\n      };\r\n      this.$api.qryRoleListPage(request).then((res) => {\r\n        if (res.data && res.data.records) {\r\n          this.tableData = res.data.records;\r\n          this.total = res.data.total;\r\n        }\r\n      });\r\n    },\r\n    // 复选框选中\r\n    handleSelectionChange(val) {\r\n      this.selectRows = val;\r\n    },\r\n    // 角色新增\r\n    addRole() {\r\n      this.addOrEditTitle = \"新增角色\";\r\n      this.addRoleVisible = true;\r\n      this.$nextTick(() => {\r\n        this.$refs[\"ruleForm\"].resetFields();\r\n      });\r\n    },\r\n    // 新增/编辑角色弹窗确定\r\n    confirmAddRole() {\r\n      this.$refs[\"ruleForm\"].validate((valid) => {\r\n        if (valid) {\r\n          if (this.addOrEditTitle === \"新增角色\") {\r\n            this.$api\r\n              .createRole({\r\n                name: this.ruleForm.name,\r\n                remark: this.ruleForm.remark,\r\n              })\r\n              .then((res) => {\r\n                if (res.code == 200 || res.code == 0) {\r\n                  this.$message.success(res.msg);\r\n                  this.addRoleVisible = false;\r\n                  this.queryList();\r\n                } else {\r\n                  this.$message.error(res.msg);\r\n                }\r\n              });\r\n          } else if (this.addOrEditTitle === \"编辑角色\") {\r\n            this.$api\r\n              .updateRole({\r\n                id: this.rowId,\r\n                name: this.ruleForm.name,\r\n                remark: this.ruleForm.remark,\r\n              })\r\n              .then((res) => {\r\n                if (res.code == 200 || res.code == 0) {\r\n                  this.$message.success(res.msg);\r\n                  this.addRoleVisible = false;\r\n                  this.ruleForm = {};\r\n                  this.queryList();\r\n                } else {\r\n                  this.$message.error(res.msg);\r\n                }\r\n              });\r\n          }\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    // 新增用户弹窗  -- 打开\r\n    addUser(row) {\r\n      this.rowId = row.id;\r\n      this.ruleForm = {};\r\n      this.addUserVisible = true;\r\n    },\r\n    // 新增用户弹窗  -- 确定\r\n    confirmAddUser() {\r\n      this.addUserVisible = false;\r\n    },\r\n    // 新增用户弹窗  -- 关闭\r\n    closeAddUser() {\r\n      this.addUserVisible = false;\r\n    },\r\n    // 修改\r\n    modify(row) {\r\n      this.rowId = row.id;\r\n      this.addOrEditTitle = \"编辑角色\";\r\n      this.addRoleVisible = true;\r\n      this.$nextTick(() => {\r\n        this.ruleForm = { ...row };\r\n        this.$refs[\"ruleForm\"].resetFields();\r\n      });\r\n    },\r\n    // 关闭popover\r\n    handleClose(index) {\r\n      this.$refs[`popover-${index}`].doClose();\r\n    },\r\n    // 批量删除\r\n    batchDelete() {\r\n      this.batchDeleteVisible = true;\r\n    },\r\n    formatDateTime(dateTime) {\r\n      if (dateTime) {\r\n        let now = new Date(dateTime);\r\n        let year = now.getFullYear();\r\n        let month = now.getMonth() + 1;\r\n        let date = now.getDate();\r\n        return year + \"-\" + month + \"-\" + date + \" \";\r\n      }\r\n    },\r\n    // 批量删除提示框确定\r\n    confirmDelete() {\r\n      // 调接口  当前选中数据this.selectRows\r\n      let temp = [];\r\n      this.selectRows.forEach((item) => {\r\n        temp.push(item.id);\r\n      });\r\n      let request = {\r\n        ids: temp,\r\n      };\r\n      this.$api.deleteRole(request).then((res) => {\r\n        if (res.code == 200 || res.code == 0) {\r\n          this.batchDeleteVisible = false;\r\n          this.$message.success(res.msg);\r\n          this.queryList();\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      });\r\n    },\r\n    // 删除  --- 单行\r\n    delRow(row, index) {\r\n      // this.rowId = row.id;\r\n      let request = {\r\n        id: row.id,\r\n      };\r\n      // 调接口删除\r\n      this.$api.deleteRole(request).then((res) => {\r\n        if (res.code == 200 || res.code == 0) {\r\n          this.handleClose(index);\r\n          this.$message.success(res.msg);\r\n          this.queryList();\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      });\r\n    },\r\n    //  分页\r\n    handleCurrentChange(val) {\r\n      this.currentPage = val;\r\n      this.queryList();\r\n    },\r\n  },\r\n};\r\n",null]}