{"remainingRequest":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DataAssetPlatform000\\Pncui-Ind\\src\\views\\indicators\\dataLab\\datasearch\\maskingRulesConfig.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\src\\views\\indicators\\dataLab\\datasearch\\maskingRulesConfig.vue","mtime":1654848715703},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1650418886580}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n    name: 'MaskingRulesConfig',\r\n    data() {\r\n        return {\r\n          maskingRules: [],\r\n          addDialogVisible: false,\r\n          editDialogVisible: false,\r\n          importDialogVisible: false,\r\n            // 表格\r\n          tableData: [],\r\n          errorData: [],\r\n          ruleLevels: [1,2,3,4,5,6,7,8,9,10],\r\n          queryForm: {\r\n            sc_project_name: '',\r\n            sc_table_name: '',\r\n            sc_column_name: '',\r\n            sc_config_user: '',\r\n            sc_config_time: '',\r\n            size: 10,\r\n            page: 1,\r\n            total: 0,\r\n            loading: true\r\n          },\r\n          editForm: {},\r\n          importForm: {},\r\n          file:undefined,\r\n          fileList: [],\r\n          fileType: ['xlsx', 'xls'],\r\n          fileSize: 50,\r\n          editFormRules: {\r\n            projectName: [\r\n              {required: true, trigger: ['blur', 'change'], message: '请输入项目名称'}\r\n            ],\r\n            tableName: [\r\n              {required: true, trigger: ['blur', 'change'], message: '请输入表名称'}\r\n            ],\r\n            columnName: [\r\n              {required: true, trigger: ['blur', 'change'], message: '请输入字段名称'}\r\n            ],\r\n            maskingRule: [\r\n              {required: true, trigger: ['blur', 'change'], message: '请选择脱敏规则'}\r\n            ],\r\n            ruleLevel: [\r\n              {required: true, trigger: ['blur', 'change'], message: '请选择规则等级'}\r\n            ]\r\n          }\r\n        }\r\n    },\r\n    methods: {\r\n\r\n\r\n\r\n      //格式化日期\r\n      formatDate(row, column) {\r\n        // 获取单元格数据\r\n        let data = row[column.property]\r\n        if(data == null) {\r\n          return null\r\n        }\r\n        let dt = new Date(data)\r\n        return dt.getFullYear() + '-' + ((dt.getMonth() + 1)<10?'0'+ (dt.getMonth() + 1): (dt.getMonth() + 1) )+ '-' + (dt.getDate() < 10 ?'0' + dt.getDate() : dt.getDate()) + ' ' + (dt.getHours()<10?'0'+dt.getHours():dt.getHours()) + ':' + (dt.getMinutes()<10?'0'+dt.getMinutes():dt.getMinutes()) + ':' + (dt.getSeconds()<10?'0'+dt.getSeconds():dt.getSeconds())\r\n      },\r\n      //重置查询条件\r\n      resetQueryForm() {\r\n        this.queryForm.sc_project_name = ''\r\n        this.queryForm.sc_table_name = ''\r\n        this.queryForm.sc_column_name = ''\r\n        this.queryForm.sc_config_user = ''\r\n        this.queryForm.sc_config_time = ''\r\n        this.queryPageList()\r\n      },\r\n      async queryPageList() {\r\n        this.queryForm.loading = true\r\n        let res = await request({\r\n          url: '/datalab/maskingRulesConfig/list',\r\n          method: 'post',\r\n          data: {\r\n            pageSize: this.queryForm.size,\r\n            pageNum: this.queryForm.page,\r\n            projectName: this.queryForm.sc_project_name,\r\n            tableName: this.queryForm.sc_table_name,\r\n            columnName: this.queryForm.sc_column_name,\r\n            userName: this.queryForm.sc_config_user,\r\n            configTime: this.queryForm.sc_config_time\r\n          }\r\n        })\r\n        if (res.data && res.data.records) {\r\n          this.tableData = res.data.records\r\n          this.queryForm.total = res.data.total\r\n          this.queryForm.page = res.data.current\r\n\r\n        }\r\n        this.queryForm.loading = false\r\n            //console.log(res)\r\n      },\r\n      handleCloseDetail(){\r\n        this.addDialogVisible = false\r\n        this.editDialogVisible = false\r\n        this.importDialogVisible = false\r\n        this.$refs.editFormRef.resetFields()\r\n      },\r\n      // 分页\r\n      handleSizeChange(val) {\r\n        this.queryForm.size = val;\r\n        this.queryPageList();\r\n      },\r\n      handleCurrentChange(val) {\r\n        this.queryForm.page = val;\r\n        this.queryPageList();\r\n      },\r\n      //查询规则枚举\r\n      async queryMaskingRules() {\r\n        let res = await request({\r\n          url: '/datalab/maskingRulesConfig/getMaskingRules',\r\n          method: 'get',\r\n          data: {\r\n          }\r\n        })\r\n        if (res.data) {\r\n          this.maskingRules = res.data\r\n        }\r\n      },\r\n    //新增\r\n      handleAddRule() {\r\n        this.addDialogVisible = true\r\n        this.editForm = {}\r\n      },\r\n      //导入窗口\r\n      handleOnImport() {\r\n        this.importDialogVisible = true\r\n        this.fileList = []\r\n        this.file = undefined\r\n        this.errorData = []\r\n      },\r\n      //提交新增\r\n      handleSendAddRule() {\r\n        this.$refs['editFormRef'].validate(valid => {\r\n            if (valid) {\r\n              request({\r\n                url: '/datalab/maskingRulesConfig/add',\r\n                method: 'post',\r\n                data: {\r\n                  projectName: this.editForm.projectName,\r\n                  tableName: this.editForm.tableName,\r\n                  columnName: this.editForm.columnName,\r\n                  maskingRule: this.editForm.maskingRule,\r\n                  ruleLevel: this.editForm.ruleLevel\r\n                }\r\n              }).then(res => {\r\n                if (res.returnCode === '200') {\r\n                  this.$message({\r\n                    message: '新增成功',\r\n                    type: 'success'\r\n                  })\r\n                } else {\r\n                  this.$message({\r\n                    message: '新增失败',\r\n                    type: 'error'\r\n                  })\r\n                }\r\n                this.addDialogVisible = false\r\n                this.queryPageList()\r\n              })\r\n            } else {\r\n              return false\r\n            }\r\n          })\r\n      },\r\n      //配置脱敏规则\r\n      handleEditRule(row) {\r\n        this.editDialogVisible = true\r\n        this.editForm = row\r\n      },\r\n      //配置脱敏规则提交\r\n      handleSendEditRule() {\r\n        this.$refs['editFormRef'].validate(valid => {\r\n          if (valid) {\r\n            request({\r\n              url: '/datalab/maskingRulesConfig/update',\r\n              method: 'post',\r\n              data: {\r\n                id: this.editForm.id,\r\n                projectName: this.editForm.projectName,\r\n                tableName: this.editForm.tableName,\r\n                columnName: this.editForm.columnName,\r\n                maskingRule: this.editForm.maskingRule,\r\n                ruleLevel: this.editForm.ruleLevel\r\n              }\r\n            }).then(res => {\r\n              if (res.returnCode === '200') {\r\n                this.$message({\r\n                  message: '脱敏规则配置成功',\r\n                  type: 'success'\r\n                })\r\n              } else {\r\n                this.$message({\r\n                  message: '脱敏规则配置失败',\r\n                  type: 'error'\r\n                })\r\n              }\r\n              this.editDialogVisible = false\r\n              this.queryPageList()\r\n            })\r\n          } else {\r\n            return false\r\n          }\r\n        })\r\n      },\r\n      //上传文件\r\n      handleImportFile(file) {\r\n        this.file = file.raw\r\n        //this.$refs.uploadButton.submit()\r\n      },\r\n      uploadFile(){\r\n        this.errorData = []\r\n        if (!this.beforeUpload(this.file)) {\r\n          return\r\n        }\r\n        const formData = new FormData()\r\n        formData.append('file',this.file)\r\n        request({\r\n          url:'/datalab/maskingRulesConfig/importTemp',\r\n          method:'post',\r\n          headers:{'Content-Type':'multipart/form-data;charset=UTF-8'},\r\n          data:formData\r\n        }).then(res=>{\r\n          if (res.returnCode === '200') {\r\n            if (res.data){\r\n              this.$message({\r\n                message: '导入失败，请查看表格中的错误数据，重新导入',\r\n                type: 'error'\r\n              })\r\n              this.errorData = res.data\r\n            }else {\r\n              this.$message({\r\n                message: '导入成功',\r\n                type: 'success'\r\n              })\r\n\r\n              this.importDialogVisible = false\r\n              this.queryPageList()\r\n            }\r\n          } else {\r\n            this.$message({\r\n              message: '导入失败，' + res.returnMsg,\r\n              type: 'error'\r\n            })\r\n          }\r\n        })\r\n      },\r\n      //删除之前\r\n/*      handleRemove(file,fileList) {\r\n        this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          this.$emit('on-remove', fileList)\r\n          this.fileList = fileList\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消删除'\r\n          })\r\n        })\r\n      },*/\r\n      // 下载模板\r\n      handleDownloadTemplate() {\r\n        request({\r\n          url: '/datalab/maskingRulesConfig/downTemplate',\r\n          method: 'get',\r\n          data: {\r\n          },\r\n          responseType:'arraybuffer',\r\n        }).then((res) => {\r\n          const content = res.data;\r\n          const blob = new Blob([content]);\r\n          const contentDisposition = res.headers['content-disposition'];\r\n          const patt = new RegExp(\"fileName=([^;]+\\\\.[^\\\\.;]+);*\");\r\n          const result = patt.exec(contentDisposition);\r\n          const fileName = decodeURI(result[1]);\r\n          if (\"download\" in document.createElement(\"a\")) {\r\n            // 非IE下载\r\n            const elink = document.createElement(\"a\");\r\n            elink.download = fileName;\r\n            elink.style.display = \"none\";\r\n            elink.href = window.URL.createObjectURL(blob);\r\n            document.body.appendChild(elink);\r\n            elink.click();\r\n            window.URL.revokeObjectURL(elink.href); // 释放URL 对象\r\n            document.body.removeChild(elink);\r\n          } else {\r\n            // IE10+下载\r\n            navigator.msSaveBlob(blob, fileName);\r\n          }\r\n        }).catch(err => {\r\n          console.log(err)\r\n          this.$message.error('下载失败')\r\n        })\r\n      },\r\n      previewFile(file) {\r\n        if (file.url){\r\n          window.location.href = file.url\r\n        }\r\n      },\r\n      beforeUpload(file){\r\n        if (file === null || file === undefined) {\r\n          this.$message.error('请选择文件')\r\n          return false\r\n        }\r\n        const limitBody = this.fileUploadLimit(file,this.fileType)\r\n        if (limitBody.limit) {\r\n          this.$message({\r\n            message: limitBody.error,\r\n            type: 'error'\r\n          })\r\n        }\r\n        return !limitBody.limit\r\n      },\r\n      handleExceed(files, fileList) {\r\n        this.$message.error('仅可上传1个文件')\r\n      },\r\n      handleSuccess(res, file, fileList) {\r\n        this.$emit('on-success', this.fileList)\r\n      },\r\n      //文件上传限制\r\n      fileUploadLimit(file,fileType){\r\n        const filePost = file.name.substring(file.name.lastIndexOf('.')+1)\r\n        const extension = fileType.findIndex(item => item.toLowerCase().indexOf(filePost.toLowerCase()) > -1)\r\n        //文件大小限定50kb\r\n        const isLimit = file.size / 1024  < this.fileSize\r\n        if (extension === -1){\r\n          const fileTypeStr = fileType.join(',')\r\n          return {\r\n            limit : true,\r\n            error : '仅支持上传' + fileTypeStr + '格式文件'\r\n          }\r\n        }\r\n        return {\r\n          limit : !isLimit,\r\n          error : '文件大小不能超过' + this.fileSize + 'kb'\r\n        }\r\n      },\r\n      //编辑\r\n      handleEdit(index, row) {\r\n        this.editDialogVisible = true\r\n        this.editForm = row\r\n      },\r\n      //删除\r\n      handleDelete(index, row) {\r\n        this.$confirm('确定删除该条记录吗?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          request({\r\n            url: '/datalab/maskingRulesConfig/delete',\r\n            method: 'post',\r\n            data: {\r\n              id: row.id\r\n            }\r\n          }).then(res => {\r\n            if (res.returnCode === '200') {\r\n              this.$message({\r\n                type: 'success',\r\n                message: '删除成功!'\r\n              });\r\n              this.queryPageList()\r\n            } else {\r\n              this.$message({\r\n                type: 'error',\r\n                message: res.returnMsg\r\n              });\r\n            }\r\n          })\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消删除'\r\n          });\r\n        });\r\n      },\r\n    },\r\n    mounted() {\r\n      this.queryPageList()\r\n      this.queryMaskingRules()\r\n    }\r\n}\r\n",null]}