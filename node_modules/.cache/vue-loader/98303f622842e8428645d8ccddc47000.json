{"remainingRequest":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\eladmin-common\\src\\views\\tools\\storage\\qiniu\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\eladmin-common\\src\\views\\tools\\storage\\qiniu\\index.vue","mtime":1650418876950},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1650418886580}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport crudQiNiu from '../../../../api/tools/qiniu'\r\nimport { mapGetters } from 'vuex'\r\nimport { getToken } from '../../../../utils/auth'\r\nimport eForm from './form'\r\nimport CRUD, { presenter, header, crud } from '../../../../components/Crud/crud'\r\nimport rrOperation from '../../../../components/Crud/RR.operation'\r\nimport crudOperation from '../../../../components/Crud/CRUD.operation'\r\nimport pagination from '../../../../components/Crud/Pagination'\r\n\r\n// crud交由presenter持有\r\nconst defaultCrud = CRUD({ title: '七牛云文件', url: 'api/qiNiuContent', crudMethod: { ...crudQiNiu }})\r\nexport default {\r\n  components: { eForm, pagination, crudOperation, rrOperation },\r\n  mixins: [presenter(defaultCrud), header(), crud()],\r\n  data() {\r\n    return {\r\n      permission: {\r\n        del: ['admin', 'storage:del']\r\n      },\r\n      title: '文件', dialog: false,\r\n      icon: 'el-icon-refresh',\r\n      url: '', headers: { 'Authorization': getToken() },\r\n      dialogImageUrl: '', dialogVisible: false, fileList: [], files: [], newWin: null\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'qiNiuUploadApi'\r\n    ])\r\n  },\r\n  watch: {\r\n    url(newVal, oldVal) {\r\n      if (newVal && this.newWin) {\r\n        this.newWin.sessionStorage.clear()\r\n        this.newWin.location.href = newVal\r\n        // 重定向后把url和newWin重置\r\n        this.url = ''\r\n        this.newWin = null\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.crud.optShow.add = false\r\n    this.crud.optShow.edit = false\r\n  },\r\n  methods: {\r\n    // 七牛云配置\r\n    doConfig() {\r\n      const _this = this.$refs.form\r\n      _this.init()\r\n      _this.dialog = true\r\n    },\r\n    handleSuccess(response, file, fileList) {\r\n      const uid = file.uid\r\n      const id = response.id\r\n      this.files.push({ uid, id })\r\n    },\r\n    handleBeforeRemove(file, fileList) {\r\n      for (let i = 0; i < this.files.length; i++) {\r\n        if (this.files[i].uid === file.uid) {\r\n          crudQiNiu.del([this.files[i].id]).then(res => {})\r\n          return true\r\n        }\r\n      }\r\n    },\r\n    handlePictureCardPreview(file) {\r\n      this.dialogImageUrl = file.url\r\n      this.dialogVisible = true\r\n    },\r\n    // 刷新列表数据\r\n    doSubmit() {\r\n      this.fileList = []\r\n      this.dialogVisible = false\r\n      this.dialogImageUrl = ''\r\n      this.dialog = false\r\n      this.crud.toQuery()\r\n    },\r\n    // 监听上传失败\r\n    handleError(e, file, fileList) {\r\n      const msg = JSON.parse(e.message)\r\n      this.crud.notify(msg.message, CRUD.NOTIFICATION_TYPE.ERROR)\r\n    },\r\n    // 下载文件\r\n    download(id) {\r\n      this.downloadLoading = true\r\n      // 先打开一个空的新窗口，再请求\r\n      this.newWin = window.open()\r\n      crudQiNiu.download(id).then(res => {\r\n        this.downloadLoading = false\r\n        this.url = res.url\r\n      }).catch(err => {\r\n        this.downloadLoading = false\r\n        console.log(err.response.data.message)\r\n      })\r\n    },\r\n    // 同步数据\r\n    synchronize() {\r\n      this.icon = 'el-icon-loading'\r\n      crudQiNiu.sync().then(res => {\r\n        this.icon = 'el-icon-refresh'\r\n        this.$message({\r\n          showClose: true,\r\n          message: '数据同步成功',\r\n          type: 'success',\r\n          duration: 1500\r\n        })\r\n        this.crud.toQuery()\r\n      }).catch(err => {\r\n        this.icon = 'el-icon-refresh'\r\n        console.log(err.response.data.message)\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}