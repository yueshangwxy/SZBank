{"remainingRequest":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DataAssetPlatform000\\Pncui-Ind\\src\\views\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\src\\views\\index.vue","mtime":1655281112459},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1650418886580}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters, mapState } from \"vuex\";\r\nimport Avatar from \"@eladmin/assets/images/avatar.png\";\r\nimport RoleSelect from \"@eladmin/components/RoleSelect\";\r\nimport ThemeSelect from \"@portal/components/ThemeSelect\";\r\nimport Logo from \"@portal/layout/components/Sidebar/Logo\";\r\nimport * as echarts from \"echarts\";\r\n\r\nconst cnMap = {\r\n  公司银行: {\r\n    name1: \"company\",\r\n    name2: \"com\",\r\n  },\r\n  数字银行: {\r\n    name1: \"number\",\r\n    name2: \"num\",\r\n  },\r\n  零售银行: {\r\n    name1: \"retail\",\r\n    name2: \"sale\",\r\n  },\r\n  金融市场: {\r\n    name1: \"finance\",\r\n    name2: \"fin\",\r\n  },\r\n  公共类: {\r\n    name1: \"public\",\r\n    name2: \"pub\",\r\n  },\r\n};\r\nexport default {\r\n  name: \"home\",\r\n  components: {\r\n    RoleSelect,\r\n    ThemeSelect,\r\n    Logo,\r\n  },\r\n  data() {\r\n    return {\r\n      leftTree: [],\r\n      Avatar: Avatar,\r\n      dialogVisible: false,\r\n      searchValue: \"\", // 搜索内容\r\n      // 左侧\r\n      thirdList: [],\r\n      currentSecond: {},\r\n      currentName: \"\",\r\n      currentId: -1,\r\n      currentFirstDir: \"\",\r\n      currentSecondDir: \"\",\r\n      // 资产\r\n      assetsList: [],\r\n      // 部门\r\n      deptList: [], // 部门列表\r\n      // 部门滚动展示\r\n      currentProgressId: \"\",\r\n      scrollResultWidth: 0, //transform滚动的距离\r\n      signleWidth: 166, //单个流程的宽度\r\n      activeName: 0,\r\n      currentClickNumber: 0,\r\n      noScrollRight: true,\r\n      // 资产分类\r\n      pieData: [],\r\n      // 业务趋势\r\n      lineData: [],\r\n      // 机构规模排行\r\n      barData: [],\r\n      scaleDeptName: \"\",\r\n      // 分类账户数\r\n      scaleList: [],\r\n      // 我的收藏\r\n      assetList: [],\r\n      // 查询资产数据增长情况多折线图数据\r\n      monthList: [],\r\n      trendStatisticLegendColorList: [],\r\n      trendStatisticDeptList: [],\r\n      trendStatisticSeriesData: [],\r\n      netGoldDeptList: [],\r\n      retailDeptList: [],\r\n      companyDeptList: [],\r\n      mutualGoldList: [],\r\n      screenWidth: document.body.clientWidth,\r\n      screenHeight: document.body.clientHeight,\r\n      timer: null,\r\n      activeName: '',\r\n    };\r\n  },\r\n  mounted() {\r\n    const that = this;\r\n    window.onresize = () => {\r\n      window.screenWidth = document.body.clientWidth;\r\n      window.screenHeight = document.body.clientHeight;\r\n      that.screenWidth = window.screenWidth;\r\n      that.screenHeight = window.screenHeight;\r\n    };\r\n  },\r\n  watch: {\r\n    // 窗口宽度发生变化则刷新页面   更新echarts\r\n    screenWidth(oldVal, newVal) {\r\n      if (newVal != this.screenWidth) {\r\n        window.location.reload();\r\n      }\r\n    },\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"sidebar\", \"device\", \"user\", \"baseApi\"]),\r\n    ...mapState({\r\n      showBreadcrumb: (state) => state.settings.showBreadcrumb,\r\n    }),\r\n    showLogo() {\r\n      return this.$store.state.settings.sidebarLogo;\r\n    },\r\n    show: {\r\n      get() {\r\n        return this.$store.state.settings.showSettings;\r\n      },\r\n      set(val) {\r\n        this.$store.dispatch(\"settings/changeSetting\", {\r\n          key: \"showSettings\",\r\n          value: val,\r\n        });\r\n      },\r\n    },\r\n  },\r\n  created() {\r\n    // 加载数据\r\n    // 查询资产数量\r\n    this.queryAssetsCount();\r\n    // 查询部门笔数\r\n    this.queryDeptCount();\r\n    // 查询业务趋势折线图数据\r\n    this.queryLineData();\r\n    // 查询资产数据增长情况多折线图数据\r\n    this.queryLinesData(); // mock接口报错\r\n    // 查询我的各个资产收藏\r\n    this.queryCollection();\r\n    // 获取目录树\r\n    this.getLeftTree();\r\n    this.$nextTick(() => {\r\n      setTimeout(() => {\r\n        this.initgoRightArrow();\r\n      }, 100);\r\n    });\r\n  },\r\n  mounted() {\r\n    this.searchValue = \"\";\r\n  },\r\n  methods: {\r\n    setBlur() {\r\n      this.$refs.autocomplete.activated = true;\r\n    },\r\n    // 输入框\r\n    querySearch(queryString, cb) {\r\n      let request = {\r\n        page: 1,\r\n        size: 10,\r\n        keywords: queryString,\r\n        suggest: true,\r\n      };\r\n      setTimeout(() => {\r\n        this.$api.getListByKeywords(request).then((res) => {\r\n          let temp = res.obj;\r\n          let suggestion = [];\r\n          temp.forEach((item) => {\r\n            if (item.targetName) {\r\n              suggestion.push({\r\n                value: item.targetName,\r\n                assetType: item.assetType,\r\n              });\r\n            } else if (item.labelName) {\r\n              suggestion.push({\r\n                value: item.labelName,\r\n                assetType: item.assetType,\r\n              });\r\n            } else if (item.indexName) {\r\n              suggestion.push({\r\n                value: item.indexName,\r\n                assetType: item.assetType,\r\n              });\r\n            } else if (item.tableName) {\r\n              suggestion.push({\r\n                value: item.tableComment\r\n                  ? item.tableComment\r\n                  : \"\" + item.tableName,\r\n                assetType: item.assetType,\r\n              });\r\n            }\r\n          });\r\n          cb(suggestion);\r\n        });\r\n      }, 1000);\r\n    },\r\n    handleSelect(item) {\r\n      let type;\r\n      if (item.assetType === \"table\") {\r\n        type = 1;\r\n      } else if (item.assetType === \"api\") {\r\n        type = 2;\r\n      } else if (item.assetType === \"target\") {\r\n        type = 3;\r\n      } else if (item.assetType === \"label\") {\r\n        type = 4;\r\n      }\r\n      this.$router.push({\r\n        path: \"/asset/searchPage/index\",\r\n        query: {\r\n          data: this.searchValue,\r\n          from: \"home\",\r\n          type: type,\r\n        },\r\n      });\r\n    },\r\n    // 输入框值改变\r\n    inputChange(value) {\r\n      this.searchValue = value;\r\n      sessionStorage.setItem(\"searchKeyWords\", value);\r\n    },\r\n    globalSearch() {\r\n      this.$router.push({\r\n        path: \"/asset/searchPage/index\",\r\n        query: {\r\n          data: this.searchValue,\r\n          from: \"home\",\r\n        },\r\n      });\r\n    },\r\n    open() {\r\n      this.$confirm(\"确定注销并退出系统吗？\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n      }).then(() => {\r\n        this.logout();\r\n      });\r\n    },\r\n    logout() {\r\n      this.$store.dispatch(\"LogOut\").then(() => {\r\n        location.reload();\r\n      });\r\n    },\r\n    // 数字实现三位分割显示\r\n    numberFormat(value) {\r\n      if (!value) return \"0\";\r\n      var intPart = Number(value).toFixed(0); // 获取整数部分\r\n      var intPartFormat = intPart\r\n        .toString()\r\n        .replace(/(\\d)(?=(?:\\d{3})+$)/g, \"$1,\"); // 将整数部分逢三一断\r\n      var floatPart = \".00\"; // 预定义小数部分\r\n      var value2Array = value.toString().split(\".\");\r\n      // =2表示数据有小数位\r\n      if (value2Array.length === 2) {\r\n        floatPart = value2Array[1].toString(); // 拿到小数部分\r\n        if (floatPart.length === 1) {\r\n          // 补0\r\n          return intPartFormat + \".\" + floatPart + \"0\";\r\n        } else {\r\n          return intPartFormat + \".\" + floatPart;\r\n        }\r\n      } else {\r\n        return intPartFormat;\r\n      }\r\n    },\r\n    // 离开二级目录\r\n    leaveSecondArea() {\r\n      this.thirdList = [];\r\n      this.currentSecond = {};\r\n      this.currentName = \"\";\r\n      this.currentId = \"\";\r\n      this.currentFirstDir = \"\";\r\n      this.currentSecondDir = \"\";\r\n    },\r\n    getIconUrl(name) {\r\n      let picMap = {\r\n        公司银行: require(\"../../../assets/建筑.png\"),\r\n        // 公司银行: require(\"../../../assets/company.png\"),\r\n        数字银行: require(\"../../../assets/银行卡.png\"),\r\n        零售银行: require(\"../../../assets/理财.png\"),\r\n        金融市场: require(\"../../../assets/融资2.png\"),\r\n        公共类: require(\"../../../assets/文件柜.png\"),\r\n      };\r\n      return picMap[name];\r\n    },\r\n    clearSelectSecond() {\r\n      clearTimeout(this.timer);\r\n    },\r\n    showMore(item) {\r\n      console.log(item);\r\n      this.currentSecond = item;\r\n      this.currentName = item.name;\r\n    },\r\n    selectSecondData(name, id, item) {\r\n      this.timer = setTimeout(() => {\r\n        this.currentId = id;\r\n        this.currentName = name;\r\n        this.currentFirstDir = cnMap[name].name2;\r\n        this.currentSecondDir = id;\r\n        this.currentSecond = item;\r\n        this.thirdList = item.children.length > 0 ? item.children : [];\r\n      }, 300);\r\n    },\r\n    getLeftTree() {\r\n      this.$api.getCatalogueTreeSort().then((res) => {\r\n        this.leftTree = res.data;\r\n        console.log(res);\r\n      });\r\n    },\r\n    // 选择三级目录到检索页\r\n    // 0~3 表数据资产 4~6 指标数据资产 7~9 标签数据资产\r\n    selectThird(index, item, level) {\r\n      if (!this.currentSecond.id) {\r\n        return;\r\n      }\r\n      this.$router.push({\r\n        path: \"/asset/searchPage/index\",\r\n        query: {\r\n          // data: item.name,\r\n          index: level == 2 ? item.pid : this.currentSecond.pid,\r\n          firstDir: this.currentSecond.pid,\r\n          secondDir: this.currentSecond.contentsId,\r\n          thirdDir: level == 3 ? item.id : \"all\",\r\n          from: \"home\",\r\n        },\r\n      });\r\n    },\r\n    // 查询资产数量\r\n    queryAssetsCount() {\r\n      this.$api.queryAssetsCount().then((res) => {\r\n        this.assetsList = res.data;\r\n        this.getPieData();\r\n      });\r\n    },\r\n    // 查询部门笔数\r\n    queryDeptCount() {\r\n      this.$api.queryDeptCount().then((res) => {\r\n        this.deptList = res;\r\n        this.scaleDeptName = res[0].deptName;\r\n        this.queryOrganizationScaleRanking(res[0].deptCode);\r\n      });\r\n    },\r\n    // 查询资产分类饼图数据\r\n    queryPieData() {\r\n      this.$api.queryPieData().then((res) => {\r\n        this.pieData = res.data;\r\n      });\r\n    },\r\n    // 查询业务趋势折线图数据\r\n    queryLineData() {\r\n      this.$api.queryLineData().then((res) => {\r\n        this.lineData = res;\r\n        this.getLineData();\r\n      });\r\n    },\r\n    // 点击部门查询查询机构规模排行数据\r\n    getOrganizationDcaleRankingData(item) {\r\n      this.scaleDeptName = item.deptName;\r\n      this.queryOrganizationScaleRanking(item.deptCode);\r\n    },\r\n    // 根据部门编号查询机构规模排行数据\r\n    queryOrganizationScaleRanking(val) {\r\n      this.$api.queryOrganizationScaleRanking(val).then((res) => {\r\n        this.scaleList = res.accountCount;\r\n        this.barData = res.barData;\r\n\r\n        this.getBarData();\r\n      });\r\n    },\r\n    // 查询资产数据增长情况多折线图数据\r\n    async queryLinesData() {\r\n      let res = await this.$api.queryLinesData();\r\n      this.monthList = res.data.monthRange;\r\n\r\n      this.trendStatisticDeptList = Object.keys(res.data.series);\r\n      this.trendStatisticLegendColorList.push();\r\n      this.trendStatisticDeptList.forEach((dept) => {\r\n        this.trendStatisticSeriesData.push({\r\n          name: dept,\r\n          type: \"line\",\r\n          data: res.data.series[dept],\r\n        });\r\n        let r = Math.floor(Math.random() * 256);\r\n        let g = Math.floor(Math.random() * 256);\r\n        let b = Math.floor(Math.random() * 256);\r\n        this.trendStatisticLegendColorList.push(`rgba(${r},${g},${b},1)`);\r\n      });\r\n      this.getLineListData();\r\n    },\r\n    // 查询我的各个资产收藏\r\n    queryCollection() {\r\n      this.$api.queryCollection().then((res) => {\r\n        this.assetList = res.data;\r\n      });\r\n    },\r\n    // 到检索页\r\n    goTo(value) {\r\n      this.$router.push({\r\n        path: \"/asset/searchPage/index\",\r\n        query: {\r\n          type: value,\r\n          assetType: value,\r\n        },\r\n      });\r\n    },\r\n    //初始化判断是否可以向右滚动\r\n    initgoRightArrow() {\r\n      const currentScrollWidth = this.$refs[`fixedBox`].clientWidth;\r\n      const canNumber = Math.floor(currentScrollWidth / this.signleWidth); //可以放下的个数\r\n      //如果最后一个流程图标已经展示出来，则停止滚动\r\n      if (this.currentClickNumber + canNumber >= this.deptList.length) {\r\n        this.noScrollRight = false;\r\n        return;\r\n      }\r\n    },\r\n    //点击上一个\r\n    fnPrev() {\r\n      //如果右点击的次数大于0，才可以左滚\r\n      if (this.currentClickNumber > 0) {\r\n        this.currentClickNumber -= 1;\r\n        this.noScrollRight = true;\r\n        this.fnScrollWidth(\"reduce\");\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n    //点击下一个\r\n    fnNext() {\r\n      const currentScrollWidth = this.$refs[`fixedBox`].clientWidth;\r\n      const canNumber = Math.floor(currentScrollWidth / this.signleWidth); //可以放下的个数\r\n      //如果最后一个流程图标已经展示出来，则停止滚动\r\n      if (this.currentClickNumber + canNumber >= this.deptList.length) {\r\n        return;\r\n      }\r\n      //说明放不下有滚动条\r\n      if (this.deptList.length > canNumber) {\r\n        this.currentClickNumber += 1;\r\n        if (this.currentClickNumber + canNumber >= this.deptList.length) {\r\n          this.noScrollRight = false;\r\n        }\r\n        this.fnScrollWidth(\"add\");\r\n      }\r\n    },\r\n    //translate的宽度\r\n    fnScrollWidth(type) {\r\n      let result = 0;\r\n      if (type === \"reduce\") {\r\n        result = 166;\r\n      } else if (type === \"add\") {\r\n        result = -166;\r\n      } else {\r\n        result = 0;\r\n      }\r\n      this.scrollResultWidth += result;\r\n    },\r\n    // 资产分类 环状饼图\r\n    getPieData() {\r\n      var chartDom = document.getElementById(\"asset-classification\");\r\n      var myChart = echarts.init(chartDom);\r\n      var option;\r\n      let dataList = [\r\n        { value: Number(this.assetsList.table), name: \"表资产\" },\r\n        { value: Number(this.assetsList.api), name: \"API资产\" },\r\n        { value: Number(this.assetsList.target), name: \"指标资产\" },\r\n        { value: Number(this.assetsList.label), name: \"标签资产\" },\r\n      ];\r\n      option = {\r\n        color: [\r\n          \"rgba(126, 131, 237, 1)\",\r\n          \"rgba(66.55499999999999, 188.20274999999998, 221.85, 1)\",\r\n          \"rgba(229.5, 177.48000000000002, 45.9, 1)\",\r\n          \"rgba(57.375, 129.09375, 229.5, 1)\",\r\n        ],\r\n        tooltip: {\r\n          trigger: \"item\",\r\n        },\r\n        legend: {\r\n          selectedMode: false,\r\n          top: \"15%\",\r\n          left: \"60%\",\r\n          orient: \"Vertical\",\r\n        },\r\n        series: [\r\n          {\r\n            name: \"\",\r\n            type: \"pie\",\r\n            radius: [\"60%\", \"80%\"],\r\n            center: [\"30%\", \"50%\"],\r\n            avoidLabelOverlap: false,\r\n            label: {\r\n              show: false,\r\n              position: \"center\",\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: true,\r\n                fontSize: \"12\",\r\n                // fontWeight: \"bold\",\r\n                color: \"rgba(56, 81, 105, 1)\",\r\n                formatter: \"{c|{c}}笔\\n{b|{b}}\",\r\n                rich: {\r\n                  b: {\r\n                    color: \"rgba(128, 128, 128, 1)\",\r\n                    fontSize: \"12\",\r\n                  },\r\n                  c: {\r\n                    color: \"rgba(56, 81, 105, 1)\",\r\n                    fontSize: \"16\",\r\n                  },\r\n                },\r\n              },\r\n            },\r\n            labelLine: {\r\n              show: false,\r\n            },\r\n            data: dataList,\r\n          },\r\n        ],\r\n      };\r\n\r\n      option && myChart.setOption(option);\r\n    },\r\n    // 业务趋势 折线图\r\n    getLineData() {\r\n      let monthList = this.lineData.month;\r\n      let tablePerList = this.lineData.percent.table;\r\n      let apiPerList = this.lineData.percent.api;\r\n      let targetPerList = this.lineData.percent.target;\r\n      let labelPerList = this.lineData.percent.label;\r\n\r\n      var chartDom = document.getElementById(\"business-trends\");\r\n      var myChart = echarts.init(chartDom);\r\n      var option;\r\n\r\n      option = {\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n        },\r\n        color: [\r\n          \"rgba(126, 131, 237, 1)\",\r\n          \"rgba(66.55499999999999, 188.20274999999998, 221.85, 1)\",\r\n          \"rgba(229.5, 177.48000000000002, 45.9, 1)\",\r\n          \"rgba(57.375, 129.09375, 229.5, 1)\",\r\n        ],\r\n        grid: {\r\n          left: \"10%\",\r\n          right: \"5%\",\r\n          top: \"5%\",\r\n          bottom: \"15%\",\r\n        },\r\n        xAxis: {\r\n          type: \"category\",\r\n          boundaryGap: false,\r\n          data: monthList,\r\n        },\r\n        yAxis: {\r\n          type: \"value\",\r\n          name: \"%\",\r\n          axisLabel: {\r\n            formatter: \"{value}%\",\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            data: tablePerList,\r\n            type: \"line\",\r\n            areaStyle: {\r\n              color: {\r\n                type: \"linear\",\r\n                x: 0,\r\n                y: 0,\r\n                x2: 0,\r\n                y2: 1,\r\n                colorStops: [\r\n                  {\r\n                    offset: 0,\r\n                    color: \"rgba(126, 131, 237, 1)\", // 0% 处的颜色\r\n                  },\r\n                  {\r\n                    offset: 1,\r\n                    color: \"rgba(242.8977, 247.35, 239.9295, 1)\", // 100% 处的颜色\r\n                  },\r\n                ],\r\n                global: false, // 缺省为 false\r\n              },\r\n            },\r\n          },\r\n          {\r\n            data: apiPerList,\r\n            type: \"line\",\r\n            areaStyle: {\r\n              color: {\r\n                type: \"linear\",\r\n                x: 0,\r\n                y: 0,\r\n                x2: 0,\r\n                y2: 1,\r\n                colorStops: [\r\n                  {\r\n                    offset: 0,\r\n                    color:\r\n                      \"rgba(66.55499999999999, 188.20274999999998, 221.85, 1)\", // 0% 处的颜色\r\n                  },\r\n                  {\r\n                    offset: 1,\r\n                    color: \"rgba(242.8977, 247.35, 239.9295, 1)\", // 100% 处的颜色\r\n                  },\r\n                ],\r\n                global: false, // 缺省为 false\r\n              },\r\n            },\r\n          },\r\n          {\r\n            data: targetPerList,\r\n            type: \"line\",\r\n            areaStyle: {\r\n              color: {\r\n                type: \"linear\",\r\n                x: 0,\r\n                y: 0,\r\n                x2: 0,\r\n                y2: 1,\r\n                colorStops: [\r\n                  {\r\n                    offset: 0,\r\n                    color: \"rgba(229.5, 177.48000000000002, 45.9, 1)\", // 0% 处的颜色\r\n                  },\r\n                  {\r\n                    offset: 1,\r\n                    color: \"rgba(242.8977, 247.35, 239.9295, 1)\", // 100% 处的颜色\r\n                  },\r\n                ],\r\n                global: false, // 缺省为 false\r\n              },\r\n            },\r\n          },\r\n          {\r\n            data: labelPerList,\r\n            type: \"line\",\r\n            areaStyle: {\r\n              color: {\r\n                type: \"linear\",\r\n                x: 0,\r\n                y: 0,\r\n                x2: 0,\r\n                y2: 1,\r\n                colorStops: [\r\n                  {\r\n                    offset: 0,\r\n                    color: \"rgba(57.375, 129.09375, 229.5, 1)\", // 0% 处的颜色\r\n                  },\r\n                  {\r\n                    offset: 1,\r\n                    color: \"rgba(242.8977, 247.35, 239.9295, 1)\", // 100% 处的颜色\r\n                  },\r\n                ],\r\n                global: false, // 缺省为 false\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      };\r\n\r\n      option && myChart.setOption(option);\r\n    },\r\n    // 机构规模排行 柱状图\r\n    getBarData() {\r\n      let obj = [];\r\n      this.barData.count.forEach((item, key) => {\r\n        obj.push({ count: item, name: this.barData.name[key] });\r\n      });\r\n      // 倒序\r\n      obj.sort((a, b) => {\r\n        return a.count - b.count;\r\n      });\r\n      var nameList = [];\r\n      var countList = [];\r\n      obj.map((item) => {\r\n        nameList.push(item.name);\r\n        countList.push(item.count);\r\n      });\r\n      var chartDom = document.getElementById(\"organization-scale-ranking\");\r\n      var myChart = echarts.init(chartDom);\r\n      var option;\r\n      option = {\r\n        // title: {\r\n        //   text: \"World Population\",\r\n        // },\r\n        color: [\"rgba(139, 201, 73, 1)\"],\r\n        tooltip: {\r\n          show: true,\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"shadow\",\r\n          },\r\n        },\r\n        legend: {\r\n          show: false,\r\n        },\r\n        grid: {\r\n          top: \"3%\",\r\n          left: \"3%\",\r\n          right: \"24%\",\r\n          bottom: \"3%\",\r\n          containLabel: true,\r\n        },\r\n        xAxis: {\r\n          type: \"value\",\r\n          boundaryGap: [0, 0.01],\r\n          axisLine: {\r\n            show: false,\r\n          },\r\n          axisTick: {\r\n            show: false,\r\n          },\r\n          splitLine: {\r\n            show: false,\r\n          },\r\n          axisLabel: {\r\n            show: false,\r\n          },\r\n        },\r\n        yAxis: {\r\n          type: \"category\",\r\n          data: nameList,\r\n          axisLine: {\r\n            show: false,\r\n          },\r\n          axisTick: {\r\n            show: false,\r\n          },\r\n          splitLine: {\r\n            show: false,\r\n          },\r\n        },\r\n        series: [\r\n          {\r\n            type: \"bar\",\r\n            barWidth: \"20\",\r\n            data: countList,\r\n            label: {\r\n              show: true,\r\n              position: \"right\",\r\n              // position: 'insideBottom',\r\n              offset: [0, 0],\r\n            },\r\n\r\n            itemStyle: {\r\n              emphasis: {\r\n                barBorderRadius: 10,\r\n              },\r\n              normal: {\r\n                barBorderRadius: 10,\r\n              },\r\n            },\r\n            // backgroundStyle  4.7版本开始支持，目前版本4.2.1\r\n            // showBackground: true,\r\n            // backgroundStyle: {\r\n            //   color: \"rgba(242.8977, 247.35, 239.9295, 1)\",\r\n            // },\r\n          },\r\n        ],\r\n      };\r\n      option && myChart.setOption(option);\r\n    },\r\n    // 资产数据增长情况 折线图\r\n    getLineListData() {\r\n      var chartDom = document.getElementById(\"data-asset-growth\");\r\n      var myChart = echarts.init(chartDom);\r\n      var option;\r\n\r\n      option = {\r\n        color: this.trendStatisticLegendColorList,\r\n        tooltip: {\r\n          show: true,\r\n          trigger: \"axis\",\r\n          // axisPointer: {\r\n          //   type: \"shadow\",\r\n          // },\r\n        },\r\n        legend: {\r\n          selectedMode: false,\r\n          show: true,\r\n          legend: {\r\n            data: this.trendStatisticDeptList,\r\n          },\r\n        },\r\n        grid: {\r\n          top: \"18%\",\r\n          left: \"0%\",\r\n          right: \"0%\",\r\n          bottom: \"0%\",\r\n          containLabel: true,\r\n        },\r\n        xAxis: {\r\n          type: \"category\",\r\n          boundaryGap: false,\r\n          data: this.monthList,\r\n        },\r\n        yAxis: {\r\n          type: \"value\",\r\n          axisLabel: {\r\n            // formatter: \"{value}%\",\r\n            formatter: \"{value}\",\r\n          },\r\n        },\r\n        series: this.trendStatisticSeriesData,\r\n      };\r\n\r\n      option && myChart.setOption(option);\r\n    },\r\n    // 跳转我的收藏页面\r\n    jumpCollection(index) {\r\n      let params = \"\";\r\n      if (index == 0) {\r\n        params = \"table\";\r\n      } else if (index == 1) {\r\n        params = \"api\";\r\n      } else if (index == 2) {\r\n        params = \"target\";\r\n      } else if (index == 3) {\r\n        params = \"label\";\r\n      }\r\n      this.$router.push({\r\n        path: \"/asset/myCollection/index\",\r\n        query: {\r\n          activeName: params,\r\n        },\r\n      });\r\n    },\r\n  },\r\n};\r\n",null]}