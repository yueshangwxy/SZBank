{"remainingRequest":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\src\\views\\indicators\\category\\category.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\src\\views\\indicators\\category\\category.vue","mtime":1624954643000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport crudIndCategory from '../../../api/indicators/indCategory'\nexport default {\n  name: 'IndCategory',\n  // components: { pagination, crudOperation, rrOperation, udOperation },\n  props: {\n    type: { type: String, default: '1' },\n    parentId: { type: String, default: '0' }\n  },\n  // mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\n  data() {\n    return {\n      filterText: '',\n      defaultProps: { children: 'children', label: 'name' },\n      treeData: [{ id: '0', categoryType: this.type, categoryName: '全部类别', children: [] }],\n      permission: {\n        add: ['admin', 'indCategory:add'],\n        edit: ['admin', 'indCategory:edit'],\n        del: ['admin', 'indCategory:del']\n      },\n      rules: {\n        id: [\n          { required: true, message: '分类ID不能为空', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  watch: {\n    filterText(val) {\n      this.$refs.tree.filter(val)\n    }\n  },\n  mounted() {\n    // console.log('=====category---mounted....')\n    this.init()\n  },\n  methods: {\n    // 获取数据前设置好接口地址\n    /*  [CRUD.HOOK.beforeRefresh]() {\n        return true\n    },*/\n    filterNode(value, treeData) {\n      if (!value) return true\n      return treeData.categoryName.indexOf(value) !== -1\n    },\n    // 点击事件\n    handleNodeClick(data) {\n      this.$emit('node-click', data)\n    },\n    handleAdd(data) {\n      const $this = this\n      this.$prompt('输入节点名称', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消'\n        // inputPattern: /[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?/,\n        // inputErrorMessage: '邮箱格式不正确'\n      }).then(({ value }) => {\n        console.log('========', value)\n        crudIndCategory.crud.add({\n          categoryName: value,\n          categoryType: data.categoryType,\n          parentId: data.id\n        }).then(res => {\n          $this.$message({\n            type: 'success',\n            message: '添加成功 '\n          })\n          $this.init()\n          // this.crud.notify(this.dict.label.user_status[val] + '成功', CRUD.NOTIFICATION_TYPE.SUCCESS)\n        }).catch(() => {\n          console.log('新增异常')\n          $this.$message({\n            type: 'error',\n            message: '添加失败 '\n          })\n        })\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '添加失败'\n        })\n      })\n    },\n    handleEdit(data) {\n      const $this = this\n      this.$prompt('输入节点名称', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        inputValue: data.categoryName\n        // inputPattern: /[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?/,\n        // inputErrorMessage: '邮箱格式不正确'\n      }).then(({ value }) => {\n        crudIndCategory.crud.edit({\n          categoryName: value,\n          id: data.id\n        }).then(res => {\n          $this.$message({\n            type: 'success',\n            message: '修改成功 '\n          })\n          $this.init()\n        }).catch(() => {\n          $this.$message({\n            type: 'error',\n            message: '修改失败 '\n          })\n        })\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '修改失败'\n        })\n      })\n    },\n    handleRemove(node, data) {\n      const $this = this\n      this.$confirm('确定要删除该节点及其所有子节点吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        crudIndCategory.crud.del([data.id]).then(res => {\n          if (res.code !== 0) {\n            $this.$message({\n              type: 'error',\n              message: '删除失败,' + res.msg\n            })\n          } else {\n            $this.$message({\n              type: 'success',\n              message: '删除成功 '\n            })\n          }\n          $this.init()\n\n          // this.crud.notify(this.dict.label.user_status[val] + '成功', CRUD.NOTIFICATION_TYPE.SUCCESS)\n        }).catch(() => {\n          console.log('删除异常')\n          $this.$message({\n            type: 'error',\n            message: '删除失败 '\n          })\n        })\n      }).catch(() => {\n      })\n    },\n    init() {\n      crudIndCategory.tree(this.type, this.parentId).then(res => {\n        // console.log('======crudIndCategory.init======', res)\n        this.treeData[0].children = res.data\n        // this.crud.notify(this.dict.label.user_status[val] + '成功', CRUD.NOTIFICATION_TYPE.SUCCESS)\n      }).catch(() => {\n        console.log('')\n        // data.enabled = !data.enabled\n      })\n    }\n  }\n}\n",null]}