{"remainingRequest":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\pncui-workflow\\src\\views\\activiti\\model.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\pncui-workflow\\src\\views\\activiti\\model.vue","mtime":499162500000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport { models, addModel, delModel, pubModel, expModel, impModel } from '../../api/workflow/activiti'\nimport FlowEditor from '../../components/Activiti/FlowEditor'\n\nexport default {\n  name: 'Model',\n  data() {\n    return {\n      rows: [],\n      loading: false,\n      showEdit: false,\n      showAdd: false,\n      showPublish: false,\n      showImport: false,\n      modelId: '',\n      modelName: '',\n      fileData: {},\n      query: {\n        modelName: '',\n        modelKey: ''\n      },\n      form: {\n        modelName: '',\n        modelKey: '',\n        deployName: '',\n        category: '',\n        id: '',\n        uploadFiles: []\n      },\n      page: {\n        // 页码\n        start: 0,\n        // 每页数据条数\n        size: 10,\n        // 总数据条数\n        total: 0\n      },\n      rules: {\n        modelName: [\n          { required: true, message: '名称不能为空', trigger: 'blur' }\n        ],\n        modelKey: [\n          { required: true, message: 'Key不能为空', trigger: 'blur' }\n        ]\n      },\n      rules2: {\n        deployName: [\n          { required: true, message: '名称不能为空', trigger: 'blur' }\n        ],\n        category: [\n          { required: true, message: '分类不能为空', trigger: 'blur' }\n        ]\n      },\n      rules3: {\n        modelName: [\n          { required: true, message: '名称不能为空', trigger: 'blur' }\n        ],\n        modelKey: [\n          { required: true, message: 'Key不能为空', trigger: 'blur' }\n        ],\n        uploadFiles: [{\n          required: true, message: '模型文件不能为空', trigger: 'change'\n        }]\n      }\n    }\n  },\n  components: { FlowEditor },\n  mounted() {\n    this.refresh()\n  },\n  methods: {\n    refresh() {\n      models({\n          key: this.query.modelKey,\n          name: this.query.modelName,\n          size: this.page.size,\n          page: this.page.start\n        }\n      ).then(res => {\n        //console.log(res)\n        this.rows = res.data.records\n        this.page.total = res.data.total\n      })\n    },\n    editModel(row) {\n      this.modelId = row.id\n      this.modelName = row.name\n      this.showEdit = true\n    },\n    addModel() {\n      this.showAdd = true\n      this.query.modelKey = ''\n      this.query.modelName = ''\n    },\n    doAddModel() {\n      addModel(\n        this.form.modelKey,\n        this.form.modelName).then(res => {\n        if (res.code === 0) {\n          this.showAdd = false\n          this.$message.success('添加成功' + res.data.id)\n          this.refresh()\n        } else {\n          this.$message.error(res.msg || '添加失败')\n        }\n        /*this.editModel({\n          id: res.data.id,\n          name: this.form.modelName\n        })*/\n      })\n    },\n    delModel(row) {\n      this.$confirm('确定要删除该模型吗？').then(() => {\n        delModel(row.id).then(res => {\n          if (res.code === 0) {\n            this.refresh()\n            this.$message.success('删除成功')\n          } else {\n            this.$message.error(res.msg)\n          }\n\n        })\n      })\n    },\n    pubModel(row) {\n      this.form.id = row.id\n      this.form.deployName = row.name\n      this.showPublish = true\n    },\n    doPublish() {\n      pubModel(this.form.id, this.form).then(res => {\n        if (res.code === 0) {\n          this.showPublish = false\n          this.$message.success('发布成功')\n          this.refresh()\n\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    expModel(row) {\n      expModel(row.id).then(res => {\n        const url = window.URL.createObjectURL(new Blob([res]))\n        const link = document.createElement('a')\n        link.style.display = 'none'\n        link.href = url\n        const fileName = (row.key || row.name) + '.bpmn'\n        link.setAttribute('download', fileName)\n        document.body.appendChild(link)\n        link.click()\n        document.body.removeChild(link)\n      })\n    },\n    handleChange(param) {\n      console.log('handchange--->>', param)\n      this.fileData.append('file', param.file)//传文件\n    },\n    submitUpload() {\n      this.fileData = new FormData()  // new formData对象\n      console.log('submit>>', this.fileData)\n      this.$refs.upload.submit()\n      let fd = new FormData()\n      fd.append('file', this.fileData)\n      this.fileData.append('modelName', this.form.modelName)\n      this.fileData.append('modelKey', this.form.modelKey)\n      console.log('befor upload>>', fd)\n      impModel(this.fileData).then(res => {\n        if (res.code == 0) {\n          this.showImport = false\n          this.$message.success('导入成功')\n          this.refresh()\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    handleRemove(file, fileList) {\n      console.log(file, fileList)\n    },\n    // 当前页改变\n    pageChangeHandler(e) {\n      this.page.start = e\n      this.refresh()\n    },\n    // 每页条数改变\n    sizeChangeHandler(e) {\n      this.page.size = e\n      this.page.start = 1\n      this.refresh()\n    }\n  }\n}\n",null]}