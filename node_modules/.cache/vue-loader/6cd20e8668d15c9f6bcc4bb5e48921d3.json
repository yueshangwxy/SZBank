{"remainingRequest":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DataAssetPlatform000\\Pncui-Ind\\src\\views\\indicators\\portalHome\\manager.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\src\\views\\indicators\\portalHome\\manager.vue","mtime":1652413401414},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1650418886580}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n    mapGetters,\n    mapState\n} from \"vuex\";\nimport Avatar from \"@eladmin/assets/images/avatar.png\";\nimport RoleSelect from \"@eladmin/components/RoleSelect\";\nimport ThemeSelect from \"@portal/components/ThemeSelect\";\nimport Logo from \"@portal/layout/components/Sidebar/Logo\";\nimport MenuManager from './menuManager.vue'\nimport UserManager from './userManager.vue'\nimport OrganizationManager from './organizationManager.vue'\nexport default {\n    name: \"manager\",\n    components: {\n        RoleSelect,\n        ThemeSelect,\n        Logo,\n        MenuManager,\n        UserManager,\n        OrganizationManager\n    },\n    data() {\n        return {\n            Avatar: Avatar,\n            logo: require('../../../../public/images/logo.png'),\n            activeTab: '',\n            tabList: [\n                {\n                    name: 'menuManager',\n                    label: '菜单管理',\n                },\n                {\n                    name: 'userManager',\n                    label: '用户管理',\n                },\n                {\n                    name: 'organizationManager',\n                    label: '机构管理',\n                },\n            ],\n        };\n    },\n    watch: {\n        activeTab(val) {\n            if(val==='menuManager') {\n                \n            }else if(val==='userManager') {\n                \n            }else {\n                \n            }\n        },\n    },\n    created() {\n        \n    },\n    mounted() {\n        this.activeTab = 'menuManager'\n    },\n    computed: {\n        ...mapGetters([\"sidebar\", \"device\", \"user\", \"baseApi\"]),\n        ...mapState({\n            showBreadcrumb: (state) => state.settings.showBreadcrumb,\n        }),\n        showLogo() {\n            return this.$store.state.settings.sidebarLogo;\n        },\n        show: {\n            get() {\n                return this.$store.state.settings.showSettings;\n            },\n            set(val) {\n                this.$store.dispatch(\"settings/changeSetting\", {\n                    key: \"showSettings\",\n                    value: val,\n                });\n            },\n        },\n    },\n    created() {\n        \n    },\n    methods: {\n        // 退出登录提示\n        open() {\n            this.$confirm(\"确定注销并退出系统吗？\", \"提示\", {\n                confirmButtonText: \"确定\",\n                cancelButtonText: \"取消\",\n                type: \"warning\",\n            }).then(() => {\n                this.logout();\n            });\n        },\n        // 退出登录\n        logout() {\n            this.$store.dispatch(\"LogOut\").then(() => {\n                location.reload();\n            });\n        },\n    },\n};\n",null]}