{"remainingRequest":"D:\\SZBank\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\SZBank\\node_modules\\pncui-workflow\\src\\views\\activiti\\todolist.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\SZBank\\node_modules\\pncui-workflow\\src\\views\\activiti\\todolist.vue","mtime":1650418882912},{"path":"D:\\SZBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\SZBank\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733},{"path":"D:\\SZBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\SZBank\\node_modules\\vue-loader\\lib\\index.js","mtime":1650418886580}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from 'vuex'\nimport { myTasks, processTask, assigneeTask, getUsers } from '../../api/workflow/activiti'\nimport FlowImage from '../../components/Activiti/FlowImage'\n//import checkApprove from '../indicators/indicator/approve/checkApprove'\nimport Processes from './processes'\n\nexport default {\n  name: 'TodoList',\n  dicts: ['PROCESS_ID'],\n  components: { FlowImage,// checkApprove,\n    Processes },\n  data() {\n    return {\n      query: { type: '1', finished: '', processId: '', processName: '' },\n      form: { taskId: '', assignee: '', comment: '', parameter: '' },\n      current: {},\n      rows: [],\n      loading: false,\n      startFlow: false,\n      isAssign: false,\n      showImage: false,\n      businessKey: '',\n      users: [],\n      page: {\n        // 页码\n        start: 0,\n        // 每页数据条数\n        size: 10,\n        // 总数据条数\n        total: 0\n      }\n    }\n  },\n  mounted() {\n    this.refresh()\n    getUsers({\n      page: 0,\n      size: 999,\n      sort: 'username,desc',\n      deptId: this.user().deptId,\n      enabled: true\n    }).then(res => {\n      this.users = res.content\n    })\n  },\n  methods: {\n    refresh() {\n      // console.log('==refresh======', this.currentRole())\n      myTasks({\n          order: 'desc',\n          latest: true,\n          sort: 'startTime',\n          size: this.page.size,\n          start: this.page.start,\n          type: (this.query.type == '4' || this.query.type == '5') ? '3' : this.query.type,\n          finished: this.query.type == '4' ? true : this.query.type == '0' ? '' : false,\n          processName: this.query.processName,\n          starter: this.query.starter\n        }\n      ).then(res => {\n        // console.log(res)\n        this.rows = res.data.records\n        this.page.total = res.data.total\n      })\n    },\n    viewImage(row) {\n      this.current.processInstanceId = row.processInstanceId\n      this.current.processDefinitionId = row.processDefinitionId\n      this.showImage = true\n    },\n    toProcess(row) {\n      this.form.taskId = row.id\n      this.startFlow = true\n      this.isAssign = false\n    },\n    toAssignee(row) {\n      this.form.taskId = row.id\n      this.startFlow = true\n      this.isAssign = true\n    },\n    doProcess(row) {\n      if (row.processId == 'Pncs.001') {\n\n        this.businessKey = row.businessKey\n        console.log('======doProcess=======', this.businessKey)\n        this.$refs['indexProcess'].approveDialog = true\n      }\n    },\n    processSuccess() {\n      this.refresh()\n    },\n    // 当前页改变\n    pageChangeHandler(e) {\n      this.page.start = e\n      this.refresh()\n    },\n    // 每页条数改变\n    sizeChangeHandler(e) {\n      this.page.size = e\n      this.page.start = 1\n      this.refresh()\n    },\n    ...mapGetters(['currentRole', 'user'])\n  }\n}\n",null]}