{"remainingRequest":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\code\\indicator\\Pncui-Indicator\\node_modules\\eladmin-common\\src\\views\\tools\\picture\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\eladmin-common\\src\\views\\tools\\picture\\index.vue","mtime":499162500000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from 'vuex'\nimport crudPic from '../../../api/tools/picture'\nimport CRUD, { presenter, header, crud } from '../../../components/Crud/crud'\nimport { getToken } from '../../../utils/auth'\nimport rrOperation from '../../../components/Crud/RR.operation'\nimport crudOperation from '../../../components/Crud/CRUD.operation'\nimport pagination from '../../../components/Crud/Pagination'\n\n// crud交由presenter持有\nconst defaultCrud = CRUD({ title: '图片', url: 'api/pictures', crudMethod: { ...crudPic }})\nexport default {\n  name: 'Pictures',\n  components: { pagination, crudOperation, rrOperation },\n  mixins: [presenter(defaultCrud), header(), crud()],\n  data() {\n    return {\n      dialog: false,\n      syncLoading: false,\n      headers: {\n        'Authorization': getToken()\n      },\n      permission: {\n        del: ['admin', 'pictures:del']\n      },\n      dialogImageUrl: '',\n      dialogVisible: false,\n      fileList: [],\n      pictures: []\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'imagesUploadApi'\n    ])\n  },\n  created() {\n    this.crud.optShow.add = false\n    this.crud.optShow.edit = false\n  },\n  methods: {\n    handleSuccess(response, file, fileList) {\n      const uid = file.uid\n      const id = response.id\n      this.pictures.push({ uid, id })\n    },\n    handleBeforeRemove(file, fileList) {\n      for (let i = 0; i < this.pictures.length; i++) {\n        if (this.pictures[i].uid === file.uid) {\n          crudPic.del(this.pictures[i].id).then(res => {})\n          return true\n        }\n      }\n    },\n    handlePictureCardPreview(file) {\n      this.dialogImageUrl = file.url\n      this.dialogVisible = true\n    },\n    // 刷新列表数据\n    doSubmit() {\n      this.fileList = []\n      this.dialogVisible = false\n      this.dialogImageUrl = ''\n      this.dialog = false\n      this.crud.toQuery()\n    },\n    // 监听上传失败\n    handleError(e, file, fileList) {\n      const msg = JSON.parse(e.message)\n      this.$notify({\n        title: msg.message,\n        type: 'error',\n        duration: 2500\n      })\n    },\n    sync() {\n      this.syncLoading = true\n      crudPic.sync().then(res => {\n        this.crud.notify('同步成功', CRUD.NOTIFICATION_TYPE.SUCCESS)\n        this.crud.toQuery()\n        this.syncLoading = false\n      })\n    }\n  }\n}\n",null]}