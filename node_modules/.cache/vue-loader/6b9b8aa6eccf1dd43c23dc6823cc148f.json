{"remainingRequest":"D:\\code\\DataAssetPlatform\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DataAssetPlatform\\Pncui-Indicator\\src\\views\\indicators\\result\\realtimeindex.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\DataAssetPlatform\\Pncui-Indicator\\src\\views\\indicators\\result\\realtimeindex.vue","mtime":1647917138778},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647917124586},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":1647917124178},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647917124586},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":1647917137429}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport crudIndicatorResult from '../../../api/indicators/indicatorRealTimeResult'\r\nimport CRUD, {presenter, header, form, crud} from '@crud/crud'\r\nimport rrOperation from '@crud/RR.operation'\r\nimport crudOperation from '@crud/CRUD.operation'\r\n// import udOperation from '@crud/UD.operation'\r\nimport pagination from '@crud/Pagination'\r\nimport crudIndCategory from '@/api/indicators/indCategory'\r\nimport category from '../category/category'\r\n//import { getDepts } from '@/utils/system'\r\nimport {getResultDepts} from '@/api/indicators/indResultSubscribe'\r\nimport Treeselect from '@riophae/vue-treeselect'\r\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css'\r\n//import moment from \"moment\";\r\n// crud交由presenter持有\r\nconst defaultCrud = CRUD({\r\n  title: '指标计算结果表',\r\n  url: crudIndicatorResult.url,\r\n  sort: 'id,desc',\r\n  initQry: false,\r\n  crudMethod: {...crudIndicatorResult.crud}\r\n})\r\nconst defaultForm = {\r\n  id: null,\r\n  orgId: null,\r\n  ieId: null,\r\n  ieCode: null,\r\n  ieName: null,\r\n  ieValue: null,\r\n  status: null,\r\n  crtUserCode: null,\r\n  crtOrgCode: null,\r\n  crtDate: null,\r\n  updUserCode: null,\r\n  updOrgCode: null,\r\n  updDate: null,\r\n  frequency: null,\r\n  periodDateInterval: null,\r\n  ieKindOneName: null\r\n}\r\nexport default {\r\n  name: 'IndicatorRealTimeResult',\r\n  components: {Treeselect, pagination, crudOperation, rrOperation, category},\r\n  mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\r\n  dicts: ['IND_FIRST_TYPE', 'RETENTION', 'IE_TYPE', 'IE_STATUS', 'IND_CURRENCY', 'YN', 'IE_FREQUENCY'],\r\n  data() {\r\n    return {\r\n      depts: [],\r\n      qryIndFirstType: [],\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'label'\r\n      },\r\n      table: {\r\n        columns: {\r\n          id: 'hidden',\r\n          ieId: 'hidden',\r\n          updUserCode: 'hidden',\r\n          updDate: 'hidden'\r\n        }\r\n      },\r\n      permission: {\r\n        add: [''],\r\n        edit: [''],\r\n        del: ['']\r\n      },\r\n      showDialog: false,\r\n      pickerMinDate: \"\",//第一次选中的时间\r\n      pickerOptions: {\r\n        onPick: obj => {\r\n\r\n          this.pickerMinDate = new Date(obj.minDate).getTime();\r\n          console.log(\"times===>,\" + this.pickerTimes + \", pickerMinDate==>\" + this.pickerMinDate)\r\n          this.pickerMaxDate = new Date(obj.maxDate).getTime();\r\n        },\r\n        disabledDate: time => {\r\n          if (this.pickerMinDate) {\r\n            const day1 = 366 * 24 * 3600 * 1000;\r\n            let maxTime = this.pickerMinDate + day1;\r\n            let minTime = this.pickerMinDate - day1;\r\n            return time.getTime() > maxTime || time.getTime() < minTime;\r\n          }\r\n        }\r\n      },\r\n      form: {},\r\n    }\r\n  },\r\n  created() {\r\n    //defaultCrud.query.periodDateInterval = this.timeDefault\r\n    this.crud.optShow.del = false\r\n    this.crud.optShow.edit = false\r\n    this.crud.optShow.add = false\r\n    this.resetQuery()\r\n  },\r\n  mounted() {\r\n    this.query.ieName = this.$route.query.ieName\r\n    if (this.query.ieName == null || this.query.ieName == 'undefined') {\r\n      defaultCrud.initQry = false\r\n    } else {\r\n      //CRUD.toQuery\r\n    }\r\n    defaultCrud.refresh()\r\n    this.getDepts();\r\n    this.initIndFirstType();\r\n  },\r\n  computed: {\r\n    // 默认时间\r\n    /*timeDefault () {\r\n      /!*console.log(\"times===>,\" + this.pickerTimes)*!/\r\n      var defalutStartTime = moment().subtract(1,\"year\").format('YYYY-MM-DD')\r\n      var defalutEndTime = moment().format('YYYY-MM-DD')\r\n      return [defalutStartTime, defalutEndTime]\r\n    }*/\r\n  },\r\n  methods: {\r\n    resetQuery() {\r\n      this.crud.resetQuery(false);\r\n      this.crud.refresh()\r\n    },\r\n    // 获取数据前设置好接口地址\r\n    [CRUD.HOOK.beforeRefresh]() {\r\n      if (defaultCrud.initQry) {\r\n        defaultCrud.loading = true\r\n        return true\r\n      } else {\r\n        defaultCrud.initQry = true\r\n        defaultCrud.loading = false\r\n        return false\r\n      }\r\n    },\r\n    viewHandle(row) {\r\n      this.form = row\r\n      this.showDialog = true\r\n    },\r\n    getDepts() {\r\n      /*getDepts({ enabled: true }).then(res => {\r\n        this.depts = res.content\r\n      })*/\r\n      getResultDepts().then(res => {\r\n        this.depts = res.content\r\n      })\r\n    },\r\n    refreshList() {\r\n      this.crud.refresh()\r\n    },\r\n    forceUpdate() {\r\n      this.$forceUpdate()\r\n    },\r\n    initIndFirstType() {\r\n      crudIndCategory.getCategoryList(0).then(res => {\r\n        this.qryIndFirstType = [];\r\n        this.formIndFirstType = [];\r\n        const data = res.data;\r\n        if (res.code == 0) {\r\n          for (let i = 0; i < data.length; i++) {\r\n            this.qryIndFirstType.push({id: data[i].id, label: data[i].categoryName, value: data[i].id})\r\n            this.formIndFirstType.push({id: data[i].id, label: data[i].categoryName, value: data[i].id})\r\n          }\r\n        }\r\n      })\r\n    },\r\n  }\r\n}\r\n",null]}