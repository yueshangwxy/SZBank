{"remainingRequest":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\pncui-portal-fashional\\src\\layout\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\pncui-portal-fashional\\src\\layout\\index.vue","mtime":1655426177771},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1650418886580}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport RightPanel from \"@eladmin/components/RightPanel\";\r\nimport { AppMain, Navbar, Settings, Sidebar, TagsView } from \"./components\";\r\nimport ResizeMixin from \"./mixin/ResizeHandler\";\r\nimport { mapState, mapGetters } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"Layout\",\r\n  components: {\r\n    AppMain,\r\n    Navbar,\r\n    RightPanel,\r\n    Settings,\r\n    Sidebar,\r\n    TagsView,\r\n  },\r\n  mixins: [ResizeMixin],\r\n  data() {\r\n    return {\r\n      isCollapse: null,\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      sidebar: (state) => state.app.sidebar,\r\n      device: (state) => state.app.device,\r\n      showSettings: (state) => state.settings.showSettings,\r\n      needTagsView: (state) => state.settings.tagsView,\r\n      fixedHeader: (state) => state.settings.fixedHeader,\r\n    }),\r\n    classObj() {\r\n      return {\r\n        hideSidebar: false,\r\n        openSidebar: true,\r\n        withoutAnimation: this.sidebar.withoutAnimation,\r\n        mobile: this.device === \"mobile\",\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    handleClickOutside() {\r\n      this.$store.dispatch(\"app/closeSideBar\", { withoutAnimation: false });\r\n    },\r\n    ...mapGetters([\"user\"]),\r\n    getIsCollapse(val) {\r\n      this.isCollapse = val;\r\n    },\r\n  },\r\n};\r\n",null]}