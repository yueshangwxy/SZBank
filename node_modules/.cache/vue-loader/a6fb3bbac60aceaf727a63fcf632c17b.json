{"remainingRequest":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\eladmin-system\\src\\views\\system\\user\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\eladmin-system\\src\\views\\system\\user\\index.vue","mtime":499162500000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport crudUser from '../../../api/system/user'\nimport { isvalidPhone } from '@eladmin/utils/validate'\nimport { getDepts } from '../../../api/system/dept'\nimport { getAll, getLevel } from '../../../api/system/role'\nimport { getAllJob } from '../../../api/system/job'\nimport CRUD, { presenter, header, form, crud } from '@crud/crud'\nimport rrOperation from '@crud/RR.operation'\nimport crudOperation from '@crud/CRUD.operation'\nimport udOperation from '@crud/UD.operation'\nimport pagination from '@crud/Pagination'\nimport Treeselect from '@riophae/vue-treeselect'\nimport { mapGetters } from 'vuex'\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css'\nimport request from '@eladmin/utils/request'\nimport qs from 'qs'\n\nlet userRoles = []\n// crud交由presenter持有\nconst defaultCrud = CRUD({ title: '用户', url: 'api/users', crudMethod: { ...crudUser } })\nconst defaultForm = {\n  id: null,\n  userType: '0',\n  username: null,\n  nickName: null,\n  sex: '男',\n  email: null,\n  enabled: 'false',\n  roles: [],\n  job: { id: null },\n  dept: { id: null },\n  phone: null\n}\nexport default {\n  name: 'User',\n  components: { Treeselect, crudOperation, rrOperation, udOperation, pagination },\n  mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\n  // 数据字典\n  dicts: ['user_status', 'USER_TYPE'],\n  data() {\n    // 自定义验证\n    const validPhone = (rule, value, callback) => {\n      if (!value) {\n        callback(new Error('请输入电话号码'))\n      } else if (!isvalidPhone(value)) {\n        callback(new Error('请输入正确的11位手机号码'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      height: document.documentElement.clientHeight - 180 + 'px;',\n      deptName: '', depts: [], deptDatas: [], jobs: [], level: 3, roles: [],\n      defaultProps: { children: 'children', label: 'name' },\n      permission: {\n        add: ['admin', 'user:add'],\n        edit: ['admin', 'user:edit'],\n        del: ['admin', 'user:del'],\n        resetpwd: ['admin', 'user:resetpwd']\n      },\n      enabledTypeOptions: [\n        { key: 'true', display_name: '启用' },\n        { key: 'false', display_name: '停用' }\n      ],\n      userTypeOptions: [\n        { key: '0', user_type_select: '临时' },\n        { key: '1', user_type_select: '正式' }\n      ],\n      rules: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' },\n          { min: 2, max: 20, message: '长度在 2 到 20 个字符', trigger: 'blur' }\n        ],\n        userType: [\n          { required: true, message: '请选择用户类型', trigger: 'blur' }\n        ],\n        nickName: [\n          { required: true, message: '请输入用户昵称', trigger: 'blur' },\n          { min: 2, max: 20, message: '长度在 2 到 20 个字符', trigger: 'blur' }\n        ],\n        dept: {\n          id: [\n            { required: true, message: '机构不能为空', trigger: 'change' }\n          ]\n        }\n      },\n      resetLoading: false\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'user'\n    ])\n  },\n  created() {\n    // console.log(\"初始化查询表单传输数据！\" + this.form.enabled)\n    this.query.enabled = 'true'\n    this.crud.refresh()\n    this.$nextTick(() => {\n      this.getDeptDatas()\n      this.crud.toQuery()\n      this.crud.msg.add = '新增成功，默认密码：123456'\n    })\n  },\n  mounted: function() {\n    const that = this\n    window.onresize = function temp() {\n      that.height = document.documentElement.clientHeight - 180 + 'px;'\n    }\n  },\n  methods: {\n    changeRole(value) {\n      userRoles = []\n      value.forEach(function(data, index) {\n        const role = { id: data }\n        userRoles.push(role)\n      })\n    },\n    [CRUD.HOOK.afterAddError](crud) {\n      this.afterErrorMethod(crud)\n    },\n    [CRUD.HOOK.afterEditError](crud) {\n      this.afterErrorMethod(crud)\n    },\n    afterErrorMethod(crud) {\n      // 恢复select\n      const initRoles = []\n      userRoles.forEach(function(role, index) {\n        initRoles.push(role.id)\n      })\n      crud.form.roles = initRoles\n    },\n    deleteTag(value) {\n      userRoles.forEach(function(data, index) {\n        if (data.id === value) {\n          userRoles.splice(index, value)\n        }\n      })\n    },\n    // 新增与编辑前做的操作\n    [CRUD.HOOK.afterToCU](crud, form) {\n      this.getDepts()\n      this.getRoles()\n      this.getRoleLevel()\n      form.enabled = form.enabled.toString()\n      if (!form.dept.id && this.query.deptId) {\n        form.dept.id = this.query.deptId\n      }\n    },\n    // 打开编辑弹窗前做的操作\n    [CRUD.HOOK.beforeToEdit](crud, form) {\n      // this.getJobs(this.form.dept.id)\n      userRoles = []\n      const roles = []\n      form.roles.forEach(function(role, index) {\n        roles.push(role.id)\n        // 初始化编辑时候的角色\n        const rol = { id: role.id }\n        userRoles.push(rol)\n      })\n      form.roles = roles\n    },\n    // 提交前做的操作\n    [CRUD.HOOK.afterValidateCU](crud) {\n      console.log('用户类型：' + crud.form.userType)\n      console.log('用户名：' + crud.form.username)\n      if (crud.form.userType === '0') {\n        const nameResult = crud.form.username.substring(0, 3)\n        if (nameResult != 'DAP') {\n          crud.form.username = 'DAP' + crud.form.username\n        }\n      }\n      if (!crud.form.dept.id) {\n        this.$message({\n          message: '部门不能为空',\n          type: 'warning'\n        })\n        return false\n      }\n      crud.form.roles = userRoles\n      return true\n    },\n    // 获取左侧部门数据\n    getDeptDatas() {\n      const sort = 'id,desc'\n      const params = { sort: sort }\n      if (this.deptName) {\n        params['name'] = this.deptName\n      }\n      getDepts(params).then(res => {\n        this.deptDatas = res.content\n      })\n    },\n    // 获取弹窗内部门数据\n    getDepts() {\n      getDepts({ enabled: true }).then(res => {\n        this.depts = res.content\n      })\n    },\n    // 切换部门\n    handleNodeClick(data) {\n      if (data.pid === 0) {\n        this.query.deptId = null\n      } else {\n        this.query.deptId = data.id\n      }\n      this.crud.toQuery()\n    },\n    // 改变状态\n    changeEnabled(data, val) {\n      this.$confirm('此操作将 \"' + this.dict.label.user_status[val] + '\" ' + data.username + ', 是否继续？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        crudUser.edit(data).then(res => {\n          this.crud.notify(this.dict.label.user_status[val] + '成功', CRUD.NOTIFICATION_TYPE.SUCCESS)\n        }).catch(() => {\n          data.enabled = !data.enabled\n        })\n      }).catch(() => {\n        data.enabled = !data.enabled\n      })\n    },\n    // 获取弹窗内角色数据\n    getRoles() {\n      getAll().then(res => {\n        this.roles = res\n      }).catch(() => {\n      })\n    },\n    // 获取弹窗内岗位数据\n    getJobs(id) {\n      getAllJob(id).then(res => {\n        this.jobs = res.content\n      }).catch(() => {\n      })\n    },\n    // 点击部门搜索对应的岗位\n    selectFun(node, instanceId) {\n      // console.log('=======selectFun========', node, instanceId)\n      // this.level = node.deptLevel\n      // this.getJobs(node.id)\n      // this.form.job.id = null\n    },\n    // 获取权限级别\n    getRoleLevel() {\n      getLevel().then(res => {\n        this.level = res.level\n      }).catch(() => {\n      })\n    },\n    checkboxT(row, rowIndex) {\n      return row.id !== this.user.id\n    },\n\n    doResetPwd(datas) {\n      this.$confirm(`确认重置选中的${datas.length}个用户?`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.resetPwd(datas)\n      }).catch(() => {\n      })\n    },\n    // 重置密码\n    resetPwd(key, index) {\n      const ids = []\n      if (key instanceof Array) {\n        key.forEach(val => {\n          ids.push(val.id)\n        })\n      } else {\n        ids.push(key.id)\n      }\n      this.resetLoading = true\n      request({\n        url: '/api/users/resetPwd',\n        method: 'post',\n        data: ids\n      }).then(res => {\n        this.resetLoading = false\n        this.$notify({\n          title: '重置成功',\n          type: 'success',\n          duration: 2500\n        })\n      })\n    }\n  }\n}\n",null]}