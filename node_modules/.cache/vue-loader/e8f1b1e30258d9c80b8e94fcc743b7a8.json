{"remainingRequest":"D:\\code\\DataAssetPlatform\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DataAssetPlatform\\Pncui-Indicator\\src\\views\\indicators\\category\\cgAtomByTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\DataAssetPlatform\\Pncui-Indicator\\src\\views\\indicators\\category\\cgAtomByTable.vue","mtime":1647917138744},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647917124586},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":1647917124178},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647917124586},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":1647917137429}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport crudIndCategory from '../../../api/indicators/indCategory'\nimport CRUD, { presenter, header, form, crud } from '@crud/crud'\nimport rrOperation from '@crud/RR.operation'\nimport crudOperation from '@crud/CRUD.operation'\nimport udOperation from '@crud/UD.operation'\nimport pagination from '@crud/Pagination'\n\n// crud交由presenter持有\nconst defaultCrud = CRUD({\n  title: '指标分类',\n  url: crudIndCategory.url,\n  sort: 'id,desc',\n  crudMethod: { ...crudIndCategory.crud }\n})\nconst defaultForm = {\n  id: null,\n  categoryType: null,\n  categoryName: null,\n  categoryDesc: null,\n  parentId: null,\n  crtUserCode: null,\n  crtOrgCode: null,\n  crtDate: null,\n  updUserCode: null,\n  updOrgCode: null,\n  updDate: null\n}\nexport default {\n  name: 'IndCategory',\n  components: { pagination, crudOperation, rrOperation, udOperation },\n  props: {\n    type: { type: String, default: '1' },\n    parentId: { type: String, default: '0' }\n  },\n  // mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\n  data() {\n    return {\n      filterText: '',\n      defaultProps: { children: 'children', categoryName: 'categoryName' },\n      treeData: [\n        { id: '1', categoryType: '1', categoryName: '原子指标', children: [] }\n      ],\n      permission: {\n        add: ['admin', 'indCategory:add'],\n        edit: ['admin', 'indCategory:edit'],\n        del: ['admin', 'indCategory:del']\n      },\n      rules: {}\n    }\n  },\n  watch: {\n    filterText(val) {\n      this.$refs.tree.filter(val)\n    }\n  },\n  mounted() {\n    // console.log('=====category---mounted....')\n    this.init()\n  },\n  methods: {\n    // 获取数据前设置好接口地址\n    [CRUD.HOOK.beforeRefresh]() {\n      return true\n    },\n    filterNode(value, treeData) {\n      if (!value) return true\n      return treeData.categoryName.indexOf(value) !== -1\n    },\n    // 点击事件\n    handleNodeClick(data) {\n      this.$emit('node-click', data)\n    },\n    init() {\n      // 查询原子指标分类+信息\n      crudIndCategory.treeByTable('0').then(res => {\n        this.treeData[0].children = res.data\n        console.log(this.treeData, 'treeDate')\n      }).catch(() => {\n        console.log('')\n      })\n    },\n    // 刷新左侧树状列表的方法\n    refresh() {\n      console.log('测试一下')\n    }\n  }\n}\n",null]}