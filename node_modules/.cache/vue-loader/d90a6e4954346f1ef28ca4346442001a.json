{"remainingRequest":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\eladmin-system\\src\\views\\system\\role\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\eladmin-system\\src\\views\\system\\role\\index.vue","mtime":1650418877007},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1650418886580}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport crudRoles from '../../../api/system/role'\r\nimport {getDepts} from '../../../api/system/dept'\r\nimport CRUD, {presenter, header, form, crud} from '@crud/crud'\r\nimport rrOperation from '@crud/RR.operation'\r\nimport crudOperation from '@crud/CRUD.operation'\r\nimport udOperation from '@crud/UD.operation'\r\nimport pagination from '@crud/Pagination'\r\nimport Treeselect from '@riophae/vue-treeselect'\r\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css'\r\nimport aForm from './form1'\r\nimport {getTenants, isSuperAdmin} from '@/api/indUserApply/indTenant'\r\n// crud交由presenter持有\r\nconst defaultCrud = CRUD({title: '角色', url: 'api/roles', sort: 'id,asc', crudMethod: {...crudRoles}})\r\nconst defaultForm = {\r\n  id: null,\r\n  name: null,\r\n  depts: [],\r\n  remark: null,\r\n  dataScope: 'o',\r\n  roleLevel: 1,\r\n  permission: 'default',\r\n  tenant: null//租户 法人\r\n}\r\nexport default {\r\n  name: 'Role',\r\n  components: {Treeselect, pagination, crudOperation, rrOperation, udOperation, aForm},\r\n  mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\r\n  dicts: ['DATA_AUTH_TYPE'],\r\n  data() {\r\n    return {\r\n      defaultProps: {children: 'children', label: 'label'},\r\n      dateScopes: ['全部', '本级', '自定义'], level: 3,\r\n      currentId: 0, menuLoading: false, showButton: false,\r\n      menus: [], menuIds: [], depts: [],\r\n      isSuper: false,\r\n      tenantArr: [],\r\n      permission: {\r\n        add: ['admin', 'roles:add'],\r\n        edit: ['admin', 'roles:edit'],\r\n        del: ['admin', 'roles:del']\r\n      },\r\n      rules: {\r\n        id: [\r\n          {required: true, message: '请输入角色编号', trigger: 'blur'}],\r\n        name: [\r\n          {required: true, message: '请输入名称', trigger: 'blur'}],\r\n        level: [\r\n          {required: true, message: '请输入级别', trigger: 'blur'}\r\n        ],\r\n        tenant: [\r\n          {required: true, message: '所属租户不能为空', trigger: 'blur'}\r\n        ]\r\n        // ,permission: [\r\n        //   { required: true, message: '请输入权限', trigger: 'blur' }\r\n        // ]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    // this.getMenus()\r\n    crudRoles.getLevel().then(data => {\r\n      this.level = data.level\r\n      // console.log(this.level)\r\n    })\r\n    this.$nextTick(() => {\r\n      this.crud.toQuery()\r\n    })\r\n    this.isSuperAdmin();\r\n    this.getTenants();\r\n    this.resetQuery()\r\n  },\r\n  methods: {\r\n    resetQuery() {\r\n      this.crud.resetQuery(false);\r\n      this.crud.refresh()\r\n    },\r\n    toSelectUsers(data) {\r\n      const _this = this.$refs.form1\r\n      _this.title = '当前角色[' + data.name + ']'\r\n      _this.roleId = data.id\r\n      _this.roleLevel = data.level\r\n      _this.getDeptDatas()\r\n      // _this.toQueryUser()\r\n      _this.getUserByRoleId()\r\n      _this.table.data = []\r\n      _this.dialog = true\r\n    },\r\n    // [CRUD.HOOK.afterRefresh]() {\r\n    //   this.$refs.menu.setCheckedKeys([])\r\n    // },\r\n    // 编辑前\r\n    [CRUD.HOOK.beforeToEdit](crud, form) {\r\n      if (form.dataScope === '自定义') {\r\n        this.getDepts()\r\n      }\r\n      const depts = []\r\n      if (form.depts !== null && form.depts !== '') {\r\n        form.depts.forEach(function (dept, index) {\r\n          depts.push(dept.id)\r\n        })\r\n      }\r\n      form.depts = depts\r\n    },\r\n    // 提交前做的操作\r\n    [CRUD.HOOK.afterValidateCU](crud) {\r\n      if (crud.form.dataScope === '自定义' && crud.form.depts.length === 0) {\r\n        this.$message({\r\n          message: '自定义数据权限不能为空',\r\n          type: 'warning'\r\n        })\r\n        return false\r\n      } else if (crud.form.dataScope === '自定义') {\r\n        const depts = []\r\n        crud.form.depts.forEach(function (data, index) {\r\n          const dept = {id: data}\r\n          depts.push(dept)\r\n        })\r\n        console.info(depts)\r\n        crud.form.depts = depts\r\n      } else {\r\n        crud.form.depts = []\r\n      }\r\n      return true\r\n    },\r\n    [CRUD.HOOK.afterAddError](crud) {\r\n      this.afterErrorMethod(crud)\r\n    },\r\n    [CRUD.HOOK.afterEditError](crud) {\r\n      this.afterErrorMethod(crud)\r\n    },\r\n    afterErrorMethod(crud) {\r\n      const depts = []\r\n      crud.form.depts.forEach(function (dept, index) {\r\n        depts.push(dept.id)\r\n      })\r\n      crud.form.depts = depts\r\n    },\r\n    // // 获取所有菜单\r\n    // getMenus() {\r\n    //   getMenusTree().then(res => {\r\n    //     this.menus = res\r\n    //   })\r\n    // },\r\n    // 触发单选\r\n    handleCurrentChange(val) {\r\n      if (val) {\r\n        const _this = this\r\n        // 清空菜单的选中\r\n        // this.$refs.menu.setCheckedKeys([])\r\n        // 保存当前的角色id\r\n        this.currentId = val.id\r\n        // this.showButton = this.level <= val.level\r\n        // // 初始化\r\n        // this.menuIds = []\r\n        // // 菜单数据需要特殊处理\r\n        // val.menus.forEach(function(data, index) {\r\n        //   _this.menuIds.push(data.id)\r\n        // })\r\n      }\r\n    },\r\n    // // 保存菜单\r\n    // saveMenu() {\r\n    //   this.menuLoading = true\r\n    //   const role = { id: this.currentId, menus: [] }\r\n    //   // 得到半选的父节点数据，保存起来\r\n    //   this.$refs.menu.getHalfCheckedNodes().forEach(function(data, index) {\r\n    //     const menu = { id: data.id }\r\n    //     role.menus.push(menu)\r\n    //   })\r\n    //   // 得到已选中的 key 值\r\n    //   this.$refs.menu.getCheckedKeys().forEach(function(data, index) {\r\n    //     const menu = { id: data }\r\n    //     role.menus.push(menu)\r\n    //   })\r\n    //   crudRoles.editMenu(role).then(res => {\r\n    //     this.crud.notify('保存成功', CRUD.NOTIFICATION_TYPE.SUCCESS)\r\n    //     this.menuLoading = false\r\n    //     this.update()\r\n    //   }).catch(err => {\r\n    //     this.menuLoading = false\r\n    //     console.log(err.response.data.message)\r\n    //   })\r\n    // },\r\n    // 改变数据\r\n    update() {\r\n      // 无刷新更新 表格数据\r\n      crudRoles.get(this.currentId).then(res => {\r\n        for (let i = 0; i < this.crud.data.length; i++) {\r\n          if (res.id === this.crud.data[i].id) {\r\n            this.crud.data[i] = res\r\n            break\r\n          }\r\n        }\r\n      })\r\n    },\r\n    // 获取部门数据\r\n    getDepts() {\r\n      getDepts({enabled: true}).then(res => {\r\n        this.depts = res.content\r\n      })\r\n    },\r\n    /* // 如果数据权限为自定义则获取部门数据\r\n    changeScope() {\r\n      if (this.form.dataScope === '自定义') {\r\n        this.getDepts()\r\n      }\r\n    },*/\r\n    checkboxT(row, rowIndex) {\r\n      // return row.level >= this.level\r\n      return true\r\n    },\r\n    setDisable(row) {\r\n      if (row.id == 'R000') {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    getTenants() {\r\n      getTenants().then(data => {\r\n        if (data != null && data.code == '0000') {\r\n          this.tenantArr = data.data\r\n        }\r\n      })\r\n    },\r\n    isSuperAdmin() {\r\n      this.isSuper = isSuperAdmin();\r\n    }\r\n  }\r\n}\r\n",null]}