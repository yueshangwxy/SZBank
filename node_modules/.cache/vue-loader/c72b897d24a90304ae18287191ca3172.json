{"remainingRequest":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\code\\indicator\\Pncui-Indicator\\src\\views\\indicators\\indicator\\atom\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\code\\indicator\\Pncui-Indicator\\src\\views\\indicators\\indicator\\atom\\index.vue","mtime":1638179658867},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport crudIndAtomInfo, {\r\n  getColumnByTabel,\r\n  getDimensions,\r\n  getGenAndDerivedInd,\r\n  getGenInd,\r\n  getTablesById, bizNameIsContract, approveDetailByBusinessKey, abolish,startProcess,delAtom,getHisList\r\n} from '@/api/indicators/indAtomInfo'\r\nimport crudIndDimInfo, {getDimInfos} from '@/api/indicators/indDimInfo'\r\nimport {getDimValues, getDimValuesChildren} from '@/api/indicators/indDimValue'\r\nimport {getAllSource, getDimInfo, process} from '@/api/indicators/indIndicatorInfo'\r\nimport CRUD, {crud, form, header, presenter} from '@crud/crud'\r\nimport rrOperation from '@crud/RR.operation'\r\nimport crudOperation from '@crud/CRUD.operation'\r\nimport udOperation from '@crud/UD.operation'\r\nimport pagination from '@crud/Pagination'\r\nimport category from '../../category/category'\r\nimport dimensionPage from '../atom/dimension/index'\r\nimport atomPage from './atomPage'\r\nimport {isSignedInteger, validateStrLenFiveHundred, validateStrLenHundred} from '@/utils/validator'\r\nimport {getClassifications} from '@/api/indicators/indClassification'\r\nimport crudIndCategory from '@/api/indicators/indCategory'\r\nimport { getDepts } from '@/utils/system'\r\nimport Treeselect from '@riophae/vue-treeselect'\r\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css'\r\nimport qs from \"qs\";\r\nimport IndAtomInfoHis from './hisIndex'\r\n// crud交由presenter持有\r\nconst defaultCrud = CRUD({\r\n  title: '指标信息',\r\n  url: crudIndAtomInfo.url,\r\n  sort: 'id,desc',\r\n  crudMethod: { ...crudIndAtomInfo.crud }\r\n})\r\nconst defaultForm = {\r\n  id: null,\r\n  categoryId: null,\r\n  sourceDataSource: 'local',\r\n  targetDataSource: 'local',\r\n  bizCode: null,\r\n  bizName: null,\r\n  genBizName: null,// 根指标名称\r\n  indFirstType: null,// 指标一级分类\r\n  indSecondType: null,// 指标二级分类\r\n  businessDept: null,// 业务属主部门\r\n  indLevel: null, // 指标层级\r\n  isDeptQuery: true,// 是否部门内部都可查询指标结果\r\n  isAdditionalRecording: false,// 指标结果是否会补录\r\n  indDimAndValueRelations: [],\r\n  indDefinition: null,// 指标定义\r\n  indDefRule: null,// 指标口径规则\r\n  indValueRange1: null,// 指标取值范围1\r\n  indValueRange2: null,// 指标取值范围2\r\n  indInnerWarnValue: '',// 指标内部警戒值（表示预警）\r\n  indInnerWarnPassValue: '',// 指标内部警戒值（表示通过）\r\n  indMonWarnValue: '',// 指标监管警戒值（表示预警）\r\n  indMonWarnPassValue: '',// 指标监管警戒值（表示通过）\r\n  currency: null,// 币种\r\n  indValueType: null,// 指标数值属性\r\n  indFrequency: [],// 指标生成频率\r\n  indCalType: null,// 度量单位\r\n  indSafeLevel: null,// 指标安全等级\r\n  indMonField: null,// 监管属性\r\n  indProcessSys: null,// 权威加工系统\r\n  indDataType: null,// 数据类型\r\n  indDataForm: null,// 数据格式\r\n  indReference: null,// 参考依据\r\n  isRealTimeProcess: false,// 是否需要实时加工\r\n  indCurrentValue: true,// 当期值\r\n  indContemporaneousValue: true,// 同期值\r\n  indYearOnYearIncrement: true,// 同比增量\r\n  indYearOnYearGrowth: true,// 同比增幅\r\n  indPreviousPeriodValue: true,// 上期值\r\n  indMonthOnMonthIncrement: true,// 环比增量\r\n  indMonthOnMonthGrowth: true,// 环比增幅\r\n  indInitialValueOfTheYear: true,// 年初值\r\n  indYearOnYearIncre: true,// 较年初增量\r\n  indIncreaseOverTheBeginningOfTheYear: true,// 较年初增幅\r\n  indVerifyStatus: null,// 指标审批状态\r\n  indDeployStatus: null,// 指标发布状态\r\n  indVerifyId: null,\r\n  indStandSource: null,// 标准来源\r\n  ieProp: null,\r\n  createTable: null,\r\n  keepHistory: '1',\r\n  bizTabCode: null,\r\n  bizFlag: null,\r\n  bizCalcSql: null,// 实时指标取数SQL\r\n  bizBatchCalcSql: null,// 批量指标取数SQL\r\n  dimNames: null,\r\n  bizDesc: null,\r\n  calcSeq: null,\r\n  calcFreq: null,\r\n  crtUserCode: null,\r\n  crtOrgCode: null,\r\n  crtDate: null,\r\n  updUserCode: null,\r\n  updOrgCode: null,\r\n  updDate: null,\r\n  tenant: null,\r\n  retention: null,\r\n  tableShare: '1',\r\n  status: '2',\r\n  categoryType: '0',\r\n  atomDimensions: []\r\n}\r\nexport default {\r\n  name: 'IndAtomInfo',\r\n  components: {Treeselect,pagination, crudOperation, rrOperation, udOperation, category, dimensionPage, atomPage,IndAtomInfoHis },\r\n  mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\r\n  dicts: ['IE_PROP', 'CREATE_TABLE', 'YN', 'RETENTION', 'IE_STATUS', 'GEN_IND', 'IND_FIRST_TYPE', 'IND_SECOND_TYPE', 'BUSSINESS_DEPT',\r\n    'IND_LEVEL', 'IND_CURRENCY', 'IND_VALUE_TYPE', 'IND_FREQUENCY', 'IND_CAL_TYPE', 'IND_SAFE_LEVEL', 'IND_MON_FIELD', 'IND_PROCESS_SYS',\r\n    'IND_DATA_TYPE', 'IND_STAND_SOURCE', 'DIMENSION_CATEGORY', 'DIMENSION', 'LAST_LEVEL_DIMENSION_VALUE'],\r\n  data() {\r\n    return {\r\n      dimAndValueObject1: {\r\n        dimension: null,\r\n        dimensionValue: null\r\n      },\r\n      dimAndValueObject2: {\r\n        dimension: null,\r\n        dimensionValue: null\r\n      },\r\n      dimAndValueObject3: {\r\n        dimension: '',\r\n        dimensionValue: ''\r\n      },\r\n      dimAndValueObject4: {\r\n        dimension: null,\r\n        dimensionValue: null\r\n      },\r\n      dimAndValueObject5: {\r\n        dimension: null,\r\n        dimensionValue: null\r\n      },\r\n      dimAndValueObject6: {\r\n        dimension: null,\r\n        dimensionValue: null\r\n      },\r\n      dimAndValueObject7: {\r\n        dimension: null,\r\n        dimensionValue: null\r\n      },\r\n      dimAndValueObject8: {\r\n        dimension: null,\r\n        dimensionValue: null\r\n      },\r\n      dimAndValueObject9: {\r\n        dimension: null,\r\n        dimensionValue: null\r\n      },\r\n      dimAndValueObject10: {\r\n        dimension: null,\r\n        dimensionValue: null\r\n      },\r\n      table: {\r\n        columns: {\r\n          sourceDataSource: 'hidden',\r\n          targetDataSource: 'hidden',\r\n          keepHistory: 'hidden',\r\n          bizDesc: 'hidden',\r\n          crtUserCode: 'hidden',\r\n          crtOrgCode: 'hidden',\r\n          crtDate: 'hidden',\r\n          updUserCode: 'hidden',\r\n          updOrgCode: 'hidden',\r\n          updDate: 'hidden',\r\n          tenant: 'hidden'\r\n        }\r\n      },\r\n      permission: {\r\n        processA: ['indAtomInfo:processA'],\r\n        add: ['indAtomInfo:add'],\r\n        edit: ['indAtomInfo:edit'],\r\n        del: ['indAtomInfo:del'],\r\n        details: ['indAtomInfo:details'],\r\n        workflow: ['indAtomInfo:workflow'],\r\n        batchCheckResult: ['indAtomInfo:batchCheckResult'],\r\n        historyVersion: ['indAtomInfo:historyVersion'],\r\n        cancelInd: ['indAtomInfo:cancelInd'],\r\n        processVerify: ['indAtomInfo:processVerify'],\r\n        historyVersionDetail: ['indAtomInfo:historyVersionDetail']\r\n      },\r\n      rules: {\r\n        bizName: [\r\n          { required: true, message: '指标名称不能为空', trigger: 'blur' },\r\n          { validator: validateStrLenHundred, trigger: 'blur' }\r\n        ],\r\n        ieProp: [\r\n          { required: true, message: '指标类型不能为空', trigger: 'change' }\r\n        ],\r\n        genBizName: [\r\n          { required: true, message: '根指标不能为空', trigger: 'change' }\r\n        ],\r\n        indFirstType: [\r\n          { required: true, message: '指标一级分类不能为空', trigger: 'change' }\r\n        ],\r\n        indSecondType: [\r\n          { required: true, message: '指标二级分类不能为空', trigger: 'change' }\r\n        ],\r\n        businessDept: [\r\n          { required: true, message: '业务属主部门不能为空', trigger: 'change' }\r\n        ],\r\n        indLevel: [\r\n          { required: true, message: '指标层级不能为空', trigger: 'change' }\r\n        ],\r\n        indDefinition: [\r\n          { required: true, message: '指标定义不能为空', trigger: 'blur' },\r\n          { validator: validateStrLenFiveHundred, trigger: 'blur' }\r\n        ],\r\n        indDefRule: [\r\n          { required: true, message: '指标口径规则不能为空', trigger: 'blur' },\r\n          { validator: validateStrLenFiveHundred, trigger: 'blur' }\r\n        ],\r\n        indValueRange1: [\r\n          { validator: isSignedInteger, trigger: 'blur' }\r\n        ],\r\n        indValueRange2: [\r\n          { validator: isSignedInteger, trigger: 'blur' }\r\n        ],\r\n        currency: [\r\n          { required: true, message: '币种不能为空', trigger: 'change' }\r\n        ],\r\n        indFrequency: [\r\n          { required: true, message: '指标生成频率不能为空', trigger: 'change' }\r\n        ],\r\n        indCalType: [\r\n          { required: true, message: '度量单位不能为空', trigger: 'change' }\r\n        ],\r\n        indMonField: [\r\n          { required: true, message: '监管属性不能为空', trigger: 'change' }\r\n        ],\r\n        indDataType: [\r\n          { required: true, message: '数据类型不能为空', trigger: 'change' }\r\n        ]\r\n      },\r\n      dimensionRules: {\r\n        categoryName: [\r\n          { required: true, message: '指标维度名称不能为空', trigger: 'change' }\r\n        ]\r\n      },\r\n      dimensionValueRules: {\r\n        categoryName: [\r\n          { required: true, message: '指标维度值不能为空', trigger: 'change' }\r\n        ]\r\n      },\r\n      sourceData: [],\r\n      tableInfo: [],\r\n      atomDimensions: [],\r\n      bizTabCodeDis: false,\r\n      // 计算输日期的页面\r\n      processDialog: false,\r\n      // 传给后台的参数\r\n      processParam: {\r\n        codes: [],\r\n        periodDate: ''\r\n      },\r\n      dateValue: '',\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'label'\r\n      },\r\n      dimensionArr: [],\r\n      dimensionTitle: '维度',\r\n      dimensionNumber: 2,\r\n      dimensionTmp: null,\r\n      dimensionValueArr: [],\r\n      dimensionValueTitle: '维度值',\r\n      dimensionValueNumber: 2,\r\n      dimensionValueTmp: null,\r\n      showIndDefRule: false,\r\n      showIndHistory: false,\r\n      indInnerWarnValueArr: [1],\r\n      indInnerWarnValueNumber: 1,\r\n      indInnerWarnPassValueArr: [1],\r\n      indInnerWarnPassValueNumber: 1,\r\n      indMonWarnValueArr: [1],\r\n      indMonWarnValueNumber: 1,\r\n      indMonWarnPassValueArr: [1],\r\n      indMonWarnPassValueNumber: 1,\r\n      historyData: [],\r\n      showIndDimensionAdd: false,\r\n      flowData:[],\r\n      showFlow:false,\r\n      dimension: {\r\n        id: null,\r\n        classificationId: null,// 所属分类\r\n        categoryName: null,// 指标维度名称\r\n        remarks: null// 备注\r\n      },\r\n      showIndDimensionValueAdd: false,\r\n      dimensionValue: {\r\n        dimension: null,// 所属维度\r\n        lastLevelDimensionValue: null,// 上级维度值\r\n        dimValue: null// 指标维度值\r\n      },\r\n      renderFunc(h, option) {\r\n        return <span>{ option.label }</span>;\r\n      },\r\n      transferData: [],\r\n      value: [],\r\n      indDefRuleStr: '',\r\n      genIndArr: [],\r\n      genAndDerivedIndArr: [],\r\n      dimInfoArr: [],\r\n      dimValueArr: [],\r\n      dimValueArr2: [],\r\n      classificationArr: [],\r\n      dimValueTmp1: [],\r\n      dimValueTmp2: [],\r\n      formDialog: false,\r\n      qryIndFirstType: [],\r\n      qryIndSecondType: [],\r\n      formIndFirstType: [],\r\n      formIndSecondType: [],\r\n      depts:[],\r\n      hisIeId: null\r\n    }\r\n  },\r\n  created() {\r\n    this.crud.optShow.del=false\r\n    this.crud.optShow.edit=false\r\n    this.initDimInfos()\r\n    this.initDimValuesChildren()\r\n    this.initDimValues()\r\n    this.initClassifications()\r\n    this.initGenAndDerivedInd()\r\n    this.initIndFirstType()\r\n    this.getDepts();\r\n  },\r\n  methods: {\r\n    validateBizNameContract(){\r\n      var that=this;\r\n      bizNameIsContract(that.form.id,that.form.bizName).then(res => {\r\n        if(res.code == 0) {\r\n          if(res.data) {\r\n            this.$message.error(\"指标名称重复,请重新输入\")\r\n          }\r\n        }else {\r\n          this.$message.error(\"系统错误\")\r\n        }\r\n      })\r\n    },\r\n    initDimInfos() {\r\n      getDimInfos( {size: 100, page: 0}).then(data => {\r\n        this.dimInfoArr = data.data.records\r\n      })\r\n    },\r\n    initDimValuesChildren() {\r\n      getDimValuesChildren( {size: 100, page: 0}).then(data => {\r\n        this.dimValueArr = data.data\r\n      })\r\n    },\r\n    initDimValues() {\r\n      getDimValues( {size: 100, page: 0}).then(data => {\r\n        this.dimValueArr2 = data.data.records\r\n      })\r\n    },\r\n    initClassifications() {\r\n      getClassifications({size: 100, page: 0}).then(data => {\r\n        this.classificationArr = data.data.records\r\n      })\r\n    },\r\n    initGenAndDerivedInd() {\r\n      getGenAndDerivedInd().then(data => {\r\n        this.genAndDerivedIndArr = data.data\r\n        for (let i = 0; i < this.genAndDerivedIndArr.length; i++) {\r\n          this.transferData.push({key: this.genAndDerivedIndArr[i].id, label: this.genAndDerivedIndArr[i].bizName})\r\n        }\r\n      })\r\n    },\r\n    initIndFirstType() {\r\n      crudIndCategory.getCategoryList(0).then(res => {\r\n        const data = res.data;\r\n        if(res.code == 0) {\r\n          for(let i=0; i<data.length; i++) {\r\n            this.qryIndFirstType.push({id: data[i].id, label: data[i].categoryName, value: data[i].id})\r\n            this.formIndFirstType.push({id: data[i].id, label: data[i].categoryName, value: data[i].id})\r\n          }\r\n        }\r\n      })\r\n    },\r\n    initIndSecondType(indFirstType,type) {\r\n      if(type == \"query\") {\r\n        this.qryIndSecondType = [];\r\n      }else {\r\n        this.formIndSecondType = [];\r\n      }\r\n      //let indFirstType = this.query.indFirstType;\r\n      if(indFirstType == null) {\r\n        return;\r\n      }\r\n      crudIndCategory.getCategoryList(indFirstType).then(res => {\r\n        const data = res.data;\r\n        if(res.code == 0) {\r\n          for(let i=0; i<data.length; i++) {\r\n            if(type == \"query\"){\r\n              this.qryIndSecondType.push({id: data[i].id, label: data[i].categoryName, value: data[i].id})\r\n            } else {\r\n              this.formIndSecondType.push({id: data[i].id, label: data[i].categoryName, value: data[i].id})\r\n            }\r\n\r\n          }\r\n        }\r\n      })\r\n    },\r\n    // 获取数据前设置好接口地址\r\n    [CRUD.HOOK.beforeRefresh]() {\r\n      //this.crud.optShow.edit = true\r\n      // this.query.ieType = '4'\r\n      return true\r\n    },\r\n    [CRUD.HOOK.afterRefresh]() {\r\n      // getAllSource().then(data => {\r\n      //   this.sourceData = [{ id: 'local', datasourceName: '默认数据源' }].concat(data.data)\r\n      // })\r\n      getGenInd().then(data => {\r\n        this.genIndArr = data.data\r\n      })\r\n    },\r\n    [CRUD.HOOK.beforeToEdit]() {\r\n      this.form.indVerifyStatus = this.crud.selections[0].indVerifyStatus\r\n      this.form.indDeployStatus = this.crud.selections[0].indDeployStatus\r\n      this.form.id = this.crud.selections[0].id\r\n      this.form.bizCode = this.crud.selections[0].bizCode\r\n      this.form.ieProp = this.crud.selections[0].ieProp\r\n      this.form.genBizName = this.crud.selections[0].genBizName\r\n      this.form.bizName = this.crud.selections[0].bizName\r\n      this.form.indFirstType = this.crud.selections[0].indFirstType\r\n      this.form.categoryType = this.crud.selections[0].categoryType\r\n      this.initIndSecondType(this.form.indFirstType,'form')\r\n      this.form.indSecondType = this.crud.selections[0].indSecondType\r\n      this.dimAndValueObject1.dimension = this.crud.selections[0].indDimAndValueRelations.length == 0 ? null : this.crud.selections[0].indDimAndValueRelations[0].dimension\r\n      this.dimAndValueObject1.dimensionValue = this.crud.selections[0].indDimAndValueRelations.length == 0 ? null : this.crud.selections[0].indDimAndValueRelations[0].dimensionValue\r\n      this.dimAndValueObject2.dimension = this.crud.selections[0].indDimAndValueRelations.length == 0 ? null : this.crud.selections[0].indDimAndValueRelations[1].dimension\r\n      this.dimAndValueObject2.dimensionValue = this.crud.selections[0].indDimAndValueRelations.length == 0 ? null : this.crud.selections[0].indDimAndValueRelations[1].dimensionValue\r\n      this.form.businessDept = this.crud.selections[0].businessDept\r\n      this.form.indLevel = this.crud.selections[0].indLevel\r\n      this.form.isDeptQuery = this.crud.selections[0].isDeptQuery\r\n      this.form.isAdditionalRecording = this.crud.selections[0].isAdditionalRecording\r\n      this.form.indDefinition = this.crud.selections[0].indDefinition\r\n      this.form.indDefRule = this.crud.selections[0].indDefRule\r\n      this.form.indValueRange1 = this.crud.selections[0].indValueRange1\r\n      this.form.indValueRange2 = this.crud.selections[0].indValueRange2\r\n      this.form.indInnerWarnValue = this.crud.selections[0].indInnerWarnValue\r\n      this.form.indMonWarnValue = this.crud.selections[0].indMonWarnValue\r\n      this.form.currency = this.crud.selections[0].currency\r\n      this.form.indValueType = this.crud.selections[0].indValueType\r\n      this.form.indFrequency = this.crud.selections[0].indFrequency == null? null : Array.isArray(this.crud.selections[0].indFrequency)? this.crud.selections[0].indFrequency : this.crud.selections[0].indFrequency.split(',')\r\n      this.form.indCalType = this.crud.selections[0].indCalType\r\n      this.form.indSafeLevel = this.crud.selections[0].indSafeLevel\r\n      this.form.indMonField = this.crud.selections[0].indMonField\r\n      this.form.indProcessSys = this.crud.selections[0].indProcessSys\r\n      this.form.indDataType = this.crud.selections[0].indDataType\r\n      this.form.indDataForm = this.crud.selections[0].indDataForm\r\n      this.form.indReference = this.crud.selections[0].indReference\r\n      this.form.isRealTimeProcess = this.crud.selections[0].isRealTimeProcess\r\n      this.form.indCurrentValue = this.crud.selections[0].indCurrentValue\r\n      this.form.indContemporaneousValue = this.crud.selections[0].indContemporaneousValue\r\n      this.form.indYearOnYearIncrement = this.crud.selections[0].indYearOnYearIncrement\r\n      this.form.indYearOnYearGrowth = this.crud.selections[0].indYearOnYearGrowth\r\n      this.form.indPreviousPeriodValue = this.crud.selections[0].indPreviousPeriodValue\r\n      this.form.indMonthOnMonthIncrement = this.crud.selections[0].indMonthOnMonthIncrement\r\n      this.form.indMonthOnMonthGrowth = this.crud.selections[0].indMonthOnMonthGrowth\r\n      this.form.indInitialValueOfTheYear = this.crud.selections[0].indInitialValueOfTheYear\r\n      this.form.indYearOnYearIncre = this.crud.selections[0].indYearOnYearIncre\r\n      this.form.indIncreaseOverTheBeginningOfTheYear = this.crud.selections[0].indIncreaseOverTheBeginningOfTheYear\r\n      this.form.indVerifyId = this.crud.selections[0].indVerifyId\r\n      // getAllSource().then(data => {\r\n      //   this.sourceData = [{ id: 'local', datasourceName: '默认数据源' }].concat(data.data)\r\n      // })\r\n      // getTablesById(this.form.targetDataSource).then(data => {\r\n      //   this.tableInfo = data.data\r\n      // })\r\n    },\r\n    [CRUD.HOOK.beforeToDetail](data) {\r\n      this.form.id = data.form.id\r\n      this.form.bizCode = data.form.bizCode\r\n      this.form.ieProp = data.form.ieProp\r\n      this.form.genBizName = data.form.genBizName\r\n      this.form.bizName = data.form.bizName\r\n      this.form.indFirstType = data.form.indFirstType\r\n      this.initIndSecondType(this.form.indFirstType,'form')\r\n      this.form.indSecondType = data.form.indSecondType\r\n      this.form.categoryType = data.form.categoryType\r\n      this.dimAndValueObject1.dimension = data.form.indDimAndValueRelations.length == 0 ? null : data.form.indDimAndValueRelations[0].dimension\r\n      this.dimAndValueObject1.dimensionValue = data.form.indDimAndValueRelations.length == 0 ? null : data.form.indDimAndValueRelations[0].dimensionValue\r\n      this.dimAndValueObject2.dimension = data.form.indDimAndValueRelations.length == 0 ? null : data.form.indDimAndValueRelations[1].dimension\r\n      this.dimAndValueObject2.dimensionValue = data.form.indDimAndValueRelations.length == 0 ? null : data.form.indDimAndValueRelations[1].dimensionValue\r\n      this.form.businessDept = data.form.businessDept\r\n      this.form.indLevel = data.form.indLevel\r\n      this.form.isDeptQuery = data.form.isDeptQuery\r\n      this.form.isAdditionalRecording = data.form.isAdditionalRecording\r\n      this.form.indDefinition = data.form.indDefinition\r\n      this.form.indDefRule = data.form.indDefRule\r\n      this.form.indValueRange1 = data.form.indValueRange1\r\n      this.form.indValueRange2 = data.form.indValueRange2\r\n      this.form.indInnerWarnValue = data.form.indInnerWarnValue\r\n      this.form.indMonWarnValue = data.form.indMonWarnValue\r\n      this.form.currency = data.form.currency\r\n      this.form.indValueType = data.form.indValueType\r\n      this.form.indFrequency = data.form.indFrequency == null? null : Array.isArray(data.form.indFrequency)? data.form.indFrequency : data.form.indFrequency.split(',')\r\n      this.form.indCalType = data.form.indCalType\r\n      this.form.indSafeLevel = data.form.indSafeLevel\r\n      this.form.indMonField = data.form.indMonField\r\n      this.form.indProcessSys = data.form.indProcessSys\r\n      this.form.indDataType = data.form.indDataType\r\n      this.form.indDataForm = data.form.indDataForm\r\n      this.form.indReference = data.form.indReference\r\n      this.form.isRealTimeProcess = data.form.isRealTimeProcess\r\n      this.form.indCurrentValue = data.form.indCurrentValue\r\n      this.form.indContemporaneousValue = data.form.indContemporaneousValue\r\n      this.form.indYearOnYearIncrement = data.form.indYearOnYearIncrement\r\n      this.form.indYearOnYearGrowth = data.form.indYearOnYearGrowth\r\n      this.form.indPreviousPeriodValue = data.form.indPreviousPeriodValue\r\n      this.form.indMonthOnMonthIncrement = data.form.indMonthOnMonthIncrement\r\n      this.form.indMonthOnMonthGrowth = data.form.indMonthOnMonthGrowth\r\n      this.form.indInitialValueOfTheYear = data.form.indInitialValueOfTheYear\r\n      this.form.indYearOnYearIncre = data.form.indYearOnYearIncre\r\n      this.form.indIncreaseOverTheBeginningOfTheYear = data.form.indIncreaseOverTheBeginningOfTheYear\r\n      this.form.indVerifyStatus = data.form.indVerifyStatus\r\n      this.form.indDeployStatus = data.form.indDeployStatus\r\n      this.form.indVerifyId = data.form.indVerifyId\r\n    },\r\n    [CRUD.HOOK.beforeSubmit]() {\r\n      // if (this.form.atomDimensions == null) {\r\n      //   this.crud.notify('请进行维度管理', CRUD.NOTIFICATION_TYPE.ERROR)\r\n      //   return false\r\n      // }\r\n      //对新增状态进行参数设置\r\n      if (this.crud.status.add == CRUD.STATUS.PREPARED) {\r\n        this.form.indFrequency = this.form.indFrequency.join(',')\r\n        this.form.indDimAndValueRelations.push(this.dimAndValueObject1)\r\n        this.form.indDimAndValueRelations.push(this.dimAndValueObject2)\r\n        this.form.indDefRule = (this.form.indDefRule + \"||\" + this.indDefRuleStr)\r\n        console.log('这里是新增参数编辑')\r\n      } else if (this.crud.status.edit == CRUD.STATUS.PREPARED) {\r\n        this.form.indFrequency = this.form.indFrequency.join(',')\r\n        //维度和维度值\r\n        console.log(this.form.indDimAndValueRelations)\r\n      }\r\n    },\r\n    [CRUD.HOOK.beforeToAdd]() {\r\n      if (!this.form.categoryId) {\r\n        this.crud.notify('请选择分类', CRUD.NOTIFICATION_TYPE.ERROR)\r\n        return false\r\n      }\r\n      if (this.form.categoryId == '0') {\r\n        this.crud.notify('根节点不能添加', CRUD.NOTIFICATION_TYPE.ERROR)\r\n        return false\r\n      }\r\n      this.form.categoryType = this.type\r\n      this.form.indDimAndValueRelations = []\r\n      this.indDefRuleStr = ''\r\n    },\r\n    // 历史版本\r\n    toSelectHistory(data) {\r\n      this.showIndHistory = true\r\n      //this.hisIeId = data.id;\r\n      //this.historyData.push(data)\r\n      getHisList(data.id).then(res => {\r\n        if(res.code == 0) {\r\n          this.historyData=res.data.records\r\n          console.log(this.historyData)\r\n\r\n        }\r\n      })\r\n    },\r\n    toSelectFlow(data) {\r\n      this.showFlow = true\r\n      approveDetailByBusinessKey(qs.stringify({businessKey:data.id})).then(res => {\r\n        //审批流程\r\n        this.flowData = res.data\r\n      })\r\n    },\r\n    toResult(data){\r\n      this.$router.push({path: 'result/index',query:{ieName:data.bizName}});\r\n    },\r\n    // 历史详情\r\n    toSelectHistoryDetail(data) {\r\n      const _thisAtom = this.$refs.atomPage\r\n      _thisAtom.form = data\r\n      _thisAtom.title = data.bizName + '[' + data.bizCode + ']历史详情'\r\n      const param = {\r\n        bizCode: data.bizCode,\r\n        keepHistory: data.keepHistory\r\n      }\r\n      getDimensions(param).then(data => {\r\n        _thisAtom.atomDimensions = data.data\r\n      })\r\n      getDimInfo().then(data => {\r\n        _thisAtom.dimensions = data.data\r\n      })\r\n      // 获取数据源\r\n      getAllSource().then(data => {\r\n        _thisAtom.sourceData = [{ id: 'local', datasourceName: '默认数据源' }].concat(data.data)\r\n      })\r\n      /* _this.bizCode = data.bizCode*/\r\n      _thisAtom.atomPageDialog = true\r\n    },\r\n    bizTabCodeChange() {\r\n      this.bizTabCodeDis = this.form.bizTabCode == null;\r\n    },\r\n    atomDimensionHandle() {\r\n\r\n      if (this.form.bizCalcSql != null) {\r\n\r\n        const _this = this.$refs.dimensionPage\r\n        _this.keepHistory = this.form.keepHistory\r\n        if (this.form.bizTabCode == null) {\r\n          this.bizTabCodeDis = true\r\n        }\r\n        /* const paramSql = {\r\n          bizCalcSql: this.form.bizCalcSql\r\n        }\r\n        bizCalcSqlVali(paramSql).then(data => {\r\n          if (data.code == 0) {\r\n\r\n          } else {\r\n            this.$message(data.msg)\r\n          }\r\n        })*/\r\n        const param = {\r\n          bizCalcSql: this.form.bizCalcSql,\r\n          bizCode: this.form.bizCode,\r\n          keepHistory: this.form.keepHistory,\r\n          bizTabCode: this.form.bizTabCode,\r\n          targetDataSource: this.form.targetDataSource\r\n        }\r\n        getDimensions(param).then(data => {\r\n          if (data.code == 0) {\r\n            _this.atomDimensions = data.data\r\n            _this.dimensionDialog = true\r\n          } else {\r\n            this.$message(data.msg)\r\n          }\r\n        })\r\n        getDimInfo().then(data => {\r\n          _this.dimensions = data.data\r\n        })\r\n        /* const colParam = {\r\n          'id': this.form.targetDataSource,\r\n          'tablename': this.form.bizTabCode\r\n          /!* 'data_type': this.form.filterColumn*!/\r\n        }*/\r\n        if (this.form.bizTabCode != null) {\r\n          getColumnByTabel(this.form.targetDataSource, this.form.bizTabCode).then(data => {\r\n            _this.colCodes = data.data\r\n          })\r\n          /* getColumns(colParam).then(data => {\r\n            if (data.code == 0) {\r\n              _this.colCodes = data.data\r\n              console.log(data.data)\r\n            } else {\r\n              _this.colCodes = []\r\n              alert('数据源连接错误')\r\n            }\r\n          })*/\r\n        } else {\r\n          this.bizTabCodeDis = true\r\n        }\r\n      }\r\n    },\r\n    // 接收维度信息\r\n    getAtomDimensions(data) {\r\n      this.form.atomDimensions = data\r\n    },\r\n    handleCategoryClick(data) {\r\n      this.crud.form.categoryId = data.id\r\n      this.crud.query.categoryIds = data.childrenIds\r\n      this.crud.query.categoryType = data.categoryType\r\n      this.form.categoryId = data.id\r\n      const parentId = data.parentId;\r\n      if(parentId == null) {\r\n        this.crud.optShow.add = false;\r\n        this.crud.form.indFirstType = data.id;\r\n        this.initIndSecondType(data.id,'form');\r\n      } else if(parentId == '0') {\r\n        this.crud.optShow.add = true;\r\n        this.crud.form.indFirstType = data.id;\r\n        this.initIndSecondType(data.id,'form');\r\n      } else {\r\n        this.crud.optShow.add = true;\r\n        this.crud.form.indFirstType = data.parentId;\r\n        this.initIndSecondType(data.parentId,'form');\r\n        this.crud.form.indSecondType = data.id;\r\n      }\r\n      this.crud.refresh()\r\n    },\r\n    // 数据源发生变化时查询对应的数据源下的表\r\n    dataSourceChangeHandle(val) {\r\n      this.form.bizTabCode = null\r\n      /* const param = {\r\n        id: val\r\n      }\r\n      getTables(param).then(data => {\r\n        this.tableInfo = data.data\r\n      })*/\r\n      // 通过数据源id查询表\r\n      getTablesById(val).then(data => {\r\n        this.tableInfo = data.data\r\n      })\r\n    },\r\n    toSourceDataName(row) {\r\n      let name = ''\r\n      this.sourceData.forEach(row1 => {\r\n        if (row1.id == row.sourceDataSource) {\r\n          name = row1.datasourceName\r\n        }\r\n      })\r\n      return name\r\n    },\r\n    toTargetDataName(row) {\r\n      let name = ''\r\n      this.sourceData.forEach(row1 => {\r\n        if (row1.id == row.targetDataSource) {\r\n          name = row1.datasourceName\r\n        }\r\n      })\r\n      return name\r\n    },\r\n    /** 点击计算按钮触发 */\r\n    processA(data) {\r\n      const bizCodes = []\r\n      for (let i = 0; i < data.length; i++) {\r\n        bizCodes.push(data[i].bizCode)\r\n      }\r\n      this.processParam.codes = bizCodes\r\n      this.processDialog = true\r\n    },\r\n    processB() {\r\n      if (this.dateValue == '') {\r\n        this.crud.notify('日期不能为空', CRUD.NOTIFICATION_TYPE.ERROR)\r\n      } else {\r\n        this.processParam.periodDate = this.dateFormat(this.dateValue, 'YYYYMMDD')\r\n        process(this.processParam, 'atom').then(data => {\r\n          if (data.code == 0) {\r\n            this.crud.notify(data.msg, CRUD.NOTIFICATION_TYPE.SUCCESS)\r\n          } else {\r\n            this.crud.notify(data.msg, CRUD.NOTIFICATION_TYPE.ERROR)\r\n          }\r\n          this.processDialog = false\r\n        })\r\n      }\r\n    },\r\n    // 新增维度\r\n    addDimension() {\r\n      this.showIndDimensionAdd = true\r\n    },\r\n    // 新增维度值\r\n    addDimensionValue() {\r\n      this.showIndDimensionValueAdd = true\r\n    },\r\n    // 新增维度和维度值\r\n    addDimensionAndValue() {\r\n      this.dimensionArr.push(++this.dimensionNumber)\r\n      this.dimensionArr = this.uniqueArr(this.dimensionArr)\r\n      // this.dimensionArr.push({ id: ++this.dimensionNumber, value: { dimension: null, dimensionValue: null } })\r\n    },\r\n    // 删除维度和维度值\r\n    deleteDimensionAndValue(item) {\r\n      this.dimensionArr.splice(this.dimensionArr.indexOf(item), 1);\r\n      this.dimensionNumber = 2\r\n    },\r\n    // 数组去重\r\n    uniqueArr(arr){\r\n      var x = new Set(arr);\r\n      return [...x];\r\n    },\r\n    // 衍生指标编辑指标口径规则\r\n    showIndDefRuleDialog() {\r\n      // this.indDefRuleStr = ''\r\n      this.value = []\r\n      this.showIndDefRule = true\r\n    },\r\n    // 关闭衍生指标编辑指标口径规则\r\n    closeIndDefRuleDialog() {\r\n      this.showIndDefRule = false\r\n    },\r\n    handleChange(value, direction, movedKeys) {\r\n      console.log(value, direction, movedKeys);\r\n    },\r\n    // 新增指标内部警戒值（表示预警）\r\n    addIndInnerWarnValue() {\r\n      this.indInnerWarnValueArr.push(++this.indInnerWarnValueNumber)\r\n      this.indInnerWarnValueArr = this.uniqueArr(this.indInnerWarnValueArr)\r\n    },\r\n    // 删除指标内部警戒值（表示预警）\r\n    delIndInnerWarnValue(item) {\r\n      this.indInnerWarnValueArr.splice(this.indInnerWarnValueArr.indexOf(item), 1);\r\n      this.indInnerWarnValueNumber = 1\r\n    },\r\n    // 新增指标内部警戒值（表示通过）\r\n    addIndInnerWarnPassValue() {\r\n      this.indInnerWarnPassValueArr.push(++this.indInnerWarnPassValueNumber)\r\n      this.indInnerWarnPassValueArr = this.uniqueArr(this.indInnerWarnPassValueArr)\r\n    },\r\n    // 删除指标内部警戒值（表示通过）\r\n    delIndInnerWarnPassValue(item) {\r\n      this.indInnerWarnPassValueArr.splice(this.indInnerWarnPassValueArr.indexOf(item), 1);\r\n      this.indInnerWarnPassValueNumber = 1\r\n    },\r\n    // 新增指标监管警戒值（表示预警）\r\n    addIndMonWarnValue() {\r\n      this.indMonWarnValueArr.push(++this.indMonWarnValueNumber)\r\n      this.indMonWarnValueArr = this.uniqueArr(this.indMonWarnValueArr)\r\n    },\r\n    // 删除指标监管警戒值（表示预警）\r\n    delIndMonWarnValue(item) {\r\n      this.indMonWarnValueArr.splice(this.indMonWarnValueArr.indexOf(item), 1);\r\n      this.indMonWarnValueNumber = 1\r\n    },\r\n    // 新增指标监管警戒值（表示通过）\r\n    addIndMonWarnPassValue() {\r\n      this.indMonWarnPassValueArr.push(++this.indMonWarnPassValueNumber)\r\n      this.indMonWarnPassValueArr = this.uniqueArr(this.indMonWarnPassValueArr)\r\n    },\r\n    // 删除指标监管警戒值（表示通过）\r\n    delIndMonWarnPassValue(item) {\r\n      this.indMonWarnPassValueArr.splice(this.indMonWarnPassValueArr.indexOf(item), 1);\r\n      this.indMonWarnPassValueNumber = 1\r\n    },\r\n    // 废止指标\r\n    cancelInd(data) {\r\n        let newIeArr = 0;\r\n        let unNewIeArr = 0;\r\n        if(data == null && !Array.isArray(data)) return;\r\n        let ids = \"\";\r\n        for(let i = 0; i < data.length; i++) {\r\n          const indVerifyStatus = data[i].indVerifyStatus;\r\n          if(indVerifyStatus == '2') {\r\n            this.$notify({\r\n              title: '审批中的指标不能废止',\r\n              type: 'error',\r\n              duration: 2500\r\n            })\r\n            return;\r\n          }\r\n          if(indVerifyStatus == '1') {\r\n            newIeArr += 1;\r\n          } else {\r\n            unNewIeArr += 1;\r\n          }\r\n          ids += data[i].id + \",\";\r\n        }\r\n        if(ids != null && ids.includes(\",\")) {\r\n          ids = ids.substr(0,ids.length - 1);\r\n        }\r\n        if(newIeArr > 0 && unNewIeArr > 0) {\r\n          this.$notify({\r\n            title: '请选择审批状态一致的指标操作',\r\n            type: 'error',\r\n            duration: 2500\r\n          })\r\n          return;\r\n        } else if(newIeArr == 0 && unNewIeArr == 0) {\r\n          this.$notify({\r\n            title: '请选择指标记录再操作',\r\n            type: 'error',\r\n            duration: 2500\r\n          })\r\n          return;\r\n        }\r\n       this.$confirm('确认废止指标?', '废止指标', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        if(newIeArr > 0 && unNewIeArr == 0) { //批量删除\r\n          defaultCrud.delAllLoading = true\r\n          delAtom(ids).then(res => {\r\n            if(res.code == 0) {\r\n              this.$notify({\r\n                title: '指标删除成功',\r\n                type: 'success',\r\n                duration: 2500\r\n              })\r\n            } else {\r\n              this.$notify({\r\n                title: '指标删除失败',\r\n                type: 'error',\r\n                duration: 2500\r\n              })\r\n            }\r\n          })\r\n          defaultCrud.refresh();\r\n        } else if(newIeArr == 0 && unNewIeArr > 0) {//批量废止\r\n          abolish(ids).then(res => {\r\n            if(res.code == 0) {\r\n              this.$notify({\r\n                title: '指标废止成功',\r\n                type: 'success',\r\n                duration: 2500\r\n              })\r\n            } else {\r\n              this.$notify({\r\n                title: '指标废止失败',\r\n                type: 'error',\r\n                duration: 2500\r\n              })\r\n            }\r\n            defaultCrud.refresh();\r\n          })\r\n        }\r\n      }).catch(() => {})\r\n    },\r\n    // 指标发起审批\r\n    processVerify(data) {\r\n      if(data == null && !Array.isArray(data)) return;\r\n      let ids = \"\";\r\n      for(let i = 0; i < data.length; i++) {\r\n        const indVerifyStatus = data[i].indVerifyStatus;\r\n        if(indVerifyStatus == '2') {\r\n          this.$notify({\r\n            title: '审批中的指标不能重复发起审批',\r\n            type: 'error',\r\n            duration: 2500\r\n          })\r\n          return;\r\n        }\r\n        ids += data[i].id + \",\";\r\n      }\r\n      if(ids != null && ids.includes(\",\")) {\r\n        ids = ids.substr(0,ids.length - 1);\r\n      }\r\n      this.$confirm('确认发起审批?', '发起审批', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        startProcess(ids).then(res => {\r\n          if(res.code == 0) {\r\n            this.$notify({\r\n              title: '发起审批请求成功',\r\n              type: 'success',\r\n              duration: 2500\r\n            })\r\n          } else {\r\n            this.$notify({\r\n              title: '发起审批请求失败',\r\n              type: 'error',\r\n              duration: 2500\r\n            })\r\n          }\r\n          this.crud.refresh();\r\n        })\r\n      }).catch(() => {})\r\n    },\r\n    // 关闭指标历史版本弹框\r\n    closeIndHistoryDialog() {\r\n      this.historyData=[];\r\n      this.showIndHistory = false\r\n    },\r\n    //关闭流程查看弹框\r\n    closeFlowDialog(){\r\n      this.flowData=[];\r\n      this.showFlow = false\r\n    },\r\n    // 关闭维度新增弹框\r\n    closeIndDimensionAddDialog() {\r\n      this.showIndDimensionAdd = false\r\n    },\r\n    // 确认提交新增维度\r\n    commitDim() {\r\n      crudIndDimInfo.crud.add(this.dimension).then(data => {\r\n        if (data.code && data.code != 0) {\r\n          this.$notify({\r\n            title: '新增失败',\r\n            type: 'error',\r\n            duration: 2500\r\n          })\r\n          this.showIndDimensionAdd = false\r\n        } else {\r\n          this.$notify({\r\n            title: '新增成功',\r\n            type: 'success',\r\n            duration: 2500\r\n          })\r\n          this.initDimInfos()\r\n          this.showIndDimensionAdd = false\r\n        }\r\n      })\r\n    },\r\n    // 关闭维度值新增弹框\r\n    closeIndDimensionValueAddDialog() {\r\n      this.showIndDimensionValueAdd = false\r\n    },\r\n    // 确认提交新增维度值\r\n    commitDimValue() {},\r\n    // 选择指标进行规则拼接\r\n    selectInd() {\r\n      this.indDefRuleStr += this.value[0]\r\n      this.showIndDefRule = false\r\n    },\r\n    // 指标规则+号按钮\r\n    indDefRulePlus() {\r\n      this.indDefRuleStr += ' + '\r\n    },\r\n    // 指标规则-号按钮\r\n    indDefRuleSubtraction() {\r\n      this.indDefRuleStr += ' - '\r\n    },\r\n    // 指标规则×号按钮\r\n    indDefRuleMultiplication() {\r\n      this.indDefRuleStr += ' × '\r\n    },\r\n    // 指标规则/号按钮\r\n    indDefRuleDivision() {\r\n      this.indDefRuleStr += ' / '\r\n    },\r\n    handleDimValueClick1(data, selected) {\r\n      if (selected == true) {\r\n        this.dimValueTmp1.push(data.id)\r\n        this.dimensionTmp1 = this.uniqueArr(this.dimValueTmp1)\r\n      }\r\n      this.dimAndValueObject1.dimensionValue = this.dimValueTmp1.join(',')\r\n    },\r\n    handleDimValueClick2(data, selected) {\r\n      if (selected == true) {\r\n        this.dimValueTmp2.push(data.id)\r\n        this.dimensionTmp1 = this.uniqueArr(this.dimValueTmp2)\r\n      }\r\n      this.dimAndValueObject2.dimensionValue = this.dimValueTmp2.join(',')\r\n    },\r\n    handleDimValueClick3(data, selected, node) {\r\n\r\n    },\r\n    indInnerWarnValueBiggerClick() {\r\n      this.form.indInnerWarnValue += '>'\r\n    },\r\n    indInnerWarnValueEqualsClick() {\r\n      this.form.indInnerWarnValue += '='\r\n    },\r\n    indInnerWarnValueSmallerClick() {\r\n      this.form.indInnerWarnValue += '<'\r\n    },\r\n    indInnerWarnValueNotEqualsClick() {\r\n      this.form.indInnerWarnValue += '≠'\r\n    },\r\n    indMonWarnValueBiggerClick() {\r\n      this.form.indMonWarnValue += '>'\r\n    },\r\n    indMonWarnValueEqualsClick() {\r\n      this.form.indMonWarnValue += '='\r\n    },\r\n    indMonWarnValueSmallerClick() {\r\n      this.form.indMonWarnValue += '<'\r\n    },\r\n    indMonWarnValueNotEqualsClick() {\r\n      this.form.indMonWarnValue += '≠'\r\n    },\r\n    //修改按钮弹框\r\n    modifyInd(data) {\r\n\r\n    },\r\n    async getCategoryName(row) {\r\n      if (row.indFirstType == null) {\r\n        return '未知分类'\r\n      }\r\n      let res = await crudIndCategory.getCategoryName(row.indFirstType);\r\n      if(res.code == 0) {\r\n        return res.data+\"ccc\";\r\n      }\r\n      return '未知分类';\r\n      /*.then(res => {\r\n        if(res.code == 0) {\r\n          return res.data+\"ccc\";\r\n        }\r\n        return '未知分类';\r\n      })*/\r\n      //return '未知分类'\r\n    },\r\n    getDepts() {\r\n      getDepts({ enabled: true }).then(res => {\r\n        this.depts = res.content\r\n      })\r\n    },\r\n    delAtom(row) {\r\n      if(row.indVerifyStatus == \"2\") {\r\n        this.$notify({\r\n          title: '审批中的指标不能删除',\r\n          type: 'warning',\r\n          duration: 2500\r\n        })\r\n        return\r\n      }\r\n      if(row.indDeployStatus == \"2\") { //已发布\r\n        this.$confirm('该指标已发布，确认废止?', '废止指标', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          abolish(row.id).then(res => {\r\n            if(res.code == 0) {\r\n              this.$notify({\r\n                title: '指标废止成功',\r\n                type: 'success',\r\n                duration: 2500\r\n              })\r\n            } else {\r\n              this.$notify({\r\n                title: '指标废止失败',\r\n                type: 'error',\r\n                duration: 2500\r\n              })\r\n            }\r\n            //defaultCrud.refresh();\r\n          })\r\n        }).catch(() => {})\r\n      } else if(row.indDeployStatus == \"1\") {//未发布\r\n        this.$confirm('请确认是否删除?', '删除指标', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          defaultCrud.delAllLoading = true\r\n          delAtom(row.id).then(res => {\r\n            if(res.code == 0) {\r\n              this.$notify({\r\n                title: '指标删除成功',\r\n                type: 'success',\r\n                duration: 2500\r\n              })\r\n            } else {\r\n              this.$notify({\r\n                title: '指标删除失败',\r\n                type: 'error',\r\n                duration: 2500\r\n              })\r\n            }\r\n          })\r\n          defaultCrud.refresh();\r\n        }).catch(() => {})\r\n      } else if(row.indDeployStatus == \"3\") {//已废止\r\n        this.$alert('已废止指标，不能删除','删除指标');\r\n      }\r\n    },\r\n    submitAndStartProcess() {\r\n      this.crud.form.indVerifyStatus='2';\r\n      /*let indFrequency = this.crud.form.indFrequency;\r\n      if(Array.isArray(indFrequency)) {\r\n        let str_indFrequency = indFrequency.join(',');\r\n        this.crud.form.indFrequency = str_indFrequency;\r\n      }*/\r\n      this.crud.submitCU()\r\n      /*updateAtom(this.crud.form).then(res=>{\r\n        if(res.code == 0) {\r\n          this.$notify({\r\n            title: '指标修改成功',\r\n            type: 'success',\r\n            duration: 2500\r\n          })\r\n        } else {\r\n          this.$notify({\r\n            title: '指标修改失败',\r\n            type: 'error',\r\n            duration: 2500\r\n          })\r\n        }\r\n        this.formDialog = false\r\n        defaultCrud.status.cu = 0\r\n        defaultCrud.refresh();\r\n      })*/\r\n    }\r\n  }\r\n}\r\n",null]}