{"remainingRequest":"D:\\code\\DataAssetPlatform\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DataAssetPlatform\\Pncui-Indicator\\node_modules\\eladmin-system\\src\\views\\system\\role\\form1.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\DataAssetPlatform\\Pncui-Indicator\\node_modules\\eladmin-system\\src\\views\\system\\role\\form1.vue","mtime":1647917128245},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647917124586},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":1647917124178},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647917124586},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":1647917137429}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getDepts } from '../../../api/system/dept'\nimport request from '@eladmin/utils/request'\nimport qs from 'qs'\n\nexport default {\n  data() {\n    return {\n      loading: false,\n      dialog: false,\n      title: '',\n      roleId: '',\n      roleLevel: '',\n      tree: {\n        defaultProps: { children: 'children', label: 'name' },\n        data: [],\n        deptNam: '',\n        loading: true,\n        menuIds: []\n      },\n      table: {\n        query: {\n          blurry: '',\n          deptId: '',\n          enabled: true\n        },\n        data: [],\n        loading: false,\n        total: 0, page: 0, size: 10\n      },\n      tag: {\n        data: []\n      },\n      userIds: []\n    }\n  },\n  computed: {},\n  created() {\n\n  },\n  methods: {\n    // 获取左侧部门数据\n    getDeptDatas() {\n      this.tree.loading = false\n      const sort = 'id,desc'\n      const params = { sort: sort, maxLevel: null }\n      if (this.tree.deptName) {\n        params['name'] = this.tree.deptNam\n      }\n      getDepts(params).then(res => {\n        this.tree.data = res.content\n        this.tree.loading = false\n      })\n    },\n    // 切换部门\n    handleNodeClick(data) {\n      if (data.pid === 0) {\n        this.table.query.deptId = null\n      } else {\n        this.table.query.deptId = data.id\n      }\n      this.toQueryUser()\n    },\n    toQueryUser() {\n      var _this = this\n      _this.table.loading = true\n      const sort = 'id,desc'\n      this.params = { page: this.table.page, size: this.table.size, sort: sort }\n      this.params['blurry'] = _this.table.query.blurry\n      this.params['deptId'] = _this.table.query.deptId\n      this.params['enabled'] = _this.table.query.enabled\n      request({\n        url: '/api/users/list' + '?' + qs.stringify(_this.params, { indices: false }),\n        method: 'get'\n      }).then(res => {\n        _this.table.data = res.content\n        _this.table.total = res.totalElements\n        _this.table.loading = false\n\n        if (_this.table.total > 0 ) {\n          this.$nextTick(() => {\n            _this.table.data.forEach(row => {\n              if (this.userIds.indexOf(row.id) >= 0) {\n                this.$refs.userTable.toggleRowSelection(row,true)\n              } else {\n                this.$refs.userTable.toggleRowSelection(row,false)\n              }\n            })\n\n          })\n        }\n\n       // this.$refs.userTable.toggleRowSelection(_this.table.data[0],true)\n\n        // TODO 默认选中用户未处理\n        // _this.tag.data.forEach(row => {\n        // console.info(_this.table.data[1])\n        // this.$refs.userTable.toggleAllSelection()\n        // this.$refs.userTable.toggleRowSelection(this.table.data[0])\n        // });\n        // console.info(this.hasSelectList)\n        // this.table.data.forEach(row => {\n        //   if(this.hasSelectList.indexOf(row.ID) >= 0){\n        //     console.info(row.ID)\n        //     console.info(row)\n        //     this.$refs.userTable.toggleRowSelection(row,true);\n        //   }\n        // })\n      })\n    },\n    userPageChange(e) {\n      this.table.page = e - 1\n      this.toQueryUser()\n    },\n    userSizeChange(e) {\n      this.table.page = 0\n      this.table.size = e\n      this.toQueryUser()\n    },\n    onUserSelected(selection, row) {\n      if (selection.indexOf(row) >= 0) {\n        if (this.userIds.indexOf(row.id) < 0) {\n          this.tag.data.push(row)\n          this.userIds.push(row.id)\n        }\n      } else {\n        if (this.userIds.indexOf(row.id) >= 0) {\n          this.tag.data.splice(this.userIds.indexOf(row.id), 1)\n          this.userIds.splice(this.userIds.indexOf(row.id), 1)\n        }\n      }\n    },\n    onUserSelectedAll(selection) {\n      if (selection.length > 0) {\n        selection.forEach(row => {\n          if (this.userIds.indexOf(row.id) < 0) {\n            this.tag.data.push(row)\n            this.userIds.push(row.id)\n          }\n        })\n      } else {\n        this.table.data.forEach(row => {\n          if (this.userIds.indexOf(row.id) >= 0) {\n            this.tag.data.splice(this.userIds.indexOf(row.id), 1)\n            this.userIds.splice(this.userIds.indexOf(row.id), 1)\n          }\n        })\n      }\n    },\n    getUserByRoleId() {\n      var _this = this\n      request({\n        url: '/api/roles/queryUserByRole' + '?' + qs.stringify({ 'roleId': this.roleId }, { indices: false }),\n        method: 'get'\n      }).then(res => {\n        _this.tag.data = res\n        _this.userIds = []\n        _this.tag.data.forEach(row => {\n          this.userIds.push(row.id)\n        })\n      })\n    },\n    tagHandleClose(tag) {\n      console.log('tagHandleClose:', tag, this.tag.data, this.userIds)\n      this.tag.data.splice(this.tag.data.indexOf(tag), 1)\n      this.userIds.splice(this.userIds.indexOf(tag.id), 1)\n\n      this.$nextTick(() => {\n        this.table.data.forEach(row => {\n          if (tag.id == row.id) {\n            this.$refs.userTable.toggleRowSelection(row,false)\n          }\n        })\n      })\n\n    },\n    cancel() {\n      this.title = ''\n      this.roleId = ''\n      this.roleLevel = ''\n      this.dialog = false\n      this.table.data = []\n    },\n    doSubmit() {\n      // var _this = this\n      this.loading = true\n      request({\n        url: '/api/roles/saveUserRoles' + '?' + qs.stringify({\n          'roleId': this.roleId,\n          'userIds': this.userIds\n        }, { indices: false }),\n        method: 'post'\n      }).then(res => {\n        this.loading = false\n        this.$notify({\n          title: '保存成功',\n          type: 'success',\n          duration: 2500\n        })\n        this.dialog = false\n      })\n    }\n  }\n}\n",null]}