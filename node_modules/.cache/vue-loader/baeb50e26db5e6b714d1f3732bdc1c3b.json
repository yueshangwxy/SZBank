{"remainingRequest":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\eladmin-common\\src\\views\\mnt\\database\\execute.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\eladmin-common\\src\\views\\mnt\\database\\execute.vue","mtime":1650772037015},{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650772030926},{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1650772030306},{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650772030926},{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1650772056629}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters } from 'vuex'\r\nimport { getToken } from '../../../utils/auth'\r\nexport default {\r\n  props: {\r\n    databaseInfo: {\r\n      type: Object,\r\n      default() {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      dialog: false,\r\n      headers: {\r\n        Authorization: getToken()\r\n      },\r\n      rules: {}\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['databaseUploadApi'])\r\n  },\r\n  mounted() {\r\n  },\r\n  methods: {\r\n    cancel() {\r\n      this.dialog = false\r\n    },\r\n    handleSuccess(response, file, fileList) {\r\n      if (response === 'success') {\r\n        this.$notify({\r\n          title: '执行成功',\r\n          type: 'success',\r\n          duration: 2500\r\n        })\r\n      } else {\r\n        this.$notify({\r\n          title: response,\r\n          type: 'error',\r\n          duration: 0\r\n        })\r\n      }\r\n    },\r\n    handleError(e, file, fileList) {\r\n      const msg = JSON.parse(e.message)\r\n      this.$notify({\r\n        title: msg.message,\r\n        type: 'error',\r\n        duration: 0\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}