{"remainingRequest":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\code\\indicator\\Pncui-Indicator\\src\\views\\indicators\\induserapply\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\code\\indicator\\Pncui-Indicator\\src\\views\\indicators\\induserapply\\index.vue","mtime":1638179658869},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport crudIndUserApplyInfo from '@/api/indUserApply/indUserApplyInfo'\r\nimport CRUD, { presenter, header, form, crud } from '@crud/crud'\r\nimport rrOperation from '@crud/RR.operation'\r\nimport crudOperation from '@crud/CRUD.operation'\r\nimport udOperation from '@crud/UD.operation'\r\nimport pagination from '@crud/Pagination'\r\nimport Treeselect from '@riophae/vue-treeselect'\r\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css'\r\nimport { getDepts } from '@/utils/system'\r\n\r\nconst moment = require('moment')\r\n// crud交由presenter持有\r\nconst defaultCrud = CRUD({ title: '人员指标使用情况', url: crudIndUserApplyInfo.url, sort: 'id,desc', crudMethod: { ...crudIndUserApplyInfo.crud }})\r\nconst defaultForm = { id: null, orgId: null, orgName: null, userId: null, userName: null, ieCode: null, ieName: null, ieKindOneCode: null, ieKindTwoCode: null, ieTypeCode: null, bizDeptId: null, bizDeptName: null, ieRefCnt: null, ieQryCnt: null, repDate: null, crtDate: null, updDate: null,repDateInterval:null }\r\nexport default {\r\n  name: 'IndUserApplyInfo',\r\n  components: { Treeselect,pagination, crudOperation, rrOperation, udOperation },\r\n  mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\r\n  dicts: ['IND_FIRST_TYPE', 'IND_SECOND_TYPE', 'IE_PROP', 'BUSSINESS_DEPT'],\r\n  data() {\r\n    return {\r\n      depts: [],\r\n      permission: {\r\n        add: ['admin', 'indUserApplyInfo:add'],\r\n        edit: ['admin', 'indUserApplyInfo:edit'],\r\n        del: ['admin', 'indUserApplyInfo:del']\r\n      },\r\n      rules: {\r\n        id: [\r\n          { required: true, message: 'id不能为空', trigger: 'blur' }\r\n        ],\r\n        orgId: [\r\n          { required: true, message: '机构ID不能为空', trigger: 'blur' }\r\n        ],\r\n        orgName: [\r\n          { required: true, message: '机构名称不能为空', trigger: 'blur' }\r\n        ],\r\n        userId: [\r\n          { required: true, message: '人员ID不能为空', trigger: 'blur' }\r\n        ],\r\n        userName: [\r\n          { required: true, message: '人员姓名不能为空', trigger: 'blur' }\r\n        ],\r\n        ieCode: [\r\n          { required: true, message: '指标编码不能为空', trigger: 'blur' }\r\n        ],\r\n        ieName: [\r\n          { required: true, message: '指标名称不能为空', trigger: 'blur' }\r\n        ],\r\n        ieKindOneCode: [\r\n          { required: true, message: '指标分类一级不能为空', trigger: 'blur' }\r\n        ],\r\n        ieKindTwoCode: [\r\n          { required: true, message: '指标分类二级不能为空', trigger: 'blur' }\r\n        ],\r\n        ieType: [\r\n          { required: true, message: '指标类型不能为空', trigger: 'blur' }\r\n        ],\r\n        bizDeptId: [\r\n          { required: true, message: '业务属主部门ID不能为空', trigger: 'blur' }\r\n        ],\r\n        bizDeptName: [\r\n          { required: true, message: '业务属主部门名称不能为空', trigger: 'blur' }\r\n        ],\r\n        repDate: [\r\n          { required: true, message: '数据日期不能为空', trigger: 'blur' }\r\n        ]\r\n      },\r\n      queryTypeOptions: [\r\n        { key: 'id', display_name: 'id' },\r\n        { key: 'orgId', display_name: '机构ID' },\r\n        { key: 'orgName', display_name: '机构名称' },\r\n        { key: 'userId', display_name: '人员ID' },\r\n        { key: 'userName', display_name: '人员姓名' },\r\n        { key: 'ieCode', display_name: '指标编码' },\r\n        { key: 'ieName', display_name: '指标名称' },\r\n        { key: 'ieKindOneCode', display_name: '指标分类一级' },\r\n        { key: 'ieKindTwoCode', display_name: '指标分类二级' },\r\n        { key: 'ieType', display_name: '指标类型' },\r\n        { key: 'bizDeptId', display_name: '业务属主部门ID' },\r\n        { key: 'bizDeptName', display_name: '业务属主部门名称' },\r\n        { key: 'repDate', display_name: '数据日期' }\r\n      ],\r\n      pickerMinDate: \"\",//第一次选中的时间\r\n      pickerOptions: {\r\n        onPick: obj => {\r\n          //this.pickerMinDate = new Date(obj.minDate).getTime();\r\n        },\r\n        disabledDate: time => {\r\n          if (this.pickerMinDate) {\r\n            const day1 = 366 * 24 * 3600 * 1000;\r\n            let maxTime = this.pickerMinDate + day1;\r\n            let minTime = this.pickerMinDate - day1;\r\n            return time.getTime() > maxTime || time.getTime() < minTime;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getDepts();\r\n  },\r\n  created() {\r\n    //defaultCrud.query.repDateInterval = this.timeDefault\r\n  },\r\n  computed: {\r\n    // 默认时间\r\n    timeDefault () {\r\n      var defalutStartTime = moment().subtract(1,\"year\").format('YYYY-MM-DD')\r\n      var defalutEndTime = moment().format('YYYY-MM-DD')\r\n      return [defalutStartTime, defalutEndTime]\r\n    }\r\n  },\r\n  methods: {\r\n    // 获取数据前设置好接口地址\r\n    [CRUD.HOOK.beforeRefresh]() {\r\n      const query = this.query\r\n      if (query.type && query.value) {\r\n        this.crud.params[query.type] = query.value\r\n      }\r\n      return true\r\n    },\r\n    getDepts() {\r\n      getDepts({ enabled: true }).then(res => {\r\n        this.depts = res.content\r\n      })\r\n    },\r\n    dateFormat(row) {\r\n      // return moment(row.crtDate).format('YYYY-MM-DD');\r\n      return moment(row.crtDate).format('YYYY-MM-DD')\r\n    }\r\n  }\r\n}\r\n",null]}