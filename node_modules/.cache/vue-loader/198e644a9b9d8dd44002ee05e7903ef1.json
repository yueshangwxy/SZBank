{"remainingRequest":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DataAssetPlatform\\Pncui-Ind\\src\\views\\indicators\\searchPage\\apiPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\src\\views\\indicators\\searchPage\\apiPage.vue","mtime":1648193912754},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647917124586},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1647917124178},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647917124586},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1647917137429}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    name: 'APIPage',\n    data() {\n        return {\n            filterText: '',\n            defaultProps: {\n                children: 'children',\n                label: 'label'\n            },\n            // 筛选\n            filterForm: {\n                input1: '',\n                input2: '',\n                input3: '',\n                input4: '',\n                input5: '',\n                input6: '',\n            },\n            treeData: [],\n            // 表格\n            tableList: [],\n            // 分页\n            pageSize: 10,\n            currentPage: 1,\n            total: 50,\n            // 详情查看\n            detailsShow: false,\n            details: {}\n        }\n    },\n    created() {\n        this.$api.qryTreeData({}).then(res => {\n            let data = res.data\n            this.treeData = data.apiTree\n        })\n    },\n    mounted() {\n        this.$api.qryAPI({}).then(res => {\n            console.log('qryAPI',res);\n            this.total = res.total\n            this.tableList = res.data\n        })\n    },\n    methods: {\n        // 节点过滤\n        filterNode(value, data) {\n            if (!value) return true;\n            return data.label.indexOf(value) !== -1;\n        },\n        // 节点点击\n        handleNodeClick(data) {\n            console.log(data);\n        },\n        // 搜索\n        query() {\n\n        },\n        // 重置 \n        reset() {\n            this.filterForm = {}\n        },\n        // 按钮   --- 详情查看\n        detailView(item) {\n            this.detailsShow = true\n            this.details = item\n        },\n        // 分页\n        handleSizeChange(val) {\n            console.log(`每页 ${val} 条`);\n        },\n        handleCurrentChange(val) {\n            console.log(`当前页: ${val}`);\n        }\n    },\n}\n",{"version":3,"sources":["apiPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"apiPage.vue","sourceRoot":"src/views/indicators/searchPage","sourcesContent":["<template>\r\n    <div class=\"apiPage\">\r\n        <div class=\"tree\">\r\n            <el-input placeholder=\"输入关键字进行过滤\" v-model=\"filterText\" clearable=\"\">\r\n            </el-input>\r\n            <el-tree class=\"filter-tree\" \r\n                :data=\"treeData\" \r\n                :props=\"defaultProps\" \r\n                accordion \r\n                @node-click=\"handleNodeClick\"\r\n                :filter-node-method=\"filterNode\" ref=\"tree\">\r\n            </el-tree>\r\n        </div>\r\n        <div class=\"right\">\r\n            <div class=\"condition\">\r\n                <div class=\"input\">\r\n                    <p>\r\n                        <el-input v-model=\"filterForm.input1\" placeholder=\"归属应用\" clearable></el-input>\r\n                        <el-input v-model=\"filterForm.input2\" placeholder=\"目录层级1\" clearable></el-input>\r\n                        <el-input v-model=\"filterForm.input3\" placeholder=\"目录层级2\" clearable></el-input>\r\n                    </p>\r\n                    <p>\r\n                        <el-input v-model=\"filterForm.input4\" placeholder=\"目录层级3\" clearable></el-input>\r\n                        <el-input v-model=\"filterForm.input5\" placeholder=\"底层存储类型\" clearable></el-input>\r\n                        <el-input v-model=\"filterForm.input6\" placeholder=\"接口联系人\" clearable></el-input>\r\n                    </p>\r\n                </div>\r\n                <div class=\"option\">\r\n                    <p></p>\r\n                    <p>\r\n                        <el-button>搜索</el-button>\r\n                        <el-button @click=\"reset()\">重置</el-button>\r\n                    </p>\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"tableList\" v-if=\"!detailsShow\">\r\n                <div class=\"tableItem\" v-for=\"(item,index) in tableList\" :key=\"index\">\r\n                    <div class=\"detail\">\r\n                        <p>\r\n                            <span>归属应用：{{item.ind_test}}</span>\r\n                            <span>所属用户：{{item.user}}</span>\r\n                            <span>目录路径：{{item.path}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span>接口地址：{{item.apiAdress}}</span>\r\n                            <span>接口返回示例：{{item.apiDemo}}</span>\r\n                            <span>资产描述：{{item.desc}}</span>\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"btns\">\r\n                        <el-button type=\"text\" @click=\"detailView(item)\">详情查看</el-button>\r\n                        <el-button type=\"text\" @click=\"detailView(item)\">申请访问</el-button>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n            <el-pagination @size-change=\"handleSizeChange\" \r\n                @current-change=\"handleCurrentChange\"\r\n                :current-page=\"currentPage\" \r\n                :page-sizes=\"[10, 20, 30, 50]\" \r\n                :page-size=\"pageSize\"\r\n                layout=\"total, sizes, prev, pager, next, jumper\" \r\n                :total=\"total\"\r\n                v-if=\"!detailsShow\">\r\n            </el-pagination>\r\n            <!-- 详情查看 -->\r\n            <div class=\"details\" v-if=\"detailsShow\">\r\n                <div class=\"info\">\r\n                    <h5>详情查看</h5>\r\n                    <div class=\"basicInfo detail\">\r\n                        <p>\r\n                            <span>基本信息</span>\r\n                        </p>\r\n                        <p>\r\n                            <span>归属应用：{{details.ind_test}}</span>\r\n                            <span>所属用户：{{details.user}}</span>\r\n                            <span>目录路径：{{details.path}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span>接口地址：{{details.apiAdress}}</span>\r\n                            <span>接口返回示例：{{details.apiDemo}}</span>\r\n                            <span>资产描述：{{details.desc}}</span>\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"reqParams detail\">\r\n                        <p>\r\n                            <span>入参</span>\r\n                        </p>\r\n                        <p>\r\n                            <span>归属应用：{{details.ind_test}}</span>\r\n                            <span>所属用户：{{details.user}}</span>\r\n                            <span>目录路径：{{details.path}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span>接口地址：{{details.apiAdress}}</span>\r\n                            <span>接口返回示例：{{details.apiDemo}}</span>\r\n                            <span>资产描述：{{details.desc}}</span>\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"resParams detail\">\r\n                        <p>\r\n                            <span>出参</span>\r\n                        </p>\r\n                        <p>\r\n                            <span>归属应用：{{details.ind_test}}</span>\r\n                            <span>所属用户：{{details.user}}</span>\r\n                            <span>目录路径：{{details.path}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span>接口地址：{{details.apiAdress}}</span>\r\n                            <span>接口返回示例：{{details.apiDemo}}</span>\r\n                            <span>资产描述：{{details.desc}}</span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"back\">\r\n                    <i class=\"el-icon-back\" @click=\"detailsShow = false\" style=\"cursor:pointer;color:#79AC43;\"> 返回</i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        name: 'APIPage',\r\n        data() {\r\n            return {\r\n                filterText: '',\r\n                defaultProps: {\r\n                    children: 'children',\r\n                    label: 'label'\r\n                },\r\n                // 筛选\r\n                filterForm: {\r\n                    input1: '',\r\n                    input2: '',\r\n                    input3: '',\r\n                    input4: '',\r\n                    input5: '',\r\n                    input6: '',\r\n                },\r\n                treeData: [],\r\n                // 表格\r\n                tableList: [],\r\n                // 分页\r\n                pageSize: 10,\r\n                currentPage: 1,\r\n                total: 50,\r\n                // 详情查看\r\n                detailsShow: false,\r\n                details: {}\r\n            }\r\n        },\r\n        created() {\r\n            this.$api.qryTreeData({}).then(res => {\r\n                let data = res.data\r\n                this.treeData = data.apiTree\r\n            })\r\n        },\r\n        mounted() {\r\n            this.$api.qryAPI({}).then(res => {\r\n                console.log('qryAPI',res);\r\n                this.total = res.total\r\n                this.tableList = res.data\r\n            })\r\n        },\r\n        methods: {\r\n            // 节点过滤\r\n            filterNode(value, data) {\r\n                if (!value) return true;\r\n                return data.label.indexOf(value) !== -1;\r\n            },\r\n            // 节点点击\r\n            handleNodeClick(data) {\r\n                console.log(data);\r\n            },\r\n            // 搜索\r\n            query() {\r\n\r\n            },\r\n            // 重置 \r\n            reset() {\r\n                this.filterForm = {}\r\n            },\r\n            // 按钮   --- 详情查看\r\n            detailView(item) {\r\n                this.detailsShow = true\r\n                this.details = item\r\n            },\r\n            // 分页\r\n            handleSizeChange(val) {\r\n                console.log(`每页 ${val} 条`);\r\n            },\r\n            handleCurrentChange(val) {\r\n                console.log(`当前页: ${val}`);\r\n            }\r\n        },\r\n    }\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n    .apiPage {\r\n        display: flex;\r\n        @import './style/style.scss';\r\n    }\r\n</style>"]}]}