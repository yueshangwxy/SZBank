{"remainingRequest":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\indicator\\Pncui-Indicator\\src\\views\\indicators\\indicator\\derive.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\src\\views\\indicators\\indicator\\derive.vue","mtime":1646633727698},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport crudIndIndicatorInfo, {\r\n  getIndDeriveRule,\r\n  getIndDeriveRuleByIeCode,\r\n  updateStatus,\r\n  process,\r\n  updateDeriveStarStatus\r\n} from '../../../api/indicators/indIndicatorInfo'\r\nimport CRUD, {presenter, header, form, crud} from '@crud/crud'\r\nimport rrOperation from '@crud/RR.operation'\r\nimport crudOperation from '@crud/ICRUD.operation'\r\nimport udOperation from '@crud/UD.operation'\r\nimport pagination from '@crud/Pagination'\r\nimport category from '../category/category'\r\nimport arithmetic from './arithmetic/arithmeticPage'\r\nimport sqlCheck from './arithmetic/sqlCheckPage'\r\nimport limitRule from './arithmetic/limitRulePage'\r\nimport lookDetails from './details/lookDeriveDetails'\r\nimport {getDepts} from '@system/api/system/dept'\r\nimport Treeselect from '@riophae/vue-treeselect'\r\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css'\r\nimport {mapGetters} from 'vuex'\r\n\r\n// crud交由presenter持有\r\nconst defaultCrud = CRUD({\r\n  title: '衍生指标信息',\r\n  url: crudIndIndicatorInfo.url,\r\n  sort: 'id,desc',\r\n  crudMethod: {...crudIndIndicatorInfo.method}\r\n})\r\nconst defaultForm = {\r\n  id: null,\r\n  ieCode: null,\r\n  ieName: null,\r\n  categoryId: null,\r\n  ieProp: null,\r\n  ieType: '2',\r\n  ieDesc: null,\r\n  ieRule: null,\r\n  ieDefaultValue: null,\r\n  ieMethod: '1',\r\n  calcFreq: null,\r\n  status: null,\r\n  ieDataUnit: '1',\r\n  ieLevel: null,\r\n  startDate: null,\r\n  endDate: null,\r\n  retention: '1,Y',\r\n  processInstanceId: null,\r\n  manageDept: null,\r\n  crtUserCode: null,\r\n  crtOrgCode: null,\r\n  crtDate: null,\r\n  updUserCode: null,\r\n  updOrgCode: null,\r\n  updDate: null\r\n}\r\nexport default {\r\n  name: 'IndIndicatorInfo',\r\n  components: {\r\n    pagination,\r\n    crudOperation,\r\n    rrOperation,\r\n    udOperation,\r\n    category,\r\n    arithmetic,\r\n    sqlCheck,\r\n    limitRule,\r\n    lookDetails,\r\n    Treeselect\r\n  },\r\n  mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\r\n  dicts: ['IE_PROP', 'IE_SCOPE', 'IE_TYPE', 'IE_METHOD', 'CALC_FREQ', 'IE_STATUS', 'IE_DATA_UNIT', 'RETENTION'],\r\n  data() {\r\n    return {\r\n      manageDeptEdited: false,\r\n      table: {\r\n        columns: {\r\n          id: 'hidden',\r\n          crtOrgCode: 'hidden',\r\n          updOrgCode: 'hidden'\r\n        }\r\n      },\r\n      permission: {\r\n        add: ['admin', 'deriveIndIndicatorInfo:add'],\r\n        submit: ['admin', 'deriveIndIndicatorInfo:submit'],\r\n        develop: ['admin', 'deriveIndIndicatorInfo:develop'],\r\n        upLine: ['admin', 'deriveIndIndicatorInfo:upLine'],\r\n        startUsing: ['admin', 'deriveIndIndicatorInfo:startUsing'],\r\n        stopUsing: ['admin', 'deriveIndIndicatorInfo:stopUsing'],\r\n        processA: ['admin', 'deriveIndIndicatorInfo:processA'],\r\n        edit: ['admin', 'deriveIndIndicatorInfo:edit'],\r\n        del: ['admin', 'deriveIndIndicatorInfo:del'],\r\n        details: ['admin', 'deriveIndIndicatorInfo:details']\r\n      },\r\n      rules: {\r\n        ieName: [\r\n          {required: true, message: '指标名称不能为空', trigger: 'blur'}\r\n        ],\r\n        ieScope: [\r\n          {required: true, message: '指标级别不能为空', trigger: 'change'}\r\n        ],\r\n        ieProp: [\r\n          {required: true, message: '指标类别不能为空', trigger: 'change'}\r\n        ],\r\n        ieDataUnit: [\r\n          {required: true, message: '指标单位不能为空', trigger: 'change'}\r\n        ]\r\n        /* ieMethod: [\r\n          {required: true, message: '取值方式不能为空', trigger: 'change'}\r\n        ]*/\r\n      },\r\n      processDialog: false, // 计算输日期的页面\r\n      processParam: { // 传给后台的参数\r\n        codes: [],\r\n        periodDate: ''\r\n      },\r\n      dateValue: '', // 计算日期\r\n      depts: [], // 部门数组\r\n      viewDept: [], // 查看部门数组\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'user'\r\n    ])\r\n  },\r\n  mounted() {\r\n    this.getDepts()\r\n  },\r\n  methods: {\r\n    // 选择指标级别后关联管理部门\r\n    changeIeScope(data) {\r\n      if (data == 1) {\r\n        this.manageDeptEdited = true\r\n        /* getInfo().then(res => {\r\n           this.form.manageDept = res.deptId\r\n         })*/\r\n        this.form.manageDept = this.user.deptId\r\n        console.log('------------>>>>>---->>>', this.user.deptId)\r\n      } else {\r\n        this.form.manageDept = null\r\n        this.manageDeptEdited = false\r\n      }\r\n    },\r\n    // 获取数据前设置好接口地址\r\n    [CRUD.HOOK.beforeRefresh]() {\r\n      this.query.ieType = '2',\r\n          this.query.queryType = '1'\r\n      return true\r\n    },\r\n    [CRUD.HOOK.beforeToAdd]() {\r\n      if (!this.form.categoryId) {\r\n        this.crud.notify('请选择分类', CRUD.NOTIFICATION_TYPE.ERROR)\r\n        return false\r\n      }\r\n      if (this.form.categoryId === '0') {\r\n        this.crud.notify('根节点不能添加', CRUD.NOTIFICATION_TYPE.ERROR)\r\n        return false\r\n      }\r\n      // 获取部门信息\r\n      this.getDepts()\r\n    },\r\n    [CRUD.HOOK.beforeToEdit]() {\r\n      if (this.form.status != 0 && this.form.status != 2) {\r\n        this.crud.notify('只有未提交或退回的数据才能修改能修改', CRUD.NOTIFICATION_TYPE.ERROR)\r\n        this.crud.resetForm()\r\n        return false\r\n      }\r\n      // 获取部门信息\r\n      this.getDepts()\r\n    },\r\n    // 删除之前\r\n    [CRUD.HOOK.beforeDelete]() {\r\n      for (let items of this.crud.selections) {\r\n\r\n        if (items.status != 0) {\r\n          this.crud.notify('该状态的指标不允许删除', CRUD.NOTIFICATION_TYPE.ERROR)\r\n          return false\r\n        }\r\n      }\r\n      // 获取部门信息\r\n      this.getDepts()\r\n\r\n    },\r\n    handleCategoryClick(data) {\r\n      this.crud.form.categoryId = data.id\r\n      this.crud.query.categoryIds = data.childrenIds\r\n      this.form.categoryId = data.id\r\n      this.crud.refresh()\r\n    },\r\n    /* 点击开发按钮触发,根据不同的取值方式打开不同的开发页面 */\r\n    deriveDevelop(data) {\r\n      // 状态校验-只能选择0-未审批或3-已退回的数据\r\n      if (data.status != 2) {\r\n        this.crud.notify('请选择已审批的数据', CRUD.NOTIFICATION_TYPE.ERROR)\r\n        return false\r\n      }\r\n      // 取值方式=1打开四则运算页面.2-SQL公式，3-限制，4-EXCEL公式\r\n      if (data.ieMethod == 1) {\r\n        const _this = this.$refs.arithmetic\r\n        const indDeriveRule = {\r\n          'ieCode': data.ieCode\r\n        }\r\n        getIndDeriveRuleByIeCode(indDeriveRule).then(data => {\r\n          if (data.code === 0) {\r\n            const ruleDesc = data.data.ruleDesc\r\n            if (ruleDesc != null) {\r\n              _this.arithtext = ruleDesc\r\n            }\r\n          } else {\r\n            _this.arithtext = ''\r\n          }\r\n        })\r\n        _this.title = '算法定义-四则运算[' + data.ieCode + ']'\r\n        _this.ieCode = data.ieCode\r\n        _this.arithmeticDialog = true\r\n      } else if (data.ieMethod == 2) {\r\n        const _this = this.$refs.sqlCheck\r\n        const indDeriveRule = {\r\n          'ieCode': data.ieCode\r\n        }\r\n        getIndDeriveRuleByIeCode(indDeriveRule).then(deriveRuleData => {\r\n          if (deriveRuleData.code === 0) {\r\n            _this.sqlData.sqlText = deriveRuleData.data.calcRule\r\n          } else {\r\n            _this.sqlData.sqlText = null\r\n          }\r\n        })\r\n        _this.sqlData.ieCode = data.ieCode\r\n        _this.title = '算法定义-SQL校验[' + data.ieCode + ']'\r\n        _this.ieCode = data.ieCode\r\n        _this.sqlTemp = true\r\n        _this.sqlCheck = true\r\n      } else if (data.ieMethod == 3) {\r\n        const _this = this.$refs.limitRule\r\n        _this.title = '算法定义-限制条件[' + data.ieCode + ']'\r\n        _this.ieCode = data.ieCode\r\n        _this.limitCheck = true\r\n      }\r\n    },\r\n    // 子组件调用刷新方法\r\n    refQuery(data) {\r\n      this.crud.toQuery()\r\n    },\r\n    /* 点击提交审批触发事件 */\r\n    subApprove(data) {\r\n      let temp = 0\r\n      const param = []\r\n      const ieCodes = []\r\n      for (let i = 0; i < data.length; i++) {\r\n        // 状态校验-只能选择0-未审批\r\n        if (data[i].status != 0) {\r\n          temp = -1\r\n          break\r\n        }\r\n        const indIndicatorInfo = {\r\n          'id': data[i].id,\r\n          'status': '1',\r\n          'ieProp': data[i].ieProp\r\n        }\r\n        param.push(indIndicatorInfo)\r\n        ieCodes.push(data[i].ieCode)\r\n      }\r\n      if (temp == -1) {\r\n        this.crud.notify('请选择未审批或已退回的数据', CRUD.NOTIFICATION_TYPE.ERROR)\r\n        return false\r\n      }\r\n      this.$confirm(`确定要提交所选数据吗?`, '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        updateStatus(param).then(returnData => {\r\n          if (returnData.code === 0) {\r\n            this.crud.notify('操作成功', CRUD.NOTIFICATION_TYPE.SUCCESS)\r\n            this.crud.toQuery()\r\n          } else {\r\n            this.crud.notify('操作失败!错误原因:' + returnData.msg, CRUD.NOTIFICATION_TYPE.ERROR)\r\n            this.crud.toQuery()\r\n          }\r\n        })\r\n      })\r\n    },\r\n    /* 点击上线按钮触发事件 */\r\n    upLine(data) {\r\n      let temp = 0\r\n      const param = []\r\n      const ieCodes = []\r\n      for (let i = 0; i < data.length; i++) {\r\n        // 状态校验-只能选择0-已审批\r\n        if (data[i].status != 2) {\r\n          temp = -1\r\n          break\r\n        }\r\n        const indIndicatorInfo = {\r\n          'id': data[i].id,\r\n          'status': '4'\r\n        }\r\n        param.push(indIndicatorInfo)\r\n        ieCodes.push(data[i].ieCode)\r\n      }\r\n      if (temp == -1) {\r\n        this.crud.notify('请选择已审批的数据', CRUD.NOTIFICATION_TYPE.ERROR)\r\n        return false\r\n      }\r\n      // 开发校验通过后执行审批\r\n      getIndDeriveRule(ieCodes).then(returnData => {\r\n        if (returnData.code !== 0) {\r\n          this.crud.notify(returnData.msg + '指标未进行开发', CRUD.NOTIFICATION_TYPE.ERROR)\r\n        } else {\r\n          this.$confirm(`确定上线所选数据吗?`, '提示', {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning'\r\n          }).then(() => {\r\n            // 开发校验通过后,修改状态\r\n            updateStatus(param).then(returnData => {\r\n              if (returnData.code === 0) {\r\n                this.crud.notify('操作成功', CRUD.NOTIFICATION_TYPE.SUCCESS)\r\n                this.crud.toQuery()\r\n              } else {\r\n                this.crud.notify('操作失败!错误原因:' + returnData.msg, CRUD.NOTIFICATION_TYPE.ERROR)\r\n                this.crud.toQuery()\r\n              }\r\n            })\r\n          })\r\n        }\r\n      })\r\n    },\r\n    // 启用按钮\r\n    startUsing(data) {\r\n      let temp = 0\r\n      const param = []\r\n      for (let i = 0; i < data.length; i++) {\r\n        // 状态校验-只能选择4-已上线或6-停用的数据\r\n        if (data[i].status != 4 && data[i].status != 6) {\r\n          temp = -1\r\n          break\r\n        }\r\n        const indIndicatorInfo = {\r\n          'id': data[i].id,\r\n          'ieCode': data[i].ieCode,\r\n          'status': '5'\r\n        }\r\n        param.push(indIndicatorInfo)\r\n      }\r\n      if (temp == -1) {\r\n        this.crud.notify('请选择已上线或停用的数据', CRUD.NOTIFICATION_TYPE.ERROR)\r\n        return false\r\n      }\r\n\r\n      this.$confirm(`确定启用所选数据吗?`, '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        // 算法定义校验通过后,修改状态为启用(单独处理、修改衍生指标层级)\r\n        updateDeriveStarStatus(param).then(returnData => {\r\n          if (returnData.code === 0) {\r\n            this.crud.notify('操作成功', CRUD.NOTIFICATION_TYPE.SUCCESS)\r\n            this.crud.toQuery()\r\n          } else {\r\n            this.crud.notify('操作失败!错误原因:' + returnData.msg, CRUD.NOTIFICATION_TYPE.ERROR)\r\n            this.crud.toQuery()\r\n          }\r\n        })\r\n      })\r\n    },\r\n    // 停用按钮\r\n    stopUsing(data) {\r\n      let temp = 0\r\n      const param = []\r\n      for (let i = 0; i < data.length; i++) {\r\n        // 状态校验-只能选择4-启用数据\r\n        if (data[i].status != 5) {\r\n          temp = -1\r\n          break\r\n        }\r\n        const indIndicatorInfo = {\r\n          'id': data[i].id,\r\n          'status': '6'\r\n        }\r\n        param.push(indIndicatorInfo)\r\n      }\r\n      if (temp == -1) {\r\n        this.crud.notify('请选择启用的数据', CRUD.NOTIFICATION_TYPE.ERROR)\r\n        return false\r\n      }\r\n      this.$confirm(`确定停用所选数据吗?`, '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        updateStatus(param).then(returnData => {\r\n          if (returnData.code === 0) {\r\n            this.crud.notify('操作成功', CRUD.NOTIFICATION_TYPE.SUCCESS)\r\n            this.crud.toQuery()\r\n          } else {\r\n            this.crud.notify('操作失败!错误原因:' + returnData.msg, CRUD.NOTIFICATION_TYPE.ERROR)\r\n            this.crud.toQuery()\r\n          }\r\n        })\r\n      })\r\n    },\r\n    // 详情按钮\r\n    details(row) {\r\n      const _this = this.$refs.lookDetails\r\n      // 打开详情页面时通过ieCode去查询取值规则\r\n      const indDeriveRule = {\r\n        ieCode: row.ieCode\r\n      }\r\n      getIndDeriveRuleByIeCode(indDeriveRule).then(data => {\r\n        if (data.code === 0) {\r\n          _this.$set(_this.form, 'calcRule', data.data.ruleDesc)\r\n        }\r\n      })\r\n      getDepts({enabled: true}).then(res => {\r\n        _this.depts = res.content\r\n      })\r\n      _this.title = '详情'\r\n      _this.form = row\r\n      _this.detailsDialog = true\r\n    },\r\n    /** 点击计算按钮触发 */\r\n    processA(data) {\r\n      // 只能选择已审批的数据\r\n      let temp = 0\r\n      for (let i = 0; i < data.length; i++) {\r\n        // 状态校验-只能选择5-启用\r\n        if (data[i].status != 5) {\r\n          temp = -1\r\n          break\r\n        }\r\n      }\r\n      if (temp == -1) {\r\n        this.crud.notify('请选择已启用的数据', CRUD.NOTIFICATION_TYPE.ERROR)\r\n        return false\r\n      }\r\n\r\n      const codes = []\r\n      for (let i = 0; i < data.length; i++) {\r\n        codes.push(data[i].ieCode)\r\n      }\r\n      this.processParam.codes = codes\r\n      this.processDialog = true\r\n    },\r\n    processB() {\r\n      if (this.dateValue == '') {\r\n        this.crud.notify('日期不能为空', CRUD.NOTIFICATION_TYPE.ERROR)\r\n      } else {\r\n        const dateValue = this.dateFormat(this.dateValue, 'YYYYMMDD')\r\n        this.processParam.periodDate = dateValue\r\n        process(this.processParam, 'derive').then(data => {\r\n          if (data.code == 0) {\r\n            this.crud.notify(data.msg, CRUD.NOTIFICATION_TYPE.SUCCESS)\r\n          } else {\r\n            this.crud.notify(data.msg, CRUD.NOTIFICATION_TYPE.ERROR)\r\n          }\r\n          this.processDialog = false\r\n        })\r\n      }\r\n    },\r\n    // 获取弹窗内部门数据\r\n    getDepts() {\r\n      getDepts({enabled: true, pid: '1', deptCategory: '0'}).then(res => {\r\n        this.depts = res.content\r\n        this.viewDept = [{\r\n          id: 0,\r\n          label: '总行机关',\r\n          children: res.content,\r\n        }]\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}