{"remainingRequest":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DataAssetPlatform000\\Pncui-Ind\\src\\views\\indicators\\portalHome\\manager\\userManager.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\src\\views\\indicators\\portalHome\\manager\\userManager.vue","mtime":1655444650145},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1650418886580}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  name: \"userManager\",\r\n  components: {},\r\n  data() {\r\n    return {\r\n      currentUserId: \"\", // 当前选择用户\r\n      dataWorksVisible: false,\r\n      currentSelectDataWorks: [],\r\n      dataWorksInfo: {\r\n        page: 1,\r\n        size: 10,\r\n        total: 0,\r\n      },\r\n      dataWorksTable: [],\r\n      // 筛选项\r\n      name: \"\",\r\n      date: \"\",\r\n      dateValue: \"\",\r\n      enabled: \"\",\r\n      userType: \"\",\r\n      // 树状图\r\n      filterText: \"\",\r\n      treeData: [],\r\n      nodeId: \"\",\r\n      // 表格\r\n      tableData: [],\r\n      propList: [],\r\n      defaultProps: {\r\n        id: \"id\",\r\n        children: \"children\",\r\n        label: \"name\",\r\n      },\r\n      // 分页\r\n      pageSize: 10,\r\n      total: 10,\r\n      currentPage: 1,\r\n      // 详情弹窗\r\n      detailsVisible: false,\r\n      ruleForm: {\r\n        num: \"123\",\r\n        name: \"123\",\r\n        org: \"123\",\r\n        role: \"1\",\r\n        job: \"123\",\r\n        phone: \"123456789\",\r\n        tellerNo: \"12131231223\",\r\n        gender: \"男\",\r\n        status: \"启用\",\r\n      },\r\n      rules: {\r\n        num: [{ required: true, message: \"请输入编号\", trigger: \"blur\" }],\r\n        name: [{ required: true, message: \"请输入名称\", trigger: \"blur\" }],\r\n      },\r\n    };\r\n  },\r\n  watch: {\r\n    // 节点过滤\r\n    filterText(val) {\r\n      this.$refs.tree.filter(val);\r\n    },\r\n    //\r\n    date(val) {\r\n      if (val) {\r\n        let startTime = this.$formatDate(val[0]);\r\n        let endTime = this.$formatDate(val[1]);\r\n        this.dateValue = [startTime, endTime];\r\n        console.log(this.dateValue);\r\n      } else {\r\n        this.dateValue = [];\r\n      }\r\n    },\r\n  },\r\n  mounted() {},\r\n  computed: {},\r\n  created() {\r\n    this.propList = [\r\n      {\r\n        prop: \"username\",\r\n        label: \"用户名\",\r\n        width: 70,\r\n      },\r\n      {\r\n        prop: \"userNo\",\r\n        label: \"用户编号\",\r\n        align: \"center\",\r\n      },\r\n      {\r\n        prop: \"nickName\",\r\n        label: \"姓名\",\r\n      },\r\n      {\r\n        prop: \"sex\",\r\n        width: 50,\r\n        label: \"性别\",\r\n      },\r\n      {\r\n        prop: \"phone\",\r\n        label: \"电话\",\r\n      },\r\n      {\r\n        prop: \"email\",\r\n        label: \"邮箱\",\r\n      },\r\n      {\r\n        prop: \"deptName\",\r\n        label: \"机构\",\r\n      },\r\n      {\r\n        prop: \"roleName\",\r\n        label: \"角色\",\r\n      },\r\n      // {\r\n      //   prop: \"jobName\",\r\n      //   label: \"岗位\",\r\n      // },\r\n      {\r\n        width: 120,\r\n        prop: \"dataworksAccount\",\r\n        label: \"Dataworks账号\",\r\n      },\r\n    ];\r\n    this.$api.getSysDeptList({}).then((res) => {\r\n      this.treeData = res.content;\r\n    });\r\n    this.queryList();\r\n  },\r\n  methods: {\r\n    transTime(datetime) {\r\n      let date = new Date(datetime); //时间戳为10位需*1000，时间戳为13位的话不需乘1000\r\n      let Y = date.getFullYear();\r\n      let M =\r\n        date.getMonth() + 1 < 10\r\n          ? \"0\" + (date.getMonth() + 1)\r\n          : date.getMonth() + 1;\r\n      let d = date.getDate();\r\n      d = d < 10 ? \"0\" + d : d;\r\n      return Y + \"-\" + M + \"-\" + d;\r\n    },\r\n    // 提交修改\r\n    submitUpdateDateWorks() {\r\n      if (\r\n          this.currentSelectDataWorks.length==0||\r\n          (!this.currentSelectDataWorks[0] &&\r\n              !this.currentSelectDataWorks[0].dataworksAccount)\r\n      ) {\r\n        this.$message.error(\"请先选择Dataworks账号\");\r\n        return;\r\n      }\r\n      let request = {\r\n        dataworksAccount: this.currentSelectDataWorks[0].dataworksAccount || \"\",\r\n        id: this.currentUserId,\r\n      };\r\n      this.$api.updateDataworks(request).then((res) => {\r\n        if (res.code == 0) {\r\n          this.$message.success(\"修改成功\");\r\n          this.dataWorksVisible = false;\r\n          this.queryList();\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      });\r\n    },\r\n    handleDataWorksChange(val) {\r\n      if (val.length > 1) {\r\n        this.$refs.dataWorksTable.clearSelection(); //清除\r\n        this.$refs.dataWorksTable.toggleRowSelection(val.pop()); //pop：最后一个\r\n      } else {\r\n        this.currentSelectDataWorks = val; //multipleSelection：当前选择的数组\r\n      }\r\n    },\r\n    handleCloseDataWork() {\r\n      this.currentSelectDataWorks = [];\r\n      this.dataWorksInfo = {\r\n        page: 1,\r\n        size: 10,\r\n        total: 0,\r\n      };\r\n      this.dataWorksVisible = false;\r\n    },\r\n    handleDataWorksTable(num) {\r\n      this.$set(this.dataWorksInfo, \"page\", num);\r\n      this.getDataWorksTable();\r\n    },\r\n    getDataWorksTable() {\r\n      const { currentUserDataWorks, ...request } = this.dataWorksInfo;\r\n      this.$api.getDataWorksList(request).then((res) => {\r\n        this.dataWorksTable = res.data.records;\r\n        this.$set(this.dataWorksInfo, \"total\", res.data.total);\r\n        selectDefaultDataWorks.call(this);\r\n      });\r\n      function selectDefaultDataWorks() {\r\n        console.log(currentUserDataWorks);\r\n        this.dataWorksTable.forEach((row) => {\r\n          if (row.dataworksAccount === currentUserDataWorks) {\r\n            this.$nextTick(() => {\r\n              this.$refs.dataWorksTable.toggleRowSelection(row, true);\r\n            });\r\n          }\r\n        });\r\n      }\r\n    },\r\n    // 重置\r\n    reset() {\r\n      this.name = \"\";\r\n      this.date = \"\";\r\n      this.enabled = \"\";\r\n      this.userType = \"\";\r\n    },\r\n    // 树状图过滤\r\n    filterNode(value, data) {\r\n      if (!value) return true;\r\n      return data.name.indexOf(value.toString()) !== -1;\r\n    },\r\n    // 树状图节点点击\r\n    handleNodeClick(node, data) {\r\n      this.currentPage = 1;\r\n      this.nodeId = node.id;\r\n      this.queryList();\r\n    },\r\n    // 搜索按钮\r\n    searchList() {\r\n      this.currentPage = 1;\r\n      this.nodeId = \"\";\r\n      this.queryList();\r\n    },\r\n    // 维护账号\r\n    defendAccount(row) {\r\n      this.$set(\r\n        this.dataWorksInfo,\r\n        \"currentUserDataWorks\",\r\n        row.dataworksAccount\r\n      );\r\n      this.currentUserId = row.id;\r\n      this.dataWorksVisible = true;\r\n      this.getDataWorksTable();\r\n    },\r\n    // 列表查询\r\n    queryList() {\r\n      let request = {\r\n        deptId: this.nodeId,\r\n        keyWord: this.name,\r\n        crtDate: this.dateValue,\r\n        enabled: this.enabled,\r\n        userType: this.userType,\r\n        size: this.pageSize,\r\n        page: this.currentPage,\r\n      };\r\n      this.$api.qryUserListPage(request).then((res) => {\r\n        this.tableData = res.data.records;\r\n        this.total = res.data.total;\r\n      });\r\n    },\r\n    // 复选框\r\n    handleSelectionChange(val) {},\r\n    // 懒加载\r\n    load(tree, treeNode, resolve) {\r\n      setTimeout(() => {\r\n        resolve([\r\n          {\r\n            id: 31,\r\n            name: \"菜单1\",\r\n            sort: 10,\r\n            router: \"/xxx\",\r\n            auth: \"xxxx\",\r\n            component: \"组件1\",\r\n            links: \"www.baidu.com\",\r\n            cache: \"否\",\r\n            visibility: \"fou\",\r\n            date: \"2016-05-02\",\r\n          },\r\n          {\r\n            id: 32,\r\n            name: \"菜单1\",\r\n            sort: 10,\r\n            router: \"/xxx\",\r\n            auth: \"xxxx\",\r\n            component: \"组件1\",\r\n            links: \"www.baidu.com\",\r\n            cache: \"否\",\r\n            visibility: \"fou\",\r\n            date: \"2016-05-02\",\r\n          },\r\n        ]);\r\n      }, 1000);\r\n    },\r\n    // 详情\r\n    viewDetails(row) {\r\n      this.detailsVisible = true;\r\n    },\r\n    //  分页\r\n    handleCurrentChange(val) {\r\n      this.currentPage = val;\r\n      this.queryList();\r\n    },\r\n  },\r\n};\r\n",null]}