{"remainingRequest":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\src\\views\\indicators\\indicator\\atom\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\src\\views\\indicators\\indicator\\atom\\index.vue","mtime":1608778933000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport crudIndAtomInfo, { getDimensions, getTablesById, getColumnByTabel } from '../../../../api/indicators/indAtomInfo'\nimport { getDimInfo, getAllSource, process } from '../../../../api/indicators/indIndicatorInfo'\nimport CRUD, { presenter, header, form, crud } from '@crud/crud'\nimport rrOperation from '@crud/RR.operation'\nimport crudOperation from '@crud/CRUD.operation'\nimport udOperation from '@crud/UD.operation'\nimport pagination from '@crud/Pagination'\nimport category from '../../category/category'\nimport dimensionPage from '../atom/dimension/index'\nimport atomPage from './atomPage'\n// crud交由presenter持有\nconst defaultCrud = CRUD({\n  title: '原子指标信息',\n  url: crudIndAtomInfo.url,\n  sort: 'id,desc',\n  crudMethod: { ...crudIndAtomInfo.crud }\n})\nconst defaultForm = {\n  id: null,\n  ieType: '4',\n  categoryId: null,\n  sourceDataSource: 'local',\n  targetDataSource: 'local',\n  bizCode: null,\n  bizName: null,\n  ieProp: null,\n  createTable: null,\n  keepHistory: '1',\n  bizTabCode: null,\n  bizFlag: null,\n  bizCalcSql: null,\n  dimNames: null,\n  bizDesc: null,\n  calcSeq: null,\n  calcFreq: null,\n  crtUserCode: null,\n  crtOrgCode: null,\n  crtDate: null,\n  updUserCode: null,\n  updOrgCode: null,\n  updDate: null,\n  tenant: null,\n  retention: null,\n  tableShare: '1',\n  status: '2',\n  atomDimensions: []\n}\nexport default {\n  name: 'IndAtomInfo',\n  components: { pagination, crudOperation, rrOperation, udOperation, category, dimensionPage, atomPage },\n  mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\n  dicts: ['IE_PROP', 'CREATE_TABLE', 'YN', 'RETENTION', 'IE_STATUS'],\n  data() {\n    return {\n      table: {\n        columns: {\n          sourceDataSource: 'hidden',\n          targetDataSource: 'hidden',\n          keepHistory: 'hidden',\n          bizDesc: 'hidden',\n          crtUserCode: 'hidden',\n          crtOrgCode: 'hidden',\n          crtDate: 'hidden',\n          updUserCode: 'hidden',\n          updOrgCode: 'hidden',\n          updDate: 'hidden',\n          tenant: 'hidden'\n        }\n        },\n      permission: {\n        processA: ['indAtomInfo:processA'],\n        add: ['indAtomInfo:add'],\n        edit: ['indAtomInfo:edit'],\n        del: ['indAtomInfo:del'],\n        details: ['indAtomInfo:details']\n      },\n      rules: {\n        bizCalcSql: [\n          { required: true, message: '取数sql不能为空', trigger: 'blur' }\n        ],\n        bizName: [\n          { required: true, message: '原子指标名称不能为空', trigger: 'blur' }\n        ],\n        bizTabCode: [\n          { required: true, message: '存储表名不能为空', trigger: 'change' }\n        ]\n      },\n      sourceData: [],\n      tableInfo: [],\n      atomDimensions: [],\n      bizTabCodeDis: false,\n      // 计算输日期的页面\n      processDialog: false,\n      // 传给后台的参数\n      processParam: {\n        codes: [],\n        periodDate: ''\n      },\n      dateValue: ''\n    }\n  },\n  methods: {\n    // 获取数据前设置好接口地址\n    [CRUD.HOOK.beforeRefresh]() {\n      this.query.ieType = '4'\n      return true\n    },\n    [CRUD.HOOK.afterRefresh]() {\n      getAllSource().then(data => {\n        this.sourceData = [{ id: 'local', datasourceName: '默认数据源' }].concat(data.data)\n      })\n    },\n    [CRUD.HOOK.beforeToEdit]() {\n      getAllSource().then(data => {\n        this.sourceData = [{ id: 'local', datasourceName: '默认数据源' }].concat(data.data)\n      })\n      getTablesById(this.form.targetDataSource).then(data => {\n        this.tableInfo = data.data\n      })\n    },\n    [CRUD.HOOK.beforeSubmit]() {\n\n      if (this.form.atomDimensions == null ) {\n        this.crud.notify('请进行维度管理', CRUD.NOTIFICATION_TYPE.ERROR)\n        return false\n      }\n    },\n    [CRUD.HOOK.beforeToAdd]() {\n      if (!this.form.categoryId) {\n        this.crud.notify('请选择分类', CRUD.NOTIFICATION_TYPE.ERROR)\n        return false\n      }\n      if (this.form.categoryId === '0') {\n        this.crud.notify('根节点不能添加', CRUD.NOTIFICATION_TYPE.ERROR)\n        return false\n      }\n      // 获取数据源\n      getAllSource().then(data => {\n        this.sourceData = [{ id: 'local', datasourceName: '默认数据源' }].concat(data.data)\n      })\n      getTablesById('local').then(data => {\n        this.tableInfo = data.data\n      })\n    },\n    // 验证sql\n    /* bizCalcSqlvaliHandle() {\n      const param = {\n        bizCalcSql: this.form.bizCalcSql\n      }\n      bizCalcSqlvali(param).then(data => {\n        if (data.code.toString() == '10004') {\n          alert(data.msg)\n          return false\n        } else {\n          alert(data.msg)\n        }\n      })\n    },*/\n\n    // 打开详情\n    toSelectOne(data) {\n      const _thisAtom = this.$refs.atomPage\n      _thisAtom.form = data\n      _thisAtom.title = '原子指标[' + data.bizCode + ']'\n      const param = {\n        bizCode: data.bizCode,\n        keepHistory: data.keepHistory\n      }\n      getDimensions(param).then(data => {\n        _thisAtom.atomDimensions = data.data\n      })\n      getDimInfo().then(data => {\n        _thisAtom.dimensions = data.data\n      })\n      // 获取数据源\n      getAllSource().then(data => {\n        _thisAtom.sourceData = [{ id: 'local', datasourceName: '默认数据源' }].concat(data.data)\n      })\n     /* _this.bizCode = data.bizCode*/\n      _thisAtom.atomPageDialog = true\n  },\n    bizTabCodeChange() {\n      if (this.form.bizTabCode === null) {\n        this.bizTabCodeDis = true\n      } else {\n        this.bizTabCodeDis = false\n      }\n    },\n    atomDimensionHandle() {\n\n      if (this.form.bizCalcSql !== null) {\n\n      const _this = this.$refs.dimensionPage\n        _this.keepHistory = this.form.keepHistory\n        if (this.form.bizTabCode === null) {\n         this.bizTabCodeDis = true\n        }\n      /* const paramSql = {\n        bizCalcSql: this.form.bizCalcSql\n      }\n      bizCalcSqlVali(paramSql).then(data => {\n        if (data.code === 0) {\n\n        } else {\n          this.$message(data.msg)\n        }\n      })*/\n      const param = {\n        bizCalcSql: this.form.bizCalcSql,\n        bizCode: this.form.bizCode,\n        keepHistory: this.form.keepHistory,\n        bizTabCode: this.form.bizTabCode,\n        targetDataSource: this.form.targetDataSource\n      }\n      getDimensions(param).then(data => {\n        if (data.code === 0) {\n          _this.atomDimensions = data.data\n          _this.dimensionDialog = true\n        } else {\n          this.$message(data.msg)\n        }\n      })\n      getDimInfo().then(data => {\n        _this.dimensions = data.data\n      })\n      /* const colParam = {\n        'id': this.form.targetDataSource,\n        'tablename': this.form.bizTabCode\n        /!* 'data_type': this.form.filterColumn*!/\n      }*/\n      if (this.form.bizTabCode !== null) {\n        getColumnByTabel(this.form.targetDataSource, this.form.bizTabCode).then(data => {\n          _this.colCodes = data.data\n        })\n        /* getColumns(colParam).then(data => {\n          if (data.code === 0) {\n            _this.colCodes = data.data\n            console.log(data.data)\n          } else {\n            _this.colCodes = []\n            alert('数据源连接错误')\n          }\n        })*/\n      }else {\n        this.bizTabCodeDis = true\n      }\n      }\n    },\n    // 接收维度信息\n    getAtomDimensions(data) {\n      this.form.atomDimensions = data\n    },\n    handleCategoryClick(data) {\n      this.crud.form.categoryId = data.id\n      this.crud.query.categoryIds = data.childrenIds\n      this.form.categoryId = data.id\n      this.crud.refresh()\n    },\n    // 数据源发生变化时查询对应的数据源下的表\n    dataSourceChangeHandle(val) {\n      this.form.bizTabCode = null\n      /* const param = {\n        id: val\n      }\n      getTables(param).then(data => {\n        this.tableInfo = data.data\n      })*/\n      // 通过数据源id查询表\n      getTablesById(val).then(data => {\n        this.tableInfo = data.data\n      })\n    },\n    toSourceDataName(row) {\n      let name = ''\n      this.sourceData.forEach(row1 => {\n        if (row1.id === row.sourceDataSource) {\n          name = row1.datasourceName\n        }\n      })\n      return name\n    },\n    toTargetDataName(row) {\n      let name = ''\n      this.sourceData.forEach(row1 => {\n        if (row1.id === row.targetDataSource) {\n          name = row1.datasourceName\n        }\n      })\n      return name\n    },\n    /** 点击计算按钮触发 */\n    processA(data) {\n      const bizCodes = []\n      for (let i = 0; i < data.length; i++) {\n        bizCodes.push(data[i].bizCode)\n      }\n      this.processParam.codes = bizCodes\n      this.processDialog = true\n    },\n    processB() {\n      if (this.dateValue === '') {\n        this.crud.notify('日期不能为空', CRUD.NOTIFICATION_TYPE.ERROR)\n      } else {\n        const dateValue = this.dateFormat(this.dateValue, 'YYYYMMDD')\n        this.processParam.periodDate = dateValue\n        process(this.processParam, 'atom').then(data => {\n          if (data.code === 0) {\n            this.crud.notify(data.msg, CRUD.NOTIFICATION_TYPE.SUCCESS)\n          } else {\n            this.crud.notify(data.msg, CRUD.NOTIFICATION_TYPE.ERROR)\n          }\n          this.processDialog = false\n        })\n      }\n    }\n  }\n}\n",null]}