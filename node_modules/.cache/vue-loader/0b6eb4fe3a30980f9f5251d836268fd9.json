{"remainingRequest":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\src\\views\\indicators\\auth\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\src\\views\\indicators\\auth\\index.vue","mtime":1650772058533},{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650772030926},{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1650772030306},{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650772030926},{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1650772056629}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport request from '@/utils/request'\nimport qs from 'qs'\n\nexport default {\n  name: 'Auth',\n  dicts: ['DATA_AUTH_TYPE'],\n  data() {\n    return {\n      authActiveName: 'role',\n      menuActiveName: 'admin',\n\n      currentType: 'role',\n      currentId: '',\n      currentRoleLevel: null,\n      menuTreeDefaultProps: {\n        children: 'children',\n        label: 'name'\n      },\n      deptTab: {\n        query: {\n          name: '',\n          id: ''\n        },\n        data: [],\n        loading: false\n      },\n      roleTab: {\n        query: {\n          blurry: ''\n        },\n        data: [],\n        loading: true,\n        total: 0, page: 0, size: 10\n      },\n      userTab: {\n        query: {\n          blurry: ''\n        },\n        data: [],\n        loading: true,\n        total: 0, page: 0, size: 10\n      },\n      adminTab: {\n        menuLoading: false,\n        data: [],\n        loading: false,\n        operators: [],\n        strictly: true\n      },\n      indexTab: {\n        menuLoading: false,\n        data: [],\n        loading: false,\n        operators: [],\n        strictly: true\n      },\n      indexOrgTab: {\n        menuLoading: false,\n        data: [],\n        loading: false,\n        operators: [],\n        strictly: true\n      }\n    }\n  },\n  mounted() {\n    this.toQueryRole()\n    // this.getAdminmenus()\n  },\n  methods: {\n    authHandleClick(tab, event) {\n      if (tab.name === 'dept') {\n        this.currentType = 'dept'\n        this.$refs.adminMenuTree.setCheckedKeys([])\n        this.toQueryDept()\n      } else if (tab.name === 'role') {\n        this.currentType = 'role'\n        this.$refs.adminMenuTree.setCheckedKeys([])\n        this.toQueryRole()\n      } else if (tab.name === 'user') {\n        this.currentType = 'user'\n        this.$refs.adminMenuTree.setCheckedKeys([])\n        this.toQueryUser()\n      }\n    },\n\n    menuHandleClick(tab, event) {\n      // this.getAdminmenus()\n    },\n\n    // 机构权限配置\n    toQueryDept() {\n      var _this = this\n      _this.deptTab.loading = true\n      // _this.deptTab.data = [];\n      request({\n        url: '/api/dept' + '?' + qs.stringify(_this.deptTab.query, { indices: false }),\n        method: 'get'\n      }).then(res => {\n        _this.deptTab.data = res.content\n        _this.deptTab.loading = false\n        //  console.log(_this.deptTab.data)\n      })\n    },\n    onSelectDept(currentRow, oldCurrentRow) {\n      // console.log(currentRow,oldCurrentRow)\n      if (currentRow) {\n        this.adminTab.strictly = true\n        this.currentId = currentRow.id\n        this.$refs.adminMenuTree.setCheckedKeys([])\n        request({\n          url: '/auths/menus' + '?' + qs.stringify({ type: 'dept', id: currentRow.id }, { indices: false }),\n          method: 'get'\n        }).then(res => {\n          this.adminTab.data = res\n          this.adminTab.loading = false\n          this.adminTab.strictly = false\n        })\n      }\n    },\n\n  // 角色权限配置\n  toQueryRole() {\n    var _this = this\n    _this.roleTab.loading = true\n    const sort = 'level,asc'\n    this.params = {page: this.roleTab.page, size: this.roleTab.size, sort: sort}\n    this.params['blurry'] = _this.roleTab.query.blurry\n    request({\n      url: '/api/roles' + '?' + qs.stringify(_this.params, {indices: false}),\n      method: 'get'\n    }).then(res => {\n      // console.log(res.content)\n      _this.roleTab.data = res.content\n      _this.roleTab.total = res.totalElements\n      _this.roleTab.loading = false\n    })\n  },\n  onSelectRole(currentRow, oldCurrentRow) {\n    if (currentRow) {\n      this.currentId = currentRow.id\n      this.adminTab.strictly = true\n      this.indexOrgTab.strictly = true\n      // this.adminTab.loading = true\n      this.currentRoleLevel = currentRow.level\n      this.$refs.adminMenuTree.setCheckedKeys([])\n      request({\n        url: '/auths/menus/role/' + currentRow.id,\n        method: 'get'\n      }).then(res => {\n        console.log('======get role auths::', res)\n        this.adminTab.data = res.auths\n        this.adminTab.operators = res.operators\n        this.adminTab.strictly = false\n        // this.adminTab.loading = false\n      })\n      request({\n        url: '/auths/roleIndexs/' + currentRow.id,\n        method: 'get'\n      }).then(res => {\n        console.log('======get role auths::', res)\n        this.indexTab.data = res.ind.auths\n        this.indexTab.operators = res.ind.authorizes\n        this.indexTab.strictly = false\n\n        this.indexOrgTab.data = res.org.auths\n        this.indexOrgTab.operators = res.org.authorizes\n        this.indexOrgTab.strictly = false\n\n        // this.adminTab.loading = false\n      })\n    }\n  },\n  rolePageChange(e) {\n    this.roleTab.page = e - 1\n    this.toQueryRole()\n  },\n  roleSizeChange(e) {\n    this.roleTab.page = 0\n    this.roleTab.size = e\n    this.toQueryRole()\n  },\n\n  // 用户权限配置\n  toQueryUser() {\n    var _this = this\n    _this.userTab.loading = true\n    const sort = 'id,desc'\n    this.params = {page: this.userTab.page, size: this.userTab.size, sort: sort}\n    this.params['blurry'] = _this.userTab.query.blurry\n    request({\n      url: '/api/users' + '?' + qs.stringify(_this.params, {indices: false}),\n      method: 'get'\n    }).then(res => {\n      // console.log(res.content)\n      _this.userTab.data = res.content\n      _this.userTab.total = res.totalElements\n      _this.userTab.loading = false\n    })\n  },\n  onSelectUser(currentRow, oldCurrentRow) {\n    // console.log(currentRow,oldCurrentRow)\n    if (currentRow) {\n      this.adminTab.strictly = true\n      this.currentId = currentRow.id\n      this.$refs.adminMenuTree.setCheckedKeys([])\n      request({\n        url: '/auth/menus' + '?' + qs.stringify({type: 'user', id: currentRow.id}, {indices: false}),\n        method: 'get'\n      }).then(res => {\n        this.adminTab.data = res.auths\n        this.adminTab.this.adminTab.strictly = false\n      })\n    }\n  },\n  userPageChange(e) {\n    this.userTab.page = e - 1\n    this.toQueryUser()\n  },\n  userSizeChange(e) {\n    this.userTab.page = 0\n    this.userTab.size = e\n    this.toQueryUser()\n  },\n\n  // 加载admin菜单\n  /* getAdminmenus() {\n    var _this = this\n    request({\n      url: '/api/menus/tree',\n      method: 'get'\n    }).then(res => {\n      _this.adminTab.data = res\n      _this.adminTab.loading = false\n    })\n  },*/\n  doSaveAdminMenus() {\n    this.adminTab.menuLoading = true\n    // var _this = this\n    const menus = []\n    /* this.$refs.adminMenuTree.getHalfCheckedNodes().forEach(function(data, index) {\n      menus.push({id:data.id,auth:data.dataAuthType})\n    })*/\n    // 得到已选中的 key 值\n    console.log('=====getCheckedKeys========', menus, this.$refs.adminMenuTree.getCheckedNodes(false, true))\n    this.$refs.adminMenuTree.getCheckedNodes(false, true).forEach(function (data, index) {\n      menus.push({resourceId: data.id, authorizeType: '03', dataAuthType: data.dataAuthType})\n    })\n    request({\n      url: '/auths/menus/' + this.currentType + '/' + this.currentId,\n      method: 'post',\n      data: menus\n    }).then(res => {\n      this.adminTab.menuLoading = false\n      this.$notify({\n        title: '保存成功',\n        type: 'success',\n        duration: 2500\n      })\n    })\n  },\n  doSaveAdminIndexs() {\n    this.indexTab.menuLoading = true\n    // var _this = this\n    const indexs = []\n    // 得到已选中的 key 值\n    console.log('=====getCheckedKeys========', indexs, this.$refs.adminIndexTree.getCheckedNodes(false, true))\n    this.$refs.adminIndexTree.getCheckedNodes(false, true).forEach(function (data, index) {\n      indexs.push({objCode: data.id, objType: '1'})\n    })\n\n    this.$refs.adminIndexOrgTree.getCheckedNodes(false, true).forEach(function (data, index) {\n      indexs.push({objCode: data.id, objType: '2'})\n    })\n\n      request({\n        url: '/auths/roleIndexs/' + this.currentId,\n        method: 'post',\n        data: indexs\n      }).then(res => {\n        this.indexTab.menuLoading = false\n        this.$notify({\n          title: '保存成功',\n          type: 'success',\n          duration: 2500\n        })\n      })\n    },\n    choiceChildrenNode(data, selected){\n      var isChecked = selected.checkedKeys.includes(data.id);\n      if (isChecked) {\n        if (data.children) {\n            var allChildrens = this.getAllChildren(data);\n            allChildrens.forEach(item => {\n              this.$refs.adminIndexOrgTree.setChecked(item.id,true);\n            })\n        }\n      } else {\n        if (data.children) {\n          var allChildrens = this.getAllChildren(data);\n          allChildrens.forEach(item => {\n            this.$refs.adminIndexOrgTree.setChecked(item.id,false);\n          })\n        }\n      }\n    },\n\n    choiceIndChildrenNode(data, selected){\n      var isChecked = selected.checkedKeys.includes(data.id);\n      if (isChecked) {\n        if (data.children) {\n          var allChildrens = this.getAllChildren(data);\n          allChildrens.forEach(item => {\n            this.$refs.adminIndexTree.setChecked(item.id,true);\n          })\n        }\n      } else {\n        if (data.children) {\n          var allChildrens = this.getAllChildren(data);\n          allChildrens.forEach(item => {\n            this.$refs.adminIndexTree.setChecked(item.id,false);\n          })\n        }\n      }\n    },\n    getAllChildren(node){\n      var res = [];\n      var nodes = node.children;\n      if (nodes != null) {\n        for (var i = 0; i < nodes.length; i++) {\n            var childNode = nodes[i];\n            res.push(childNode);\n            var temp = this.getAllChildren(childNode);\n            res = res.concat(temp);\n        }\n      }\n      return res;\n    }\n  }\n}\n",null]}