{"remainingRequest":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\eladmin-common\\src\\views\\tools\\email\\config.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\eladmin-common\\src\\views\\tools\\email\\config.vue","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { get, update } from '../../../api/tools/email'\nexport default {\n  name: 'Config',\n  data() {\n    return {\n      loading: false, form: { id: 1, fromUser: '', user: '', pass: '', host: '', port: '', sslEnable: '' },\n      rules: {\n        fromUser: [\n          { required: true, message: '请输入发件人邮箱', trigger: 'blur' },\n          { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' }\n        ],\n        user: [\n          { required: true, message: '请输入发件用户名', trigger: 'blur' }\n        ],\n        pass: [\n          { required: true, message: '密码不能为空', trigger: 'blur' }\n        ],\n        host: [\n          { required: true, message: 'SMTP地址不能为空', trigger: 'blur' }\n        ],\n        port: [\n          { required: true, message: 'SMTP端口不能为空', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created() {\n    this.init()\n  },\n  methods: {\n    init() {\n      get().then(res => {\n        this.form = res\n      })\n    },\n    doSubmit() {\n      this.$refs['form'].validate((valid) => {\n        if (valid) {\n          this.loading = true\n          update(this.form).then(res => {\n            this.$notify({\n              title: '修改成功',\n              type: 'success',\n              duration: 2500\n            })\n            this.loading = false\n          }).catch(err => {\n            this.loading = false\n            console.log(err.response.data.message)\n          })\n        } else {\n          return false\n        }\n      })\n    }\n  }\n}\n",null]}