{"remainingRequest":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\eladmin-system\\src\\views\\system\\role\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\eladmin-system\\src\\views\\system\\role\\index.vue","mtime":1643185899442},{"path":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport crudRoles from '../../../api/system/role'\nimport { getDepts } from '../../../api/system/dept'\nimport CRUD, { presenter, header, form, crud } from '@crud/crud'\nimport rrOperation from '@crud/RR.operation'\nimport crudOperation from '@crud/CRUD.operation'\nimport udOperation from '@crud/UD.operation'\nimport pagination from '@crud/Pagination'\nimport Treeselect from '@riophae/vue-treeselect'\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css'\nimport aForm from './form1'\nimport { getTenants,isSuperAdmin } from '@/api/indUserApply/indTenant'\n// crud交由presenter持有\nconst defaultCrud = CRUD({ title: '角色', url: 'api/roles', sort: 'id,asc', crudMethod: { ...crudRoles }})\nconst defaultForm = {\n  id: null,\n  name: null,\n  depts: [],\n  remark: null,\n  dataScope: 'o',\n  roleLevel: 1,\n  permission: 'default',\n  tenant: null//租户 法人\n}\nexport default {\n  name: 'Role',\n  components: { Treeselect, pagination, crudOperation, rrOperation, udOperation, aForm },\n  mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\n  dicts: ['DATA_AUTH_TYPE'],\n  data() {\n    return {\n      defaultProps: { children: 'children', label: 'label' },\n      dateScopes: ['全部', '本级', '自定义'], level: 3,\n      currentId: 0, menuLoading: false, showButton: false,\n      menus: [], menuIds: [], depts: [],\n      isSuper: false,\n      tenantArr: [],\n      permission: {\n        add: ['admin', 'roles:add'],\n        edit: ['admin', 'roles:edit'],\n        del: ['admin', 'roles:del']\n      },\n      rules: {\n        id: [\n          { required: true, message: '请输入角色编号', trigger: 'blur' }],\n        name: [\n          { required: true, message: '请输入名称', trigger: 'blur' }],\n        level: [\n          { required: true, message: '请输入级别', trigger: 'blur' }\n        ],\n        tenant:[\n          { required: true, message: '所属租户不能为空', trigger: 'blur' }\n        ]\n        // ,permission: [\n        //   { required: true, message: '请输入权限', trigger: 'blur' }\n        // ]\n      }\n    }\n  },\n  created() {\n    // this.getMenus()\n    crudRoles.getLevel().then(data => {\n      this.level = data.level\n      // console.log(this.level)\n    })\n    this.$nextTick(() => {\n      this.crud.toQuery()\n    })\n    this.isSuperAdmin();\n    this.getTenants();\n    this.resetQuery()\n  },\n  methods: {\n    resetQuery(){\n      this.crud.resetQuery(false);\n      this.crud.refresh()\n    },\n    toSelectUsers(data) {\n      const _this = this.$refs.form1\n      _this.title = '当前角色[' + data.name + ']'\n      _this.roleId = data.id\n      _this.roleLevel = data.level\n      _this.getDeptDatas()\n      // _this.toQueryUser()\n      _this.getUserByRoleId()\n      _this.table.data = []\n      _this.dialog = true\n    },\n    // [CRUD.HOOK.afterRefresh]() {\n    //   this.$refs.menu.setCheckedKeys([])\n    // },\n    // 编辑前\n    [CRUD.HOOK.beforeToEdit](crud, form) {\n      if (form.dataScope === '自定义') {\n        this.getDepts()\n      }\n      const depts = []\n      if (form.depts !== null && form.depts !== '') {\n        form.depts.forEach(function(dept, index) {\n          depts.push(dept.id)\n        })\n      }\n      form.depts = depts\n    },\n    // 提交前做的操作\n    [CRUD.HOOK.afterValidateCU](crud) {\n      if (crud.form.dataScope === '自定义' && crud.form.depts.length === 0) {\n        this.$message({\n          message: '自定义数据权限不能为空',\n          type: 'warning'\n        })\n        return false\n      } else if (crud.form.dataScope === '自定义') {\n        const depts = []\n        crud.form.depts.forEach(function(data, index) {\n          const dept = { id: data }\n          depts.push(dept)\n        })\n        console.info(depts)\n        crud.form.depts = depts\n      } else {\n        crud.form.depts = []\n      }\n      return true\n    },\n    [CRUD.HOOK.afterAddError](crud) {\n      this.afterErrorMethod(crud)\n    },\n    [CRUD.HOOK.afterEditError](crud) {\n      this.afterErrorMethod(crud)\n    },\n    afterErrorMethod(crud) {\n      const depts = []\n      crud.form.depts.forEach(function(dept, index) {\n        depts.push(dept.id)\n      })\n      crud.form.depts = depts\n    },\n    // // 获取所有菜单\n    // getMenus() {\n    //   getMenusTree().then(res => {\n    //     this.menus = res\n    //   })\n    // },\n    // 触发单选\n    handleCurrentChange(val) {\n      if (val) {\n        const _this = this\n        // 清空菜单的选中\n        // this.$refs.menu.setCheckedKeys([])\n        // 保存当前的角色id\n        this.currentId = val.id\n        // this.showButton = this.level <= val.level\n        // // 初始化\n        // this.menuIds = []\n        // // 菜单数据需要特殊处理\n        // val.menus.forEach(function(data, index) {\n        //   _this.menuIds.push(data.id)\n        // })\n      }\n    },\n    // // 保存菜单\n    // saveMenu() {\n    //   this.menuLoading = true\n    //   const role = { id: this.currentId, menus: [] }\n    //   // 得到半选的父节点数据，保存起来\n    //   this.$refs.menu.getHalfCheckedNodes().forEach(function(data, index) {\n    //     const menu = { id: data.id }\n    //     role.menus.push(menu)\n    //   })\n    //   // 得到已选中的 key 值\n    //   this.$refs.menu.getCheckedKeys().forEach(function(data, index) {\n    //     const menu = { id: data }\n    //     role.menus.push(menu)\n    //   })\n    //   crudRoles.editMenu(role).then(res => {\n    //     this.crud.notify('保存成功', CRUD.NOTIFICATION_TYPE.SUCCESS)\n    //     this.menuLoading = false\n    //     this.update()\n    //   }).catch(err => {\n    //     this.menuLoading = false\n    //     console.log(err.response.data.message)\n    //   })\n    // },\n    // 改变数据\n    update() {\n      // 无刷新更新 表格数据\n      crudRoles.get(this.currentId).then(res => {\n        for (let i = 0; i < this.crud.data.length; i++) {\n          if (res.id === this.crud.data[i].id) {\n            this.crud.data[i] = res\n            break\n          }\n        }\n      })\n    },\n    // 获取部门数据\n    getDepts() {\n      getDepts({ enabled: true }).then(res => {\n        this.depts = res.content\n      })\n    },\n    /* // 如果数据权限为自定义则获取部门数据\n    changeScope() {\n      if (this.form.dataScope === '自定义') {\n        this.getDepts()\n      }\n    },*/\n    checkboxT(row, rowIndex) {\n      // return row.level >= this.level\n      return true\n    },\n    setDisable(row) {\n      if(row.id =='R000') {\n        return true;\n      }\n      return false;\n    },\n    getTenants() {\n      getTenants().then(data => {\n        if (data != null && data.code == '0000') {\n          this.tenantArr = data.data\n        }\n      })\n    },\n    isSuperAdmin() {\n      this.isSuper = isSuperAdmin();\n    }\n  }\n}\n",null]}