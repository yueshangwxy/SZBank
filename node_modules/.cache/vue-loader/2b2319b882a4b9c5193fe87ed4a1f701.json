{"remainingRequest":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\pncui-workflow\\src\\views\\activiti\\index.vue?vue&type=template&id=74247dda&","dependencies":[{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\pncui-workflow\\src\\views\\activiti\\index.vue","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"el-tabs\",\n    { attrs: { type: \"border-card\", \"active-name\": \"Deployments\" } },\n    [\n      _c(\n        \"el-tab-pane\",\n        { attrs: { name: \"Models\" } },\n        [\n          _c(\n            \"span\",\n            { attrs: { slot: \"label\" }, slot: \"label\" },\n            [\n              _c(\"svg-icon\", { attrs: { \"icon-class\": \"image\" } }),\n              _vm._v(\"流程模型\")\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\"model\", { ref: \"model\" })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-tab-pane\",\n        { attrs: { name: \"Deployments\" } },\n        [\n          _c(\n            \"span\",\n            { attrs: { slot: \"label\" }, slot: \"label\" },\n            [\n              _c(\"svg-icon\", { attrs: { \"icon-class\": \"setting\" } }),\n              _vm._v(\"流程部署\")\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\"deployment\", { ref: \"deployment\" })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-tab-pane\",\n        { attrs: { label: \"\", name: \"Definitions\" } },\n        [\n          _c(\n            \"span\",\n            { attrs: { slot: \"label\" }, slot: \"label\" },\n            [\n              _c(\"svg-icon\", { attrs: { \"icon-class\": \"database\" } }),\n              _vm._v(\"流程定义\\n    \"),\n              _c(\n                \"el-link\",\n                {\n                  on: {\n                    click: function($event) {\n                      return _vm.refresh(\"definition\")\n                    }\n                  }\n                },\n                [_c(\"i\", { staticClass: \"el-icon-refresh\" })]\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\"definition\", { ref: \"definition\" })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-tab-pane\",\n        { attrs: { name: \"Instances\" } },\n        [\n          _c(\n            \"span\",\n            { attrs: { slot: \"label\" }, slot: \"label\" },\n            [\n              _c(\"svg-icon\", { attrs: { \"icon-class\": \"system\" } }),\n              _vm._v(\" 流程实例\\n    \"),\n              _c(\n                \"el-link\",\n                {\n                  on: {\n                    click: function($event) {\n                      return _vm.refresh(\"instance\")\n                    }\n                  }\n                },\n                [_c(\"i\", { staticClass: \"el-icon-refresh\" })]\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\"instance\", { ref: \"instance\" })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-tab-pane\",\n        { attrs: { name: \"Tasks\" } },\n        [\n          _c(\n            \"span\",\n            { attrs: { slot: \"label\" }, slot: \"label\" },\n            [\n              _c(\"svg-icon\", { attrs: { \"icon-class\": \"atom\" } }),\n              _vm._v(\" 任务\")\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\"task\", { ref: \"task\" })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-tab-pane\",\n        { attrs: { name: \"Todolists\" } },\n        [\n          _c(\n            \"span\",\n            { attrs: { slot: \"label\" }, slot: \"label\" },\n            [\n              _c(\"svg-icon\", { attrs: { \"icon-class\": \"user\" } }),\n              _vm._v(\" 我的\")\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\"todolist\", { ref: \"todolist\" })\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}