{"remainingRequest":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\eladmin-common\\src\\components\\Echarts\\Line3D.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\eladmin-common\\src\\components\\Echarts\\Line3D.vue","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nimport echarts from 'echarts'\nimport 'echarts-gl'\n\nrequire('echarts/theme/macarons') // echarts theme\nimport { debounce } from '../../utils'\n\nexport default {\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '100%'\n    },\n    height: {\n      type: String,\n      default: '300px'\n    }\n  },\n  data() {\n    return {\n      chart: null\n    }\n  },\n  mounted() {\n    this.initChart()\n    this.__resizeHandler = debounce(() => {\n      if (this.chart) {\n        this.chart.resize()\n      }\n    }, 100)\n    window.addEventListener('resize', this.__resizeHandler)\n  },\n  beforeDestroy() {\n    if (!this.chart) {\n      return\n    }\n    window.removeEventListener('resize', this.__resizeHandler)\n    this.chart.dispose()\n    this.chart = null\n  },\n  methods: {\n    initChart() {\n      this.chart = echarts.init(this.$el, 'macarons')\n      const data = []\n      for (let t = 0; t < 25; t += 0.001) {\n        const x = (1 + 0.25 * Math.cos(75 * t)) * Math.cos(t)\n        const y = (1 + 0.25 * Math.cos(75 * t)) * Math.sin(t)\n        const z = t + 2.0 * Math.sin(75 * t)\n        data.push([x, y, z])\n      }\n      this.chart.setOption({\n        tooltip: {},\n        backgroundColor: '#fff',\n        visualMap: {\n          show: false,\n          dimension: 2,\n          min: 0,\n          max: 30,\n          inRange: {\n            color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']\n          }\n        },\n        xAxis3D: {\n          type: 'value'\n        },\n        yAxis3D: {\n          type: 'value'\n        },\n        zAxis3D: {\n          type: 'value'\n        },\n        grid3D: {\n          viewControl: {\n            projection: 'orthographic'\n          }\n        },\n        series: [{\n          type: 'line3D',\n          data: data,\n          lineStyle: {\n            width: 4\n          }\n        }]\n      })\n    }\n  }\n}\n",null]}