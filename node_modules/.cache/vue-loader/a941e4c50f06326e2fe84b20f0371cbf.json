{"remainingRequest":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\eladmin-common\\src\\views\\tools\\storage\\qiniu\\form.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\eladmin-common\\src\\views\\tools\\storage\\qiniu\\form.vue","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { get, update } from '../../../../api/tools/qiniu'\nexport default {\n  data() {\n    return {\n      zones: ['华东', '华北', '华南', '北美', '东南亚'], dialog: false,\n      loading: false, form: { accessKey: '', secretKey: '', bucket: '', host: '', zone: '', type: '' },\n      rules: {\n        accessKey: [\n          { required: true, message: '请输入accessKey', trigger: 'blur' }\n        ],\n        secretKey: [\n          { required: true, message: '请输入secretKey', trigger: 'blur' }\n        ],\n        bucket: [\n          { required: true, message: '请输入空间名称', trigger: 'blur' }\n        ],\n        host: [\n          { required: true, message: '请输入外链域名', trigger: 'blur' }\n        ],\n        type: [\n          { required: true, message: '空间类型不能为空', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    init() {\n      get().then(res => {\n        this.form = res\n      })\n    },\n    doSubmit() {\n      this.$refs['form'].validate((valid) => {\n        if (valid) {\n          this.loading = true\n          update(this.form).then(res => {\n            this.$notify({\n              title: '修改成功',\n              type: 'success',\n              duration: 2500\n            })\n            this.$parent.crud.toQuery()\n            this.loading = false\n            this.dialog = false\n          }).catch(err => {\n            this.loading = false\n            console.log(err.response.data.message)\n          })\n        } else {\n          return false\n        }\n      })\n    }\n  }\n}\n",null]}