{"remainingRequest":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\pncui-workflow\\src\\views\\activiti\\task.vue?vue&type=template&id=422df458&","dependencies":[{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\pncui-workflow\\src\\views\\activiti\\task.vue","mtime":1650772046053},{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650772030926},{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1650772056630},{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650772030926},{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1650772056629}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"app-container\" },\n    [\n      _c(\"div\", { staticClass: \"head-container\" }, [\n        _c(\n          \"div\",\n          [\n            _c(\n              \"el-radio-group\",\n              {\n                staticClass: \"filter-item\",\n                on: { change: _vm.refresh },\n                model: {\n                  value: _vm.query.type,\n                  callback: function($$v) {\n                    _vm.$set(_vm.query, \"type\", $$v)\n                  },\n                  expression: \"query.type\"\n                }\n              },\n              [\n                _c(\n                  \"el-radio-button\",\n                  { attrs: { permission: \"['task:all']\", label: \"0\" } },\n                  [_vm._v(\"所有任务\")]\n                ),\n                _vm._v(\" \"),\n                _c(\"el-radio-button\", { attrs: { label: \"1\" } }, [\n                  _vm._v(\"待办任务\")\n                ]),\n                _vm._v(\" \"),\n                _c(\"el-radio-button\", { attrs: { label: \"2\" } }, [\n                  _vm._v(\"可办任务\")\n                ]),\n                _vm._v(\" \"),\n                _c(\"el-radio-button\", { attrs: { label: \"3\" } }, [\n                  _vm._v(\"已办任务\")\n                ])\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _vm.query.type == \"0\"\n              ? _c(\n                  \"el-radio-group\",\n                  {\n                    staticClass: \"filter-item\",\n                    on: { change: _vm.refresh },\n                    model: {\n                      value: _vm.query.finished,\n                      callback: function($$v) {\n                        _vm.$set(_vm.query, \"finished\", $$v)\n                      },\n                      expression: \"query.finished\"\n                    }\n                  },\n                  [\n                    _c(\"el-radio-button\", { attrs: { label: \"\" } }, [\n                      _vm._v(\"全部\")\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"el-radio-button\", { attrs: { label: \"true\" } }, [\n                      _vm._v(\"已完成\")\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"el-radio-button\", { attrs: { label: \"false\" } }, [\n                      _vm._v(\"未完成\")\n                    ])\n                  ],\n                  1\n                )\n              : _vm._e()\n          ],\n          1\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"el-table\",\n        {\n          directives: [\n            {\n              name: \"loading\",\n              rawName: \"v-loading\",\n              value: _vm.loading,\n              expression: \"loading\"\n            }\n          ],\n          ref: \"table\",\n          staticStyle: { width: \"100%\" },\n          attrs: { data: _vm.rows }\n        },\n        [\n          _c(\"el-table-column\", { attrs: { prop: \"id\", label: \"ID\" } }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", { attrs: { prop: \"name\", label: \"名称\" } }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { prop: \"assignee\", label: \"处理人\" }\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", { attrs: { prop: \"owner\", label: \"拥有人\" } }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { prop: \"processDefinitionId\", label: \"流程定义ID\" }\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: { prop: \"processInstanceId\", label: \"流程实例ID\" }\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: {\n              prop: \"startTime\",\n              label: \"开始时间\",\n              \"show-overflow-tooltip\": \"\",\n              formatter: _vm.timeColumnFormat\n            }\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            attrs: {\n              prop: \"endTime\",\n              label: \"结束时间\",\n              \"show-overflow-tooltip\": \"\",\n              formatter: _vm.timeColumnFormat\n            }\n          }),\n          _vm._v(\" \"),\n          _c(\"el-table-column\", {\n            directives: [\n              {\n                name: \"permission\",\n                rawName: \"v-permission\",\n                value: [\"task:process\"],\n                expression: \"['task:process']\"\n              }\n            ],\n            attrs: {\n              label: \"操作\",\n              width: \"120\",\n              align: \"center\",\n              fixed: \"right\"\n            },\n            scopedSlots: _vm._u([\n              {\n                key: \"default\",\n                fn: function(scope) {\n                  return [\n                    _c(\n                      \"el-tooltip\",\n                      { attrs: { content: \"流程图\" } },\n                      [\n                        _c(\"el-button\", {\n                          attrs: {\n                            type: \"text\",\n                            icon: \"el-icon-picture\",\n                            permission: \"['instance:image']\"\n                          },\n                          on: {\n                            click: function($event) {\n                              return _vm.viewImage(scope.row)\n                            }\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"el-tooltip\",\n                      { attrs: { content: \"处理任务\" } },\n                      [\n                        !scope.row.endTime\n                          ? _c(\"el-button\", {\n                              attrs: {\n                                type: \"text\",\n                                icon: \"el-icon-caret-right\",\n                                permission: \"['task:process']\"\n                              },\n                              on: {\n                                click: function($event) {\n                                  return _vm.toProcess(scope.row)\n                                }\n                              }\n                            })\n                          : _vm._e()\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"el-tooltip\",\n                      { attrs: { content: \"任务转出\" } },\n                      [\n                        scope.row.assignee == _vm.user().username &&\n                        !scope.row.endTime\n                          ? _c(\"el-button\", {\n                              attrs: {\n                                type: \"text\",\n                                icon: \"el-icon-top\",\n                                permission: \"['task:assignee']\"\n                              },\n                              on: {\n                                click: function($event) {\n                                  return _vm.toAssignee(scope.row)\n                                }\n                              }\n                            })\n                          : _vm._e()\n                      ],\n                      1\n                    )\n                  ]\n                }\n              }\n            ])\n          })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"el-pagination\", {\n        staticStyle: { \"margin-top\": \"8px\" },\n        attrs: {\n          \"page-size\": _vm.page.size,\n          total: _vm.page.total,\n          \"current-page\": _vm.page.page,\n          layout: \"total, prev, pager, next, sizes\"\n        },\n        on: {\n          \"update:pageSize\": function($event) {\n            return _vm.$set(_vm.page, \"size\", $event)\n          },\n          \"update:page-size\": function($event) {\n            return _vm.$set(_vm.page, \"size\", $event)\n          },\n          \"update:currentPage\": function($event) {\n            return _vm.$set(_vm.page, \"page\", $event)\n          },\n          \"update:current-page\": function($event) {\n            return _vm.$set(_vm.page, \"page\", $event)\n          },\n          \"size-change\": function($event) {\n            return _vm.sizeChangeHandler($event)\n          },\n          \"current-change\": _vm.pageChangeHandler\n        }\n      }),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            \"append-to-body\": \"\",\n            \"close-on-click-modal\": false,\n            visible: _vm.showImage,\n            title: \"流程图\",\n            width: \"90%\"\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.showImage = $event\n            }\n          }\n        },\n        [\n          _c(\"flow-image\", {\n            attrs: {\n              \"process-instance-id\": _vm.current.processInstanceId,\n              \"process-definition-id\": _vm.current.processDefinitionId\n            }\n          })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            \"append-to-body\": \"\",\n            \"close-on-click-modal\": false,\n            visible: _vm.startFlow,\n            title: \"处理任务\",\n            width: \"500px\",\n            height: \"250px\"\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.startFlow = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"form\",\n              attrs: { inline: true, model: _vm.form, \"label-width\": \"90px\" }\n            },\n            [\n              _vm.isAssign\n                ? _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"接收人\", prop: \"assignee\" } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          staticStyle: { width: \"350px\" },\n                          model: {\n                            value: _vm.form.assignee,\n                            callback: function($$v) {\n                              _vm.$set(_vm.form, \"assignee\", $$v)\n                            },\n                            expression: \"form.assignee\"\n                          }\n                        },\n                        _vm._l(_vm.users, function(item) {\n                          return _c(\"el-option\", {\n                            attrs: {\n                              value: item.username,\n                              disabled: \"item.username==user().username\",\n                              label: item.nickName\n                            }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"意见\", prop: \"businessKey\" } },\n                [\n                  _c(\"el-input\", {\n                    staticStyle: { width: \"350px\" },\n                    attrs: { type: \"textarea\", placeholder: \"请输入意见\" },\n                    model: {\n                      value: _vm.form.comment,\n                      callback: function($$v) {\n                        _vm.$set(_vm.form, \"comment\", $$v)\n                      },\n                      expression: \"form.comment\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              !_vm.isAssign\n                ? _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"参数\", prop: \"parameter\" } },\n                    [\n                      _c(\"el-input\", {\n                        staticStyle: { width: \"350px\" },\n                        attrs: {\n                          type: \"textarea\",\n                          placeholder: \"请输入参数(JSON)\"\n                        },\n                        model: {\n                          value: _vm.form.parameter,\n                          callback: function($$v) {\n                            _vm.$set(_vm.form, \"parameter\", $$v)\n                          },\n                          expression: \"form.parameter\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                : _vm._e()\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\"\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"text\" },\n                  on: {\n                    click: function($event) {\n                      _vm.startFlow = false\n                    }\n                  }\n                },\n                [_vm._v(\"取消\")]\n              ),\n              _vm._v(\" \"),\n              !_vm.isAssign\n                ? _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"primary\" },\n                      on: { click: _vm.doProcess }\n                    },\n                    [_vm._v(\"完成\")]\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.isAssign\n                ? _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"primary\" },\n                      on: { click: _vm.doAssignee }\n                    },\n                    [_vm._v(\"确定\")]\n                  )\n                : _vm._e()\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}