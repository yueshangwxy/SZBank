{"remainingRequest":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\src\\views\\indicators\\dimension\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\src\\views\\indicators\\dimension\\index.vue","mtime":1619491437000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport crudIndDimension from '../../../api/indicators/indDimension'\nimport CRUD, { presenter, header, form, crud } from '@crud/crud'\nimport rrOperation from '@crud/RR.operation'\nimport crudOperation from '@crud/CRUD.operation'\nimport udOperation from '@crud/UD.operation'\nimport pagination from '@crud/Pagination'\nimport { getAllSource } from '../../../api/indicators/indIndicatorInfo'\nimport { getValueListByTableAndColumn } from '../../../api/indicators/indDimension'\nimport { getTableListById } from '@datasource/api/datasources/indDataTable'\nimport { getColumnListByDataSourceIdAndTableName } from '@datasource/api/datasources/indDataColumn'\nimport dimData from '../dimension/dimData'\n\n// crud交由presenter持有\nconst defaultCrud = CRUD({ title: '维度管理', url: crudIndDimension.url, sort: 'id,desc', crudMethod: { ...crudIndDimension.method }})\nconst defaultForm = { id: null, dimCode: null, datasourceId: null, dimName: null, tableName: null, nameColumn: null, nameColumnDesc: null, codeColumn: null, codeColumnDesc: null, pid: null, dimLevel: null, alias: null, pkFlag: null, crtUserCode: null, crtOrgCode: null, crtDate: null, updUserCode: null, updOrgCode: null, updDate: null, filterColumn: null, filterValue: null }\nexport default {\n  name: 'IndDimension',\n  components: { pagination, crudOperation, rrOperation, udOperation, dimData },\n  mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\n  data() {\n    return {\n      table: {\n        columns: {\n          id: 'hidden',\n          datasourceId: 'hidden',\n          nameColumn: 'hidden',\n          nameColumnDesc: 'hidden',\n          codeColumn: 'hidden',\n          codeColumnDesc: 'hidden',\n          alias: 'hidden',\n          pkFlag: 'hidden',\n          filterColumn: 'hidden',\n          filterValue: 'hidden'\n        }\n      },\n      tableData: [],\n      tableInfo: [],\n      tableDB: [],\n      DictDB: [],\n      selectData: [],\n      screenData: [],\n      showDimInfo: false,\n      permission: {\n        add: ['admin', 'indDimension:add'],\n        edit: ['admin', 'indDimension:edit'],\n        del: ['admin', 'indDimension:del'],\n        showAllDimCode: ['admin', 'indDimension:showAllDimCode'],\n        details: ['admin', 'indDimension:details']\n      },\n      rules: {\n        dimCode: [\n          { required: true, message: '维度编号不能为空', trigger: 'blur' }\n        ],\n        dimName: [\n          { required: true, message: '维度名称不能为空', trigger: 'blur' }\n        ],\n        tableName: [\n          { required: true, message: '维表表名称不能为空', trigger: 'blur' }\n        ],\n        codeColumn: [\n          { required: true, message: '代码字段不能为空', trigger: 'blur' }\n        ],\n        codeColumnDesc: [\n          { required: true, message: '代码字段描述不能为空', trigger: 'blur' }\n        ],\n        nameColumn: [\n          { required: true, message: '显示字段不能为空', trigger: 'blur' }\n        ],\n        nameColumnDesc: [\n          { required: true, message: '显示字段描述不能为空', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created() {\n    this.$nextTick(() => {\n      getAllSource().then(data => {\n      // console.log(\"=====getAllSource====>>>>\",data)\n        if (data.code === 0) {\n          this.tableDB = data.data\n        } else {\n          this.$message.error({\n            message: '获取数据失败'\n          })\n        }\n      })\n      getTableListById('all').then(data => {\n        if (data.code === 0) {\n          this.DictDB = data.data\n        } else {\n          this.$message.error({\n            message: '获取数据失败'\n          })\n        }\n      })\n    })\n  },\n  methods: {\n    // 获取数据前设置好接口地址\n    [CRUD.HOOK.beforeRefresh]() {\n      return true\n    },\n    [CRUD.HOOK.beforeToAdd]() {\n      this.tableData = []\n      this.tableInfo = []\n      this.form.datasourceId = 'local'\n      getTableListById(this.form.datasourceId).then(data => {\n        if (data.code === 0) {\n          this.tableData = data.data\n        } else {\n          this.clearFrom()\n        }\n      })\n    },\n    [CRUD.HOOK.beforeToEdit]() {\n       getTableListById(this.form.datasourceId).then(data => {\n         // console.log(\"====getTables====>>>>>\",data)\n         if (data.code === 0) {\n           this.tableData = data.data\n         } else {\n           this.tableData = []\n         }\n       })\n       getColumnListByDataSourceIdAndTableName(this.form.datasourceId, this.form.tableName).then(data => {\n         // console.log(\"========getColumns====>>>>\",data)\n         if (data.code === 0) {\n           if (data.data.length === 0) {\n             this.$message.error({\n               message: '表' + this.form.tableName + '不存在'\n             })\n           }\n           this.tableInfo = data.data\n         } else {\n           this.tableInfo = []\n         }\n       })\n       if (this.form.filterColumn !== null && this.form.filterColumn !== ''){\n        const temp = this.form.filterValue\n        let tempArray = []\n        if ((temp !== null && temp !== '') && temp.indexOf(',') !== -1) {\n          tempArray = temp.split(',')\n        } else if (temp !== null && temp !== '') {\n          tempArray.push(temp)\n        }\n        this.form.filterValue = tempArray\n        getValueListByTableAndColumn(this.form.tableName, this.form.filterColumn, this.form.datasourceId).then(data => {\n         if (data.code === 0) {\n           this.screenData = data.data\n         } else {\n           this.$message.error({\n             message: '表' + this.form.tableName + '或列' + this.form.filterColumn + '不存在'\n           })\n         }\n        })\n       }\n\n    },\n    [CRUD.HOOK.beforeSubmit]() {\n       if(this.form.filterValue !== null && this.form.filterValue !== '') {\n        this.form.filterValue = String(this.form.filterValue)\n       }\n    },\n    getTableInfo() {\n      this.form.nameColumn = ''\n      this.form.nameColumnDesc = ''\n      this.form.codeColumn = ''\n      this.form.codeColumnDesc = ''\n      this.form.filterColumn = ''\n      this.form.filterValue = ''\n      getColumnListByDataSourceIdAndTableName(this.form.datasourceId, this.form.tableName).then(data => {\n        // console.log(\"========getColumns====>>>>\",data)\n        if (data.code === 0) {\n          if (data.data.length === 0) {\n            this.$message.error({\n              message: '表' + this.form.tableName + '不存在'\n            })\n          }\n          this.tableInfo = data.data\n        } else {\n          this.tableInfo = []\n        }\n      })\n    },\n    getListData() {\n      this.form.filterValue = ''\n      if(this.form.filterColumn !== null && this.form.filterColumn !== ''){\n        getValueListByTableAndColumn(this.form.tableName, this.form.filterColumn, this.form.datasourceId).then(data => {\n          if (data.code === 0) {\n            this.screenData = data.data\n          } else {\n            this.$message.error({\n              message: '表' + this.form.tableName + '或列' + this.form.filterColumn + '不存在'\n            })\n          }\n        })\n      }\n    },\n    setColumnDesc() {\n      this.tableInfo.forEach(row => {\n        if (this.form.nameColumn === row.columnName) {\n          this.form.nameColumnDesc = row.columnDesc\n        }\n      })\n    },\n    setCodeDesc() {\n      this.tableInfo.forEach(row => {\n        if (this.form.codeColumn === row.columnName) {\n          this.form.codeColumnDesc = row.columnDesc\n        }\n      })\n    },\n    getTableByDB() {\n      this.clearFrom()\n      getTableListById(this.form.datasourceId).then(data => {\n        if (data.code === 0) {\n          this.tableData = data.data\n        } else {\n          this.clearFrom()\n        }\n      })\n    },\n    clearFrom() {\n      this.form.nameColumn = ''\n      this.form.nameColumnDesc = ''\n      this.form.tableName = ''\n      this.form.codeColumn = ''\n      this.form.codeColumnDesc = ''\n      this.form.filterColumn = ''\n      this.form.filterValue = ''\n      this.tableData = []\n      this.tableInfo = []\n    },\n    formatId(row) {\n      let name = ''\n      this.tableDB.forEach(row1 => {\n        if (row1.id === row.datasourceId) {\n          name = row1.datasourceName\n        }\n      })\n      return name\n    },\n    formatTableName(row) {\n      let name = ''\n      this.DictDB.forEach(row1 => {\n        if (row1.tableName === row.tableName) {\n          name = row1.tableDesc\n        }\n      })\n      return name\n    },\n    handleInfo(row) {\n      this.form.id = row.id\n      this.form.dimCode = row.dimCode\n      this.form.datasourceId = row.datasourceId\n      this.form.dimName = row.dimName\n      this.form.tableName = row.tableName\n      this.form.codeColumn = row.codeColumn\n      this.form.codeColumnDesc = row.codeColumnDesc\n      this.form.nameColumn = row.nameColumn\n      this.form.nameColumnDesc = row.nameColumnDesc\n      this.form.pid = row.pid\n      this.form.dimLevel = row.dimLevel\n      this.form.filterColumn = row.filterColumn\n      this.form.filterValue = row.filterValue\n      this.form.alias = row.alias\n      this.form.pkFlag = row.pkFlag\n      this.form.crtUserCode = row.crtUserCode\n      this.form.crtOrgCode = row.crtOrgCode\n      this.form.crtDate = this.parseTime(row.crtDate)\n      this.form.updUserCode = row.updUserCode\n      this.form.updOrgCode = row.updOrgCode\n      this.form.updDate = this.parseTime(row.updDate)\n      this.showDimInfo = true\n    },\n    showAllDimCode(data) {\n      console.log(\"========showAllDimCode====>>>>\",data)\n      const _this = this.$refs.dimData\n      _this.query.tableName = data.tableName\n      _this.query.columnDimCode = data.dimCode\n      _this.query.columnDimName = data.dimName\n      _this.query.columnCodeColumn = data.codeColumn\n      _this.query.columnNameColumn = data.nameColumn\n      _this.query.columnDimLevel = data.dimLevel\n      _this.query.columnFilterColumn = data.filterColumn\n      _this.query.columnPid = data.pid\n      _this.tCode = data.codeColumnDesc\n      _this.tName = data.nameColumnDesc\n      const temp = String(data.filterValue)\n      _this.query.queryFilter = temp\n      if ((temp !== null && temp !== '') && temp.indexOf(',') !== -1) {\n        _this.filterValue = temp.split(',')\n      } else {\n        _this.filterValue.push(temp)\n      }\n      _this.searchDimData()\n      _this.showAllDim = true\n    }\n  }\n}\n",null]}