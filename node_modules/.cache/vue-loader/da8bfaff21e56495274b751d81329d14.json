{"remainingRequest":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\src\\views\\indicators\\indicator\\derive.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\src\\views\\indicators\\indicator\\derive.vue","mtime":1626599032000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport crudIndIndicatorInfo, {\n  getIndDeriveRule,\n  getIndDeriveRuleByIeCode,\n  updateStatus,\n  process,\n  updateDeriveStarStatus\n} from '../../../api/indicators/indIndicatorInfo'\nimport CRUD, {presenter, header, form, crud} from '@crud/crud'\nimport rrOperation from '@crud/RR.operation'\nimport crudOperation from '@crud/ICRUD.operation'\nimport udOperation from '@crud/UD.operation'\nimport pagination from '@crud/Pagination'\nimport category from '../category/category'\nimport arithmetic from './arithmetic/arithmeticPage'\nimport sqlCheck from './arithmetic/sqlCheckPage'\nimport limitRule from './arithmetic/limitRulePage'\nimport lookDetails from './details/lookDeriveDetails'\nimport {getDepts} from '@system/api/system/dept'\nimport Treeselect from '@riophae/vue-treeselect'\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css'\nimport {mapGetters} from 'vuex'\n\n// crud交由presenter持有\nconst defaultCrud = CRUD({\n  title: '衍生指标信息',\n  url: crudIndIndicatorInfo.url,\n  sort: 'id,desc',\n  crudMethod: {...crudIndIndicatorInfo.method}\n})\nconst defaultForm = {\n  id: null,\n  ieCode: null,\n  ieName: null,\n  categoryId: null,\n  ieProp: null,\n  ieType: '2',\n  ieDesc: null,\n  ieRule: null,\n  ieDefaultValue: null,\n  ieMethod: '1',\n  calcFreq: null,\n  status: null,\n  ieDataUnit: '1',\n  ieLevel: null,\n  startDate: null,\n  endDate: null,\n  retention: '1,Y',\n  processInstanceId: null,\n  manageDept: null,\n  crtUserCode: null,\n  crtOrgCode: null,\n  crtDate: null,\n  updUserCode: null,\n  updOrgCode: null,\n  updDate: null\n}\nexport default {\n  name: 'IndIndicatorInfo',\n  components: {\n    pagination,\n    crudOperation,\n    rrOperation,\n    udOperation,\n    category,\n    arithmetic,\n    sqlCheck,\n    limitRule,\n    lookDetails,\n    Treeselect\n  },\n  mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\n  dicts: ['IE_PROP', 'IE_SCOPE', 'IE_TYPE', 'IE_METHOD', 'CALC_FREQ', 'IE_STATUS', 'IE_DATA_UNIT', 'RETENTION'],\n  data() {\n    return {\n      manageDeptEdited: false,\n      table: {\n        columns: {\n          id: 'hidden',\n          crtOrgCode: 'hidden',\n          updOrgCode: 'hidden'\n        }\n      },\n      permission: {\n        add: ['admin', 'deriveIndIndicatorInfo:add'],\n        submit: ['admin', 'deriveIndIndicatorInfo:submit'],\n        develop: ['admin', 'deriveIndIndicatorInfo:develop'],\n        upLine: ['admin', 'deriveIndIndicatorInfo:upLine'],\n        startUsing: ['admin', 'deriveIndIndicatorInfo:startUsing'],\n        stopUsing: ['admin', 'deriveIndIndicatorInfo:stopUsing'],\n        processA: ['admin', 'deriveIndIndicatorInfo:processA'],\n        edit: ['admin', 'deriveIndIndicatorInfo:edit'],\n        del: ['admin', 'deriveIndIndicatorInfo:del'],\n        details: ['admin', 'deriveIndIndicatorInfo:details']\n      },\n      rules: {\n        ieName: [\n          {required: true, message: '指标名称不能为空', trigger: 'blur'}\n        ],\n        ieScope: [\n          {required: true, message: '指标级别不能为空', trigger: 'change'}\n        ],\n        ieProp: [\n          {required: true, message: '指标类别不能为空', trigger: 'change'}\n        ],\n        ieDataUnit: [\n          {required: true, message: '指标单位不能为空', trigger: 'change'}\n        ]\n        /* ieMethod: [\n          {required: true, message: '取值方式不能为空', trigger: 'change'}\n        ]*/\n      },\n      processDialog: false, // 计算输日期的页面\n      processParam: { // 传给后台的参数\n        codes: [],\n        periodDate: ''\n      },\n      dateValue: '', // 计算日期\n      depts: [], // 部门数组\n      viewDept: [], // 查看部门数组\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'user'\n    ])\n  },\n  mounted() {\n    this.getDepts()\n  },\n  methods: {\n    // 选择指标级别后关联管理部门\n    changeIeScope(data) {\n      if (data == 1) {\n        this.manageDeptEdited = true\n        /* getInfo().then(res => {\n           this.form.manageDept = res.deptId\n         })*/\n        this.form.manageDept = this.user.deptId\n        console.log('------------>>>>>---->>>', this.user.deptId)\n      } else {\n        this.form.manageDept = null\n        this.manageDeptEdited = false\n      }\n    },\n    // 获取数据前设置好接口地址\n    [CRUD.HOOK.beforeRefresh]() {\n      this.query.ieType = '2',\n          this.query.queryType = '1'\n      return true\n    },\n    [CRUD.HOOK.beforeToAdd]() {\n      if (!this.form.categoryId) {\n        this.crud.notify('请选择分类', CRUD.NOTIFICATION_TYPE.ERROR)\n        return false\n      }\n      if (this.form.categoryId === '0') {\n        this.crud.notify('根节点不能添加', CRUD.NOTIFICATION_TYPE.ERROR)\n        return false\n      }\n      // 获取部门信息\n      this.getDepts()\n    },\n    [CRUD.HOOK.beforeToEdit]() {\n      if (this.form.status != 0 && this.form.status != 2) {\n        this.crud.notify('只有未提交或退回的数据才能修改能修改', CRUD.NOTIFICATION_TYPE.ERROR)\n        this.crud.resetForm()\n        return false\n      }\n      // 获取部门信息\n      this.getDepts()\n    },\n    // 删除之前\n    [CRUD.HOOK.beforeDelete]() {\n      for (let items of this.crud.selections) {\n\n        if (items.status != 0) {\n          this.crud.notify('该状态的指标不允许删除', CRUD.NOTIFICATION_TYPE.ERROR)\n          return false\n        }\n      }\n      // 获取部门信息\n      this.getDepts()\n\n    },\n    handleCategoryClick(data) {\n      this.crud.form.categoryId = data.id\n      this.crud.query.categoryIds = data.childrenIds\n      this.form.categoryId = data.id\n      this.crud.refresh()\n    },\n    /* 点击开发按钮触发,根据不同的取值方式打开不同的开发页面 */\n    deriveDevelop(data) {\n      // 状态校验-只能选择0-未审批或3-已退回的数据\n      if (data.status != 2) {\n        this.crud.notify('请选择已审批的数据', CRUD.NOTIFICATION_TYPE.ERROR)\n        return false\n      }\n      // 取值方式=1打开四则运算页面.2-SQL公式，3-限制，4-EXCEL公式\n      if (data.ieMethod == 1) {\n        const _this = this.$refs.arithmetic\n        const indDeriveRule = {\n          'ieCode': data.ieCode\n        }\n        getIndDeriveRuleByIeCode(indDeriveRule).then(data => {\n          if (data.code === 0) {\n            const ruleDesc = data.data.ruleDesc\n            if (ruleDesc != null) {\n              _this.arithtext = ruleDesc\n            }\n          } else {\n            _this.arithtext = ''\n          }\n        })\n        _this.title = '算法定义-四则运算[' + data.ieCode + ']'\n        _this.ieCode = data.ieCode\n        _this.arithmeticDialog = true\n      } else if (data.ieMethod == 2) {\n        const _this = this.$refs.sqlCheck\n        const indDeriveRule = {\n          'ieCode': data.ieCode\n        }\n        getIndDeriveRuleByIeCode(indDeriveRule).then(deriveRuleData => {\n          if (deriveRuleData.code === 0) {\n            _this.sqlData.sqlText = deriveRuleData.data.calcRule\n          } else {\n            _this.sqlData.sqlText = null\n          }\n        })\n        _this.sqlData.ieCode = data.ieCode\n        _this.title = '算法定义-SQL校验[' + data.ieCode + ']'\n        _this.ieCode = data.ieCode\n        _this.sqlTemp = true\n        _this.sqlCheck = true\n      } else if (data.ieMethod == 3) {\n        const _this = this.$refs.limitRule\n        _this.title = '算法定义-限制条件[' + data.ieCode + ']'\n        _this.ieCode = data.ieCode\n        _this.limitCheck = true\n      }\n    },\n    // 子组件调用刷新方法\n    refQuery(data) {\n      this.crud.toQuery()\n    },\n    /* 点击提交审批触发事件 */\n    subApprove(data) {\n      let temp = 0\n      const param = []\n      const ieCodes = []\n      for (let i = 0; i < data.length; i++) {\n        // 状态校验-只能选择0-未审批\n        if (data[i].status != 0) {\n          temp = -1\n          break\n        }\n        const indIndicatorInfo = {\n          'id': data[i].id,\n          'status': '1',\n          'ieProp': data[i].ieProp\n        }\n        param.push(indIndicatorInfo)\n        ieCodes.push(data[i].ieCode)\n      }\n      if (temp == -1) {\n        this.crud.notify('请选择未审批或已退回的数据', CRUD.NOTIFICATION_TYPE.ERROR)\n        return false\n      }\n      this.$confirm(`确定要提交所选数据吗?`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        updateStatus(param).then(returnData => {\n          if (returnData.code === 0) {\n            this.crud.notify('操作成功', CRUD.NOTIFICATION_TYPE.SUCCESS)\n            this.crud.toQuery()\n          } else {\n            this.crud.notify('操作失败!错误原因:' + returnData.msg, CRUD.NOTIFICATION_TYPE.ERROR)\n            this.crud.toQuery()\n          }\n        })\n      })\n    },\n    /* 点击上线按钮触发事件 */\n    upLine(data) {\n      let temp = 0\n      const param = []\n      const ieCodes = []\n      for (let i = 0; i < data.length; i++) {\n        // 状态校验-只能选择0-已审批\n        if (data[i].status != 2) {\n          temp = -1\n          break\n        }\n        const indIndicatorInfo = {\n          'id': data[i].id,\n          'status': '4'\n        }\n        param.push(indIndicatorInfo)\n        ieCodes.push(data[i].ieCode)\n      }\n      if (temp == -1) {\n        this.crud.notify('请选择已审批的数据', CRUD.NOTIFICATION_TYPE.ERROR)\n        return false\n      }\n      // 开发校验通过后执行审批\n      getIndDeriveRule(ieCodes).then(returnData => {\n        if (returnData.code !== 0) {\n          this.crud.notify(returnData.msg + '指标未进行开发', CRUD.NOTIFICATION_TYPE.ERROR)\n        } else {\n          this.$confirm(`确定上线所选数据吗?`, '提示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }).then(() => {\n            // 开发校验通过后,修改状态\n            updateStatus(param).then(returnData => {\n              if (returnData.code === 0) {\n                this.crud.notify('操作成功', CRUD.NOTIFICATION_TYPE.SUCCESS)\n                this.crud.toQuery()\n              } else {\n                this.crud.notify('操作失败!错误原因:' + returnData.msg, CRUD.NOTIFICATION_TYPE.ERROR)\n                this.crud.toQuery()\n              }\n            })\n          })\n        }\n      })\n    },\n    // 启用按钮\n    startUsing(data) {\n      let temp = 0\n      const param = []\n      for (let i = 0; i < data.length; i++) {\n        // 状态校验-只能选择4-已上线或6-停用的数据\n        if (data[i].status != 4 && data[i].status != 6) {\n          temp = -1\n          break\n        }\n        const indIndicatorInfo = {\n          'id': data[i].id,\n          'ieCode': data[i].ieCode,\n          'status': '5'\n        }\n        param.push(indIndicatorInfo)\n      }\n      if (temp == -1) {\n        this.crud.notify('请选择已上线或停用的数据', CRUD.NOTIFICATION_TYPE.ERROR)\n        return false\n      }\n\n      this.$confirm(`确定启用所选数据吗?`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        // 算法定义校验通过后,修改状态为启用(单独处理、修改衍生指标层级)\n        updateDeriveStarStatus(param).then(returnData => {\n          if (returnData.code === 0) {\n            this.crud.notify('操作成功', CRUD.NOTIFICATION_TYPE.SUCCESS)\n            this.crud.toQuery()\n          } else {\n            this.crud.notify('操作失败!错误原因:' + returnData.msg, CRUD.NOTIFICATION_TYPE.ERROR)\n            this.crud.toQuery()\n          }\n        })\n      })\n    },\n    // 停用按钮\n    stopUsing(data) {\n      let temp = 0\n      const param = []\n      for (let i = 0; i < data.length; i++) {\n        // 状态校验-只能选择4-启用数据\n        if (data[i].status != 5) {\n          temp = -1\n          break\n        }\n        const indIndicatorInfo = {\n          'id': data[i].id,\n          'status': '6'\n        }\n        param.push(indIndicatorInfo)\n      }\n      if (temp == -1) {\n        this.crud.notify('请选择启用的数据', CRUD.NOTIFICATION_TYPE.ERROR)\n        return false\n      }\n      this.$confirm(`确定停用所选数据吗?`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        updateStatus(param).then(returnData => {\n          if (returnData.code === 0) {\n            this.crud.notify('操作成功', CRUD.NOTIFICATION_TYPE.SUCCESS)\n            this.crud.toQuery()\n          } else {\n            this.crud.notify('操作失败!错误原因:' + returnData.msg, CRUD.NOTIFICATION_TYPE.ERROR)\n            this.crud.toQuery()\n          }\n        })\n      })\n    },\n    // 详情按钮\n    details(row) {\n      const _this = this.$refs.lookDetails\n      // 打开详情页面时通过ieCode去查询取值规则\n      const indDeriveRule = {\n        ieCode: row.ieCode\n      }\n      getIndDeriveRuleByIeCode(indDeriveRule).then(data => {\n        if (data.code === 0) {\n          _this.$set(_this.form, 'calcRule', data.data.ruleDesc)\n        }\n      })\n      getDepts({enabled: true}).then(res => {\n        _this.depts = res.content\n      })\n      _this.title = '详情'\n      _this.form = row\n      _this.detailsDialog = true\n    },\n    /** 点击计算按钮触发 */\n    processA(data) {\n      // 只能选择已审批的数据\n      let temp = 0\n      for (let i = 0; i < data.length; i++) {\n        // 状态校验-只能选择5-启用\n        if (data[i].status != 5) {\n          temp = -1\n          break\n        }\n      }\n      if (temp == -1) {\n        this.crud.notify('请选择已启用的数据', CRUD.NOTIFICATION_TYPE.ERROR)\n        return false\n      }\n\n      const codes = []\n      for (let i = 0; i < data.length; i++) {\n        codes.push(data[i].ieCode)\n      }\n      this.processParam.codes = codes\n      this.processDialog = true\n    },\n    processB() {\n      if (this.dateValue == '') {\n        this.crud.notify('日期不能为空', CRUD.NOTIFICATION_TYPE.ERROR)\n      } else {\n        const dateValue = this.dateFormat(this.dateValue, 'YYYYMMDD')\n        this.processParam.periodDate = dateValue\n        process(this.processParam, 'derive').then(data => {\n          if (data.code == 0) {\n            this.crud.notify(data.msg, CRUD.NOTIFICATION_TYPE.SUCCESS)\n          } else {\n            this.crud.notify(data.msg, CRUD.NOTIFICATION_TYPE.ERROR)\n          }\n          this.processDialog = false\n        })\n      }\n    },\n    // 获取弹窗内部门数据\n    getDepts() {\n      getDepts({enabled: true, pid: '1', deptCategory: '0'}).then(res => {\n        this.depts = res.content\n        this.viewDept = [{\n          id: 0,\n          label: '总行机关',\n          children: res.content,\n        }]\n      })\n    }\n  }\n}\n",null]}