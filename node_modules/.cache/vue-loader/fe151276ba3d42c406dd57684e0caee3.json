{"remainingRequest":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DataAssetPlatform\\Pncui-Ind\\src\\views\\indicators\\category\\category.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\src\\views\\indicators\\category\\category.vue","mtime":1647932070256},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647917124586},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1647917124178},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647917124586},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1647917137429}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport crudIndCategory from '@/api/indicators/indCategory'\nimport CRUD, {crud, form, header, presenter} from \"@crud/crud\";\nimport { isSuperAdmin, getTenants } from '@/api/indUserApply/indTenant'\nconst defaultCrud = CRUD({\n  title: '指标信息',\n  url: crudIndCategory.url,\n  sort: 'id,desc',\n  crudMethod: { ...crudIndCategory.crud }\n})\nconst defaultForm = {\n  parentName: null,\n  categoryName: null,\n  categoryType: null,\n  id: null,\n  parentId: null,\n  prefix: null,\n  operType: null,\n  level: 1\n}\nexport default {\n  name: 'IndCategory',\n\n  // components: { pagination, crudOperation, rrOperation, udOperation },\n   mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\n  data() {\n    return {\n      type: '0',\n      parentId:  '0',\n      isTop: false,\n      dialogVisible: false,\n      dialogTitle: '',\n      filterText: '',\n      activeName:'defaultCategory',\n      defaultProps: { children: 'children', label: 'name' },\n      treeData: [{ id: '0', categoryType: this.type, categoryName: '全部类别', children: [] ,parentName: null,parentId: null,prefix: null,level:0}],\n      permission: {\n        add: ['admin', 'indCategory:add'],\n        edit: ['admin', 'indCategory:edit'],\n        del: ['admin', 'indCategory:del'],\n        selfAdd: ['admin', 'indCategory:selfAdd'],\n        selfEdit: ['admin', 'indCategory:selfEdit'],\n        selfDel: ['admin', 'indCategory:selfDel']\n      },\n      rules: {\n        id: [\n          { required: true, message: '分类ID不能为空', trigger: 'blur' }\n        ],\n        categoryName: [\n          { required: true, message: '分类名称不能为空', trigger: 'blur' }\n        ]\n      },\n      tenantArr: [],\n      superAdminFlag: false,\n    }\n  },\n  props: {\n    canOpr: true,\n    height:{type:String,default:'465px'}\n  },\n  watch: {\n    filterText(val) {\n      this.$refs.tree.filter(val)\n    }\n  },\n  mounted() {\n    // console.log('=====category---mounted....')\n    this.superAdminFlag = isSuperAdmin();\n    this.init()\n    this.getTenants()\n  },\n  methods: {\n    // 获取数据前设置好接口地址\n    /*  [CRUD.HOOK.beforeRefresh]() {\n        return true\n    },*/\n    filterNode(value, treeData) {\n      if (!value) return true\n      return treeData.categoryName.indexOf(value) !== -1\n    },\n    handleTabClick(tab, event) {\n      console.log(\"tab===>, \" + tab)\n      this.type = tab.index;\n      this.treeData[0].categoryType = tab.index;\n      this.treeData[0].children = []\n      this.init();\n      this.handleNodeClick(this.treeData[0]);\n    },\n    // 点击事件\n    handleNodeClick(data) {\n      this.$emit('node-click', data)\n    },\n    handleAdd(data) {\n      this.form.level=parseInt(data.level) + 1\n      this.dialogVisible = true\n      this.dialogTitle = \"新增指标分类\"\n      this.form.categoryType = this.type\n      //this.form.categoryName = data.categoryName\n      this.form.parentName = data.categoryName\n      this.form.parentId = data.id\n      this.form.categoryName = null\n      this.form.operType = \"add\"\n      if(data.id > 0) {\n        this.form.prefix = data.prefix\n      }\n      if(data.id == '0') {\n        this.isTop = true;\n      } else {\n        this.isTop = false;\n      }\n    },\n    handleEdit(data) {\n      this.dialogVisible = true\n      this.dialogTitle = \"修改指标分类\"\n      this.form.categoryType = data.categoryType\n      this.form.categoryName = data.categoryName\n      this.form.parentName = data.parentName\n      this.form.id = data.id\n      this.form.parentId = data.parentId\n      this.form.operType = \"edit\"\n      this.form.prefix = data.prefix\n      this.form.tenant = data.tenant\n      this.form.level = data.level\n      if(data.parentId == '0') {\n        this.isTop = true;\n      } else {\n        this.isTop = false;\n      }\n    },\n    handleRemove(node, data) {\n      const $this = this\n      this.$confirm('确定要删除该节点及其所有子节点吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        crudIndCategory.crud.del([data.id]).then(res => {\n          if (res.code !== 0) {\n            $this.$message({\n              type: 'error',\n              message: '删除失败,' + res.msg\n            })\n          } else {\n            $this.$message({\n              type: 'success',\n              message: '删除成功 '\n            })\n          }\n          $this.init()\n\n          // this.crud.notify(this.dict.label.user_status[val] + '成功', CRUD.NOTIFICATION_TYPE.SUCCESS)\n        }).catch(() => {\n          console.log('删除异常')\n          $this.$message({\n            type: 'error',\n            message: '删除失败 '\n          })\n        })\n      }).catch(() => {\n      })\n    },\n    init() {\n      let _self = this;\n      crudIndCategory.tree(this.type, this.parentId).then(res => {\n        console.log('======crudIndCategory.init======', res.toString())\n        this.treeData[0].categoryType = this.type;\n        this.treeData[0].children = res.data\n        // this.crud.notify(this.dict.label.user_status[val] + '成功', CRUD.NOTIFICATION_TYPE.SUCCESS)\n        //刷新上层页面\n        this.$emit('reloadIndFirstType');\n      }).catch(() => {\n        console.log('')\n        // data.enabled = !data.enabled\n      })\n    },\n    cancel() {\n      this.dialogVisible = false\n    },\n    submit() {\n      if(this.form.operType === \"add\") {\n        this.addCategory();\n      } else {\n        this.editCategory();\n      }\n    },\n    addCategory() {\n      const $this = this;\n      if(this.superAdminFlag && this.superAdminFlag && this.isTop && this.form.tenant == null){\n        $this.$message({\n          type:'error',\n          message: '请选择所属租户'\n        })\n        return\n      }\n      if(this.form.categoryName == null){\n        $this.$message({\n          type:'error',\n          message: '分类名称不能为空'\n        })\n        return\n      }\n      if(this.form.categoryType == 0 && this.form.prefix == null){\n        $this.$message({\n          type:'error',\n          message: '前缀不能为空'\n        })\n        return\n      }\n      crudIndCategory.crud.add({\n        categoryName: this.form.categoryName,\n        categoryType: this.form.categoryType,\n        prefix: this.form.prefix != null? this.form.prefix.toUpperCase(): null,\n        parentId: this.form.parentId,\n        tenant: this.form.tenant,\n        level: this.form.level\n      }).then(res => {\n        if(res.code === 0) {\n          $this.$message({\n            type: 'success',\n            message: '添加成功 '\n          })\n          $this.init()\n          this.form.categoryName = null\n          this.form.categoryType  = null\n          this.form.prefix = null\n          this.form.parentId = null\n          this.dialogVisible = false\n        }else {\n          $this.$message({\n            type:'error',\n            message: res.msg\n          })\n        }\n\n      }).catch(() => {\n        console.log('新增异常')\n        $this.$message({\n          type: 'error',\n          message: '添加失败 '\n        })\n      })\n    },\n    editCategory() {\n      const $this = this\n      if(this.superAdminFlag && this.superAdminFlag && this.isTop && this.form.tenant == null){\n        $this.$message({\n          type:'error',\n          message: '请选择所属租户'\n        })\n        return\n      }\n      if(this.form.categoryName == null){\n        $this.$message({\n          type:'error',\n          message: '分类名称不能为空'\n        })\n        return\n      }\n      if(this.form.categoryType == 0 && this.form.prefix == null){\n        $this.$message({\n          type:'error',\n          message: '前缀不能为空'\n        })\n        return\n      }\n      crudIndCategory.crud.edit({\n        categoryName: this.form.categoryName,\n        categoryType: this.form.categoryType,\n        prefix: this.form.prefix != null? this.form.prefix.toUpperCase(): null,\n        id: this.form.id,\n        parentId: this.form.parentId,\n        tenant: this.form.tenant,\n        level: this.form.level\n      }).then(res => {\n        if(res.code === 0) {\n          $this.$message({\n            type: 'success',\n            message: '修改成功 '\n          })\n          $this.init()\n          this.form.categoryName = null\n          this.form.categoryType  = null\n          this.form.prefix = null\n          this.form.parentId = null\n          this.dialogVisible = false\n        }else {\n          $this.$message({\n            type:'error',\n            message: res.msg\n          })\n        }\n      }).catch(() => {\n        $this.$message({\n          type: 'error',\n          message: '修改失败 '\n        })\n      })\n      /*this.$prompt('输入节点名称', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        inputValue: data.categoryName\n        // inputPattern: /[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?/,\n        // inputErrorMessage: '邮箱格式不正确'\n      }).then(() => {\n\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '修改失败'\n        })\n      })*/\n    },\n    getTenants() {\n      getTenants().then(data => {\n        if (data != null && data.code == '0000') {\n          this.tenantArr = data.data\n        }\n      })\n    }\n  }\n}\n",null]}