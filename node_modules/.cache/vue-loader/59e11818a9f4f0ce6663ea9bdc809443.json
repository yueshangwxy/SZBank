{"remainingRequest":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\src\\views\\indicators\\indicator\\arithmetic\\limitRulePage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\src\\views\\indicators\\indicator\\arithmetic\\limitRulePage.vue","mtime":1644369310592},{"path":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport crudIndIndicatorInfo, { saveArithmetic } from '../../../../api/indicators/indIndicatorInfo'\nimport { sqlCheck } from '@datasource/api/datasources/indDatasource'\nimport category from '../../category/categoryInfo'\nimport aForm from './taste/tastePage'\nimport { getDimListById, getValueListByDimCode } from '../../../../api/indicators/indDimension'\n\nexport default {\n  components: {\n    category,\n    aForm\n  },\n  data() {\n    return {\n      loading: false,\n      limitCheck: false,\n      title: '',\n      ieCode: '',\n      tempArray: [],\n      dimArray: [],\n      tableData: [{\n        checkName: '',\n        checkFlag: '',\n        checkValue: '',\n        isCheck: false\n      }],\n      categoryName: ''\n    }\n  },\n  mounted() {\n    // 删除初始化时第一行数据\n    this.tableData.splice(0, 1)\n  },\n  methods: {\n    /* 限制校验的method----start */\n    // 点击指标触发\n    handleCategoryClick1(data) { // 限制规则选择基础指标展示右侧选项\n      if (data.categoryType === '88') {\n        if (this.categoryId != data.id) {\n          this.dimArray = []\n          this.tableData = []\n        }\n        this.categoryName = data.categoryName\n        this.categoryId = data.id\n        const para = {\n          id: data.id\n        }\n        getDimListById(para).then(data => { // 根据基础指标id查询对应维度列表信息\n          if (data.code === 0) {\n            this.dimArray = data.data// 查询成功后放入对应数组\n          } else {\n            this.dimArray = []\n          }\n        })\n        var newValue = {\n          checkName: '',\n          checkFlag: 'Y',\n          checkValue: '',\n          isCheck: true\n        }\n        // 添加新的行数\n        this.tableData.push(newValue)\n      }\n    },\n    handleDelete(index) { // 删除行数\n      this.tableData.splice(index, 1)\n    },\n    getValueList(index, row) { // 选择维度后解锁值列表方法\n      const para = {\n        dimCode: row.checkName // change选中的维度编号\n      }\n      //这个方法不可用了,改为getValueListByTableAndColumn方法,由于衍生指标限制规则不使用，暂未修改\n      getValueListByDimCode(para).then(data => { // 根据维度编号查询对应的值列表方法\n        if (data.code === 0) {\n          this.tempArray = data.data\n        } else {\n          this.tempArray = []\n          this.$message.error({\n            message: '未查询到对应的值'\n          })\n        }\n      })\n      row.isCheck = false// 值列表状态改为可选可选\n    },\n    // 保存限制条件\n    savelimit() {\n      // 1、判断tableData不为空并且元素不为空\n      console.log(this.tableData)\n\n      const param = {\n        'ieCode': this.ieCode,\n        'ruleType': '3',\n        'calcRule': '',\n        'dependType': '1', // 依赖指标类型(1-基础，2-衍生指标，3-参数)\n        'dependId': this.categoryId, // 依赖指标id\n        'tableData': this.tableData // 限制内容\n      }\n      saveArithmetic(param).then(data => {\n        if (data.code === 0) {\n          this.$message.success({\n            message: '保存成功!'\n          })\n          this.limitCheck = false\n        } else {\n          this.$message.error({\n            message: data.msg\n          })\n        }\n      })\n    }\n    /* 限制校验的method----end */\n  }\n}\n",null]}