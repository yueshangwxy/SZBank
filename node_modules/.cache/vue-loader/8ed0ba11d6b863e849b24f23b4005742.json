{"remainingRequest":"D:\\SZBank\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\SZBank\\src\\views\\indicators\\home\\swiper-box.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\SZBank\\src\\views\\indicators\\home\\swiper-box.vue","mtime":1655974464045},{"path":"D:\\SZBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\SZBank\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733},{"path":"D:\\SZBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\SZBank\\node_modules\\vue-loader\\lib\\index.js","mtime":1650418886580}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { swiper, swiperSlide } from \"vue-awesome-swiper\";\r\nimport \"swiper/dist/css/swiper.css\";\r\nconst c_swiper = document.getElementsByClassName(\"swiper-wrapper\");\r\nexport default {\r\n  name: \"SwiperBox\",\r\n  components: { swiper, swiperSlide },\r\n  props: {\r\n    deptList: {\r\n      type: Array,\r\n      default: [],\r\n    },\r\n  },\r\n  computed: {\r\n    swiper() {\r\n      return this.$refs.mySwiper.swiper;\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      activeSlide: 1,\r\n      swiperOption: {\r\n        loop: true, // 是否循环轮播\r\n        autoplay: {\r\n          delay: 10000,\r\n          stopOnLastSlide: false,\r\n          disableOnInteraction: true,\r\n        }, // 是否可以自动轮播\r\n        slidesPerView: \"auto\", // 可是区域内可展示多少个块\r\n        spaceBetween: 16, // 块之间间隔距离\r\n        initialSlide: 0, // 默认初始显示块\r\n        freeMode: false,\r\n        observer: true,\r\n        observeParents: true,\r\n        centeredSlides: true,\r\n        slideToClickedSlide: true, // 点击居中显示\r\n        // 显示分页\r\n        pagination: {\r\n          el: \".swiper-pagination\",\r\n          clickable: true,\r\n        },\r\n        // 设置点击箭头\r\n        navigation: {\r\n          nextEl: \".swiper-button-next\",\r\n          prevEl: \".swiper-button-prev\",\r\n        },\r\n        on: {\r\n          slideChange: () => {\r\n            c_swiper[0].style.alignItem = \"center\";\r\n            this.getCurrentData(c_swiper[0].swiper.activeIndex);\r\n          },\r\n        },\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    // 获取接口\r\n    getCurrentData(index) {\r\n      if (index < this.deptList.length) {\r\n        this.$emit(\"getOrganizationData\", this.deptList[index]);\r\n      } else {\r\n        // 因为是循环的，所以要取余\r\n        let num = parseInt(index % this.deptList.length);\r\n        this.$emit(\"getOrganizationData\", this.deptList[num]);\r\n      }\r\n    },\r\n\r\n    // 数字实现三位分割显示\r\n    numberFormat(value) {\r\n      if (!value) return \"0\";\r\n      var intPart = Number(value).toFixed(0); // 获取整数部分\r\n      var intPartFormat = intPart\r\n        .toString()\r\n        .replace(/(\\d)(?=(?:\\d{3})+$)/g, \"$1,\"); // 将整数部分逢三一断\r\n      var floatPart = \".00\"; // 预定义小数部分\r\n      var value2Array = value.toString().split(\".\");\r\n      // =2表示数据有小数位\r\n      if (value2Array.length === 2) {\r\n        floatPart = value2Array[1].toString(); // 拿到小数部分\r\n        if (floatPart.length === 1) {\r\n          // 补0\r\n          return intPartFormat + \".\" + floatPart + \"0\";\r\n        } else {\r\n          return intPartFormat + \".\" + floatPart;\r\n        }\r\n      } else {\r\n        return intPartFormat;\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    // this.$refs.mySwiper.slideToLoop(3, 100, false);\r\n  },\r\n};\r\n",null]}