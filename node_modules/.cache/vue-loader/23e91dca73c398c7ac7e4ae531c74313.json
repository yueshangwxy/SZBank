{"remainingRequest":"D:\\SZBank\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\SZBank\\src\\views\\indicators\\portalHome\\manager\\authManager.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\SZBank\\src\\views\\indicators\\portalHome\\manager\\authManager.vue","mtime":1654852398639},{"path":"D:\\SZBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\SZBank\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733},{"path":"D:\\SZBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\SZBank\\node_modules\\vue-loader\\lib\\index.js","mtime":1650418886580}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  name: \"authManager\",\r\n  components: {},\r\n  data() {\r\n    return {\r\n      name: \"\",\r\n      date: \"\",\r\n      // 表格\r\n      tableData: [],\r\n      propList: [],\r\n      // 分页\r\n      pageSize: 10,\r\n      total: 10,\r\n      currentPage: 1,\r\n      // 当前选中\r\n      currentRow: null,\r\n      // 树状图\r\n      treeData: [],\r\n      defaultProps: {\r\n        id: \"id\",\r\n        children: \"children\",\r\n        label: \"name\",\r\n      },\r\n    };\r\n  },\r\n  watch: {},\r\n  created() {},\r\n  mounted() {},\r\n  computed: {},\r\n  created() {\r\n    this.propList = [\r\n      {\r\n        prop: \"name\",\r\n        label: \"角色名称\",\r\n        align: \"center\",\r\n      },\r\n      {\r\n        prop: \"remark\",\r\n        label: \"描述\",\r\n        align: \"center\",\r\n      },\r\n    ];\r\n    this.initList();\r\n  },\r\n  methods: {\r\n    // 重置\r\n    reset() {\r\n      this.name = \"\";\r\n      this.date = \"\";\r\n    },\r\n    // 从第一页开始查询\r\n    initList() {\r\n      this.currentPage = 1;\r\n      this.queryList();\r\n    },\r\n    // 列表查询\r\n    queryList() {\r\n      // name(输入名称或者描述搜索) crtDate(时间控制) size(分页条数)  page(页码)\r\n      let request = {\r\n        name: this.name,\r\n        size: this.pageSize,\r\n        page: this.currentPage,\r\n      };\r\n      this.$api.qryRoleListPage(request).then((res) => {\r\n        if (res.data && res.data.records) {\r\n          this.tableData = res.data.records;\r\n          this.total = res.data.total;\r\n        }\r\n      });\r\n    },\r\n    // 设置当前选中行为哪行\r\n    setCurrent(row) {\r\n      this.$refs.singleTable.setCurrentRow(row);\r\n    },\r\n    // 当前选中改变 --- 显示菜单树\r\n    handleRowChange(val) {\r\n      this.currentRow = val;\r\n      this.$api\r\n        .showRolesMenu({\r\n          id: val.id,\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n          if (res.data) {\r\n            this.handleDisplay(res.data);\r\n          }\r\n        });\r\n    },\r\n    // 处理tree回显\r\n    handleDisplay(val) {\r\n      // 先显示出树，才能获取到所有节点\r\n      val.length > 0 ? (this.treeData = val) : (this.treeData = []);\r\n      // 已勾选id - 调用递归方法进行处理\r\n      let checkedKeyArray = [];\r\n      val ? this.getCheckedId(val, checkedKeyArray) : \"\";\r\n      this.$nextTick(() => {\r\n        checkedKeyArray.forEach((item) => {\r\n          if (this.$refs.tree) {\r\n            // 选中树，获取到树的节点，如果存在isSelect，则设置回显\r\n            let node = this.$refs.tree.getNode(item);\r\n            if (node.data.isSelect == 1) {\r\n              this.$refs.tree.setChecked(node, true);\r\n            }\r\n          }\r\n        });\r\n      });\r\n    },\r\n    // 递归处理 - 所有层级中选中的菜单id\r\n    getCheckedId(val, checkedKeyArray) {\r\n      val.forEach((item) => {\r\n        if (item.isSelect == 1) {\r\n          checkedKeyArray.push(item.id);\r\n        }\r\n        if (item.children && item.children.length > 0) {\r\n          this.getCheckedId(item.children, checkedKeyArray);\r\n        }\r\n      });\r\n    },\r\n    //  分页\r\n    handleCurrentChange(val) {\r\n      this.currentPage = val;\r\n      this.queryList();\r\n    },\r\n    // 节点点击\r\n    handleNodeClick(node, data) {\r\n      console.log(node);\r\n    },\r\n    // 复选框选中\r\n    handleCheckChange(data, checked, indeterminate) {\r\n      console.log(data, checked, indeterminate);\r\n    },\r\n    // 获取选中的节点\r\n    getCheckedNodes() {\r\n      let selectedNode = this.$refs.tree.getCheckedNodes(false, true);\r\n      let menuIds = [];\r\n      selectedNode.forEach((item) => {\r\n        menuIds.push(item.id);\r\n      });\r\n      return menuIds;\r\n    },\r\n    // 保存菜单\r\n    saveMenu() {\r\n      let request = {\r\n        roleId: this.currentRow.id,\r\n        menuIds: this.getCheckedNodes(),\r\n      };\r\n      this.$api.saveRoleMenu(request).then((res) => {\r\n        if (res.code == 0 || res.code == 200) {\r\n          this.$message.success(res.msg);\r\n          this.queryList();\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      });\r\n    },\r\n  },\r\n};\r\n",null]}