{"remainingRequest":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DataAssetPlatform000\\Pncui-Ind\\src\\views\\indicators\\dataLab\\datasearch\\dataImportPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\src\\views\\indicators\\dataLab\\datasearch\\dataImportPage.vue","mtime":1654652482547},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1650418886580}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  name: \"dataImportPage\",\r\n  data() {\r\n    return {\r\n      currentStep: 0,\r\n      firstForm: {},\r\n      firstShow: true,\r\n      secondForm: {},\r\n      secondShow: false,\r\n      file:undefined,\r\n      fileList: [],\r\n      fileType: ['csv'],\r\n      fileSize: 1024,\r\n    }\r\n  },\r\n  methods:{\r\n      executeSQL(){\r\n        if (this.firstForm.sqlText == null || this.firstForm.sqlText === \"\") {\r\n          this.$message.error(\"请输入SQL语句\");\r\n          return;\r\n        }\r\n        request({\r\n          url: \"/datalab/dataImport/executeMgrSql\",\r\n          method: \"post\",\r\n          data: {\r\n            sqlText: this.firstForm.sqlText\r\n          },\r\n          }).then((res) => {\r\n            if (res.returnCode === '200') {\r\n              this.$message({\r\n                message: \"执行成功\",\r\n                type: 'success'\r\n              })\r\n              this.jumpStep();\r\n            } else {\r\n              this.$message({\r\n                message: res.returnMsg,\r\n                type: 'error'\r\n              })\r\n            }\r\n          })\r\n      },\r\n      jumpStep(){\r\n        this.currentStep++\r\n        this.firstShow = false\r\n        this.secondShow = true\r\n      },\r\n      lastStep(){\r\n        this.currentStep--\r\n        this.firstShow = true\r\n        this.secondShow = false\r\n      },\r\n      async queryTableNames() {\r\n        let res = await request({\r\n          url: \"/datalab/dataImport/showAnableTables\",\r\n          method: \"get\",\r\n          data: {}\r\n        });\r\n        if (res.returnCode === '200') {\r\n          this.secondForm.projectName = res.data.projectName;\r\n          this.secondForm.tableNames = res.data.tableNames;\r\n        }\r\n      },\r\n      previewFile(file) {\r\n        if (file.url){\r\n          window.location.href = file.url\r\n        }\r\n      },\r\n      beforeUpload(file){\r\n        if (file === null || file === undefined) {\r\n          this.$message.error('请选择文件')\r\n          return false\r\n        }\r\n        const limitBody = this.fileUploadLimit(file,this.fileType)\r\n        if (limitBody.limit) {\r\n          //错误提示了，重置文件\r\n          this.fileList = []\r\n          this.file = undefined\r\n          this.$message({\r\n            message: limitBody.error,\r\n            type: 'error'\r\n          })\r\n        }\r\n        return !limitBody.limit\r\n      },\r\n      //文件上传限制\r\n      fileUploadLimit(file,fileType){\r\n        const filePost = file.name.substring(file.name.lastIndexOf('.')+1)\r\n        const extension = fileType.findIndex(item => item.toLowerCase().indexOf(filePost.toLowerCase()) > -1)\r\n        //文件大小限定50kb\r\n        const isLimit = file.size / 1024  < this.fileSize\r\n        if (extension === -1){\r\n          const fileTypeStr = fileType.join(',')\r\n          return {\r\n            limit : true,\r\n            error : '仅支持上传' + fileTypeStr + '格式文件'\r\n          }\r\n        }\r\n        return {\r\n          limit : !isLimit,\r\n          error : '文件大小不能超过' + this.fileSize + 'kb'\r\n        }\r\n      },\r\n      handleExceed(files, fileList) {\r\n        this.$message.error('仅可上传1个文件')\r\n      },\r\n      //上传文件\r\n      handleImportFile(file) {\r\n        this.file = file.raw\r\n        //this.$refs.uploadButton.submit()\r\n      },\r\n      uploadFile(){\r\n        if (!this.beforeUpload(this.file))\r\n          return\r\n        if (this.secondForm.tableName == null || this.secondForm.tableName === \"\") {\r\n          this.$message.error(\"请选择导入表-表名\")\r\n          return\r\n        }\r\n        const formData = new FormData()\r\n        formData.append('file',this.file)\r\n        formData.append('tableName',this.secondForm.tableName)\r\n        formData.append('projectName',this.secondForm.projectName)\r\n        request({\r\n          url:'/datalab/dataImport/importCsvData',\r\n          method:'post',\r\n          headers:{'Content-Type':'multipart/form-data;charset=UTF-8'},\r\n          data:formData\r\n        }).then(res=>{\r\n          if (res.returnCode === '200') {\r\n            this.$message({\r\n              message: '导入成功',\r\n              type: 'success'\r\n            })\r\n\r\n            this.importDialogVisible = false\r\n            //this.queryPageList()\r\n          } else {\r\n            this.$message({\r\n              message: '导入失败，' + res.returnMsg,\r\n              type: 'error'\r\n            })\r\n          }\r\n        })\r\n      },\r\n      handleSuccess(res, file, fileList) {\r\n        this.$emit('on-success', this.fileList)\r\n      },\r\n    refreshData(){\r\n        this.queryTableNames()\r\n      }\r\n    },\r\n  mounted() {\r\n    this.queryTableNames();\r\n  }\r\n}\r\n",null]}