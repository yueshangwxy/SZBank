{"remainingRequest":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\eladmin-common\\src\\components\\Echarts\\Graph.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\eladmin-common\\src\\components\\Echarts\\Graph.vue","mtime":1649224866535},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649224862071},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1649224861568},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649224862071},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1649224877943}],"contextDependencies":[],"result":["//\n//\n//\n//\n\r\nimport echarts from 'echarts'\r\n\r\nrequire('echarts/theme/macarons') // echarts theme\r\nimport { debounce } from '../../utils'\r\n\r\nexport default {\r\n  props: {\r\n    className: {\r\n      type: String,\r\n      default: 'chart'\r\n    },\r\n    width: {\r\n      type: String,\r\n      default: '100%'\r\n    },\r\n    height: {\r\n      type: String,\r\n      default: '300px'\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      chart: null\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initChart()\r\n    this.__resizeHandler = debounce(() => {\r\n      if (this.chart) {\r\n        this.chart.resize()\r\n      }\r\n    }, 100)\r\n    window.addEventListener('resize', this.__resizeHandler)\r\n  },\r\n  beforeDestroy() {\r\n    if (!this.chart) {\r\n      return\r\n    }\r\n    window.removeEventListener('resize', this.__resizeHandler)\r\n    this.chart.dispose()\r\n    this.chart = null\r\n  },\r\n  methods: {\r\n    initChart() {\r\n      this.chart = echarts.init(this.$el, 'macarons')\r\n      const axisData = ['周一', '周二', '周三', '很长很长的周四', '周五', '周六', '周日']\r\n      const data = axisData.map(function(item, i) {\r\n        return Math.round(Math.random() * 1000 * (i + 1))\r\n      })\r\n      const links = data.map(function(item, i) {\r\n        return {\r\n          source: i,\r\n          target: i + 1\r\n        }\r\n      })\r\n      links.pop()\r\n      this.chart.setOption({\r\n        title: {\r\n          text: '笛卡尔坐标系上的 Graph'\r\n        },\r\n        tooltip: {},\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: axisData\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            type: 'graph',\r\n            layout: 'none',\r\n            coordinateSystem: 'cartesian2d',\r\n            symbolSize: 40,\r\n            label: {\r\n              normal: {\r\n                show: true\r\n              }\r\n            },\r\n            edgeSymbol: ['circle', 'arrow'],\r\n            edgeSymbolSize: [4, 10],\r\n            data: data,\r\n            links: links,\r\n            lineStyle: {\r\n              normal: {\r\n                color: '#2f4554'\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}