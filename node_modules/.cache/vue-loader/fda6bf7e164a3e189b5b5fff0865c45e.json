{"remainingRequest":"D:\\SZBank\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\SZBank\\src\\views\\indicators\\detailsView\\labelDetailsView.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\SZBank\\src\\views\\indicators\\detailsView\\labelDetailsView.vue","mtime":1655861359118},{"path":"D:\\SZBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\SZBank\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733},{"path":"D:\\SZBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\SZBank\\node_modules\\vue-loader\\lib\\index.js","mtime":1650418886580}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mixinsFunctions } from \"@/mixins/mixinsFunc\";\r\nexport default {\r\n  mixins: [mixinsFunctions],\r\n  data() {\r\n    return {\r\n      // basicinfo\r\n      basicinfo: {\r\n        labelName: \"\",\r\n        labelCode: \"\",\r\n        classifyCode: \"\",\r\n        classifyName: \"\",\r\n        stateCode: \"\",\r\n        fromCode: \"\",\r\n        invalidTime: \"\",\r\n        description: \"\",\r\n        businessCaliber: \"\",\r\n        catalogue1: \"\",\r\n        catalogue2: \"\",\r\n        catalogue1Name: \"\",\r\n        catalogue2Name: \"\",\r\n      },\r\n      detailsView: false,\r\n      id: \"\",\r\n      assetsState: \"\",\r\n      // 目录树\r\n      catalogueList: [],\r\n      cataValue: [],\r\n      basicInfoList: [],\r\n      basicInfoProp: [\r\n        {\r\n          prop: \"labelCode\",\r\n          label: \"标签编号\",\r\n          align: \"center\",\r\n        },\r\n        {\r\n          prop: \"classifyName\",\r\n          label: \"标签分类\",\r\n          align: \"center\",\r\n        },\r\n        {\r\n          prop: \"stateCode\",\r\n          label: \"标签状态\",\r\n          align: \"center\",\r\n        },\r\n        {\r\n          prop: \"fromCode\",\r\n          label: \"标签来源\",\r\n          align: \"center\",\r\n        },\r\n        {\r\n          prop: \"deptName\",\r\n          label: \"业务属主部门\",\r\n          align: \"center\",\r\n        },\r\n        {\r\n          prop: \"invalidTime\",\r\n          label: \"标签失效时间\",\r\n          type: \"needTrans\",\r\n          align: \"center\",\r\n        },\r\n        {\r\n          prop: \"description\",\r\n          label: \"标签描述\",\r\n          align: \"center\",\r\n        },\r\n        {\r\n          prop: \"businessCaliber\",\r\n          label: \"标签业务口径\",\r\n          align: \"center\",\r\n        },\r\n      ],\r\n      labelBgImg: require(\"../../../assets/labelBg.png\"),\r\n    };\r\n  },\r\n  computed: {},\r\n  methods: {\r\n    initData() {\r\n      if (this.$route.name === \"标签详情\") {\r\n        this.detailsView = true;\r\n      }\r\n      // 目录树\r\n      this.$api.getAllCatalogueList({}).then((res) => {\r\n        this.catalogueList = res.data;\r\n      });\r\n      // 数据\r\n      this.id = this.$route.query.id; // 通过路由传递id\r\n      this.$api\r\n        .getLabelById({\r\n          id: this.id,\r\n          isRecord: this.detailsView,\r\n        })\r\n        .then((res) => {\r\n          this.basicInfoList = [];\r\n          this.basicinfo = res;\r\n          this.cataValue = [];\r\n          // 发布状态\r\n          this.assetsState = this.basicinfo.assetsState;\r\n          this.basicInfoList.push(this.basicinfo || []);\r\n          // 返回的目录  -- 渲染\r\n          let temp = this.basicinfo.catalogues;\r\n          for (let key in temp) {\r\n            key = key.split(\"/\");\r\n            this.cataValue.push({ id: key });\r\n          }\r\n        });\r\n    },\r\n    confirmModify() {\r\n      let list = JSON.parse(JSON.stringify(this.cataValue));\r\n      list = list.map((item) => {\r\n        return (item = item.id.join(\"/\"));\r\n      });\r\n      let listSet = Array.from(new Set(list));\r\n      if (listSet.length !== list.length) {\r\n        this.$message.error(\"添加目录不能重复\");\r\n      } else {\r\n        this.$api\r\n          .updateAssetLabel({\r\n            id: this.id,\r\n            list: list,\r\n            assetsState: this.assetsState,\r\n          })\r\n          .then((res) => {\r\n            this.$message.success(\"修改成功!\");\r\n            this.closeThisPage();\r\n          });\r\n      }\r\n    },\r\n    handleChange(value) {\r\n      console.log(value);\r\n    },\r\n    deleteCatalogue(index) {\r\n      this.cataValue.splice(index, 1);\r\n    },\r\n    addCatalogue() {\r\n      if (this.cataValue.length > 4) {\r\n        this.$message.warning(\"最多添加5条目录\");\r\n      } else {\r\n        this.cataValue.push({\r\n          id: [],\r\n        });\r\n      }\r\n    },\r\n    // 失效时间转换\r\n    transInvalidTime(time) {\r\n      let invalidTime = time ? (time.indexOf(\"9999\") > -1 ? \"永久\" : time) : \"\";\r\n      return invalidTime;\r\n    },\r\n  },\r\n};\r\n",null]}