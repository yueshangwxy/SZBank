{"remainingRequest":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\code\\indicator\\Pncui-Indicator\\src\\views\\indicators\\dimension\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\code\\indicator\\Pncui-Indicator\\src\\views\\indicators\\dimension\\index.vue","mtime":1637656904927},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n// import crudIndDimension from '../../../api/indicators/indDimension'\r\nimport crudIndClassification, { getClassifications } from '@/api/indicators/indClassification'\r\nimport crudIndDimInfo, { getDimInfos } from '@/api/indicators/indDimInfo'\r\nimport crudIndDimValue, { getDimValues } from '@/api/indicators/indDimValue'\r\nimport CRUD, { presenter, header, form, crud } from '@crud/crud'\r\nimport rrOperation from '@crud/RR.operation'\r\nimport crudOperation from '@crud/CRUD.operation'\r\nimport udOperation from '@crud/UD.operation'\r\nimport pagination from '@crud/Pagination'\r\nimport { getValueListByTableAndColumn } from '@/api/indicators/indDimension'\r\nimport { getTableListById } from '@datasource/api/datasources/indDataTable'\r\nimport { getColumnListByDataSourceIdAndTableName } from '@datasource/api/datasources/indDataColumn'\r\nimport dimData from '../dimension/dimData'\r\nimport dimCategory from '../category/dimCategory'\r\nimport {validateStrLenHalfHundred, validateStrLenHundred} from \"@/utils/validator\";\r\n\r\n// crud交由presenter持有\r\nconst defaultCrud = CRUD({\r\n  title: '维度值管理',\r\n  url: crudIndDimValue.url,\r\n  sort: 'id,desc',\r\n  crudMethod: { ...crudIndDimValue.method }\r\n})\r\nconst defaultForm = { id: null, dimInfoId: null, lastLevelDimValueId: null, dimValueName: null, dimValueLevel: null,\r\n  crtUserCode: null, crtOrgCode: null, crtDate: null, updUserCode: null, updOrgCode: null, updDate: null }\r\nexport default {\r\n  name: 'IndClassification',\r\n  components: { pagination, crudOperation, rrOperation, udOperation, dimData, dimCategory },\r\n  mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\r\n  dicts: ['DIMENSION_CATEGORY', 'DIMENSION', 'LAST_LEVEL_DIMENSION_VALUE'],\r\n  data() {\r\n    return {\r\n      table: {\r\n        columns: {\r\n          id: 'hidden',\r\n          datasourceId: 'hidden',\r\n          nameColumn: 'hidden',\r\n          nameColumnDesc: 'hidden',\r\n          codeColumn: 'hidden',\r\n          codeColumnDesc: 'hidden',\r\n          alias: 'hidden',\r\n          pkFlag: 'hidden',\r\n          filterColumn: 'hidden',\r\n          filterValue: 'hidden'\r\n        }\r\n      },\r\n      tableData: [],\r\n      tableInfo: [],\r\n      tableDB: [],\r\n      DictDB: [],\r\n      selectData: [],\r\n      screenData: [],\r\n      showDimInfo: false,\r\n      permission: {\r\n        add: ['admin', 'indDimension:add'],\r\n        edit: ['admin', 'indDimension:edit'],\r\n        del: ['admin', 'indDimension:del'],\r\n        showAllDimCode: ['admin', 'indDimension:showAllDimCode'],\r\n        details: ['admin', 'indDimension:details']\r\n      },\r\n      rules: {\r\n        dimCode: [\r\n          { required: true, message: '维度编号不能为空', trigger: 'blur' }\r\n        ],\r\n        dimName: [\r\n          { required: true, message: '维度名称不能为空', trigger: 'blur' }\r\n        ],\r\n        tableName: [\r\n          { required: true, message: '维表表名称不能为空', trigger: 'blur' }\r\n        ],\r\n        codeColumn: [\r\n          { required: true, message: '代码字段不能为空', trigger: 'blur' }\r\n        ],\r\n        codeColumnDesc: [\r\n          { required: true, message: '代码字段描述不能为空', trigger: 'blur' }\r\n        ],\r\n        nameColumn: [\r\n          { required: true, message: '显示字段不能为空', trigger: 'blur' }\r\n        ],\r\n        nameColumnDesc: [\r\n          { required: true, message: '显示字段描述不能为空', trigger: 'blur' }\r\n        ]\r\n      },\r\n      showIndDimensionAdd: false,\r\n      category: {\r\n        id: null,\r\n        categoryName: null//分类名称\r\n      },\r\n      dimension: {\r\n        id: null,\r\n        classificationId: null,// 所属分类\r\n        categoryName: null,// 指标维度名称\r\n        remarks: null// 备注\r\n      },\r\n      dimensionRules: {\r\n        categoryName: [\r\n          { required: true, message: '指标维度名称不能为空', trigger: 'blur' },\r\n          { validator: validateStrLenHundred, trigger: 'blur' }\r\n        ],\r\n        classificationId: [\r\n          {required: true,message: '请选择所属分类',trigger: 'change'}\r\n        ],\r\n        remarks: [\r\n          { validator: validateStrLenHundred, trigger: 'blur' }\r\n        ]\r\n      },\r\n      showIndDimensionValueAdd: false,\r\n      dimensionValue: {\r\n        id: null,\r\n        dimInfoId: null,// 所属维度\r\n        lastLevelDimValueId: null,// 上级维度值\r\n        categoryName: null,// 指标维度值\r\n        dimLevel: null// 维度树层级\r\n      },\r\n      dimensionValueRules: {\r\n        categoryName: [\r\n          { required: true, message: '指标维度值不能为空', trigger: 'blur' },\r\n          { validator: validateStrLenHalfHundred, trigger: 'blur' }\r\n        ]\r\n      },\r\n      categoryRules: {\r\n        categoryName: [\r\n          { required: true, message: '指标维度分类名称不能为空', trigger: 'blur' }\r\n        ]\r\n      },\r\n      indDimensionDialog: '指标维度名称-新增',\r\n      indDimensionValueDialog: '维度值-新增',\r\n      indDimensionCateDialog: '指标维度分类-新增',\r\n      showIndDimensionCateAdd: false,\r\n      classificationArr: [],\r\n      dimInfoArr: [],\r\n      dimValueArr: [],\r\n      lastLevelDimValueFlag: false,\r\n      dimLevel: null\r\n    }\r\n  },\r\n  created() {\r\n    // this.$nextTick(() => {\r\n    //   getAllSource().then(data => {\r\n    //   // console.log(\"=====getAllSource====>>>>\",data)\r\n    //     if (data.code === 0) {\r\n    //       this.tableDB = data.data\r\n    //     } else {\r\n    //       this.$message.error({\r\n    //         message: '获取数据失败'\r\n    //       })\r\n    //     }\r\n    //   })\r\n    //   getTableListById('all').then(data => {\r\n    //     if (data.code === 0) {\r\n    //       this.DictDB = data.data\r\n    //     } else {\r\n    //       this.$message.error({\r\n    //         message: '获取数据失败'\r\n    //       })\r\n    //     }\r\n    //   })\r\n    // })\r\n    this.initTreeData()\r\n  },\r\n  methods: {\r\n    initTreeData() {\r\n      //获取所有维度分类树\r\n      getClassifications({size: 100, page: 0}).then(data => {\r\n        this.$refs.dimCategory.treeData[0].children = data.data.records\r\n        this.classificationArr = data.data.records\r\n      })\r\n      getDimInfos( {size: 100, page: 0}).then(data => {\r\n        this.dimInfoArr = data.data.records\r\n      })\r\n      getDimValues( {size: 100, page: 0}).then(data => {\r\n        this.dimValueArr = data.data.records\r\n      })\r\n    },\r\n    // 获取数据前设置好接口地址\r\n    [CRUD.HOOK.beforeRefresh]() {\r\n      return true\r\n    },\r\n    [CRUD.HOOK.beforeToAdd]() {\r\n      this.tableData = []\r\n      this.tableInfo = []\r\n      this.form.datasourceId = 'local'\r\n      getTableListById(this.form.datasourceId).then(data => {\r\n        if (data.code === 0) {\r\n          this.tableData = data.data\r\n        } else {\r\n          this.clearFrom()\r\n        }\r\n      })\r\n    },\r\n    [CRUD.HOOK.beforeToEdit]() {\r\n       getTableListById(this.form.datasourceId).then(data => {\r\n         // console.log(\"====getTables====>>>>>\",data)\r\n         if (data.code === 0) {\r\n           this.tableData = data.data\r\n         } else {\r\n           this.tableData = []\r\n         }\r\n       })\r\n       getColumnListByDataSourceIdAndTableName(this.form.datasourceId, this.form.tableName).then(data => {\r\n         // console.log(\"========getColumns====>>>>\",data)\r\n         if (data.code === 0) {\r\n           if (data.data.length === 0) {\r\n             this.$message.error({\r\n               message: '表' + this.form.tableName + '不存在'\r\n             })\r\n           }\r\n           this.tableInfo = data.data\r\n         } else {\r\n           this.tableInfo = []\r\n         }\r\n       })\r\n       if (this.form.filterColumn !== null && this.form.filterColumn !== ''){\r\n        const temp = this.form.filterValue\r\n        let tempArray = []\r\n        if ((temp !== null && temp !== '') && temp.indexOf(',') !== -1) {\r\n          tempArray = temp.split(',')\r\n        } else if (temp !== null && temp !== '') {\r\n          tempArray.push(temp)\r\n        }\r\n        this.form.filterValue = tempArray\r\n        getValueListByTableAndColumn(this.form.tableName, this.form.filterColumn, this.form.datasourceId).then(data => {\r\n         if (data.code === 0) {\r\n           this.screenData = data.data\r\n         } else {\r\n           this.$message.error({\r\n             message: '表' + this.form.tableName + '或列' + this.form.filterColumn + '不存在'\r\n           })\r\n         }\r\n        })\r\n       }\r\n\r\n    },\r\n    [CRUD.HOOK.beforeSubmit]() {\r\n       if(this.form.filterValue !== null && this.form.filterValue !== '') {\r\n        this.form.filterValue = String(this.form.filterValue)\r\n       }\r\n    },\r\n    getTableInfo() {\r\n      this.form.nameColumn = ''\r\n      this.form.nameColumnDesc = ''\r\n      this.form.codeColumn = ''\r\n      this.form.codeColumnDesc = ''\r\n      this.form.filterColumn = ''\r\n      this.form.filterValue = ''\r\n      getColumnListByDataSourceIdAndTableName(this.form.datasourceId, this.form.tableName).then(data => {\r\n        // console.log(\"========getColumns====>>>>\",data)\r\n        if (data.code === 0) {\r\n          if (data.data.length === 0) {\r\n            this.$message.error({\r\n              message: '表' + this.form.tableName + '不存在'\r\n            })\r\n          }\r\n          this.tableInfo = data.data\r\n        } else {\r\n          this.tableInfo = []\r\n        }\r\n      })\r\n    },\r\n    getListData() {\r\n      this.form.filterValue = ''\r\n      if(this.form.filterColumn !== null && this.form.filterColumn !== ''){\r\n        getValueListByTableAndColumn(this.form.tableName, this.form.filterColumn, this.form.datasourceId).then(data => {\r\n          if (data.code === 0) {\r\n            this.screenData = data.data\r\n          } else {\r\n            this.$message.error({\r\n              message: '表' + this.form.tableName + '或列' + this.form.filterColumn + '不存在'\r\n            })\r\n          }\r\n        })\r\n      }\r\n    },\r\n    setColumnDesc() {\r\n      this.tableInfo.forEach(row => {\r\n        if (this.form.nameColumn === row.columnName) {\r\n          this.form.nameColumnDesc = row.columnDesc\r\n        }\r\n      })\r\n    },\r\n    setCodeDesc() {\r\n      this.tableInfo.forEach(row => {\r\n        if (this.form.codeColumn === row.columnName) {\r\n          this.form.codeColumnDesc = row.columnDesc\r\n        }\r\n      })\r\n    },\r\n    getTableByDB() {\r\n      this.clearFrom()\r\n      getTableListById(this.form.datasourceId).then(data => {\r\n        if (data.code === 0) {\r\n          this.tableData = data.data\r\n        } else {\r\n          this.clearFrom()\r\n        }\r\n      })\r\n    },\r\n    clearFrom() {\r\n      this.form.nameColumn = ''\r\n      this.form.nameColumnDesc = ''\r\n      this.form.tableName = ''\r\n      this.form.codeColumn = ''\r\n      this.form.codeColumnDesc = ''\r\n      this.form.filterColumn = ''\r\n      this.form.filterValue = ''\r\n      this.tableData = []\r\n      this.tableInfo = []\r\n    },\r\n    formatId(row) {\r\n      let name = ''\r\n      this.tableDB.forEach(row1 => {\r\n        if (row1.id === row.datasourceId) {\r\n          name = row1.datasourceName\r\n        }\r\n      })\r\n      return name\r\n    },\r\n    formatTableName(row) {\r\n      let name = ''\r\n      this.DictDB.forEach(row1 => {\r\n        if (row1.tableName === row.tableName) {\r\n          name = row1.tableDesc\r\n        }\r\n      })\r\n      return name\r\n    },\r\n    handleInfo(row) {\r\n      this.form.id = row.id\r\n      this.form.dimCode = row.dimCode\r\n      this.form.datasourceId = row.datasourceId\r\n      this.form.dimName = row.dimName\r\n      this.form.tableName = row.tableName\r\n      this.form.codeColumn = row.codeColumn\r\n      this.form.codeColumnDesc = row.codeColumnDesc\r\n      this.form.nameColumn = row.nameColumn\r\n      this.form.nameColumnDesc = row.nameColumnDesc\r\n      this.form.pid = row.pid\r\n      this.form.dimLevel = row.dimLevel\r\n      this.form.filterColumn = row.filterColumn\r\n      this.form.filterValue = row.filterValue\r\n      this.form.alias = row.alias\r\n      this.form.pkFlag = row.pkFlag\r\n      this.form.crtUserCode = row.crtUserCode\r\n      this.form.crtOrgCode = row.crtOrgCode\r\n      this.form.crtDate = this.parseTime(row.crtDate)\r\n      this.form.updUserCode = row.updUserCode\r\n      this.form.updOrgCode = row.updOrgCode\r\n      this.form.updDate = this.parseTime(row.updDate)\r\n      this.showDimInfo = true\r\n    },\r\n    showAllDimCode(data) {\r\n      console.log(\"========showAllDimCode====>>>>\",data)\r\n      const _this = this.$refs.dimData\r\n      _this.query.tableName = data.tableName\r\n      _this.query.columnDimCode = data.dimCode\r\n      _this.query.columnDimName = data.dimName\r\n      _this.query.columnCodeColumn = data.codeColumn\r\n      _this.query.columnNameColumn = data.nameColumn\r\n      _this.query.columnDimLevel = data.dimLevel\r\n      _this.query.columnFilterColumn = data.filterColumn\r\n      _this.query.columnPid = data.pid\r\n      _this.tCode = data.codeColumnDesc\r\n      _this.tName = data.nameColumnDesc\r\n      const temp = String(data.filterValue)\r\n      _this.query.queryFilter = temp\r\n      if ((temp !== null && temp !== '') && temp.indexOf(',') !== -1) {\r\n        _this.filterValue = temp.split(',')\r\n      } else {\r\n        _this.filterValue.push(temp)\r\n      }\r\n      _this.searchDimData()\r\n      _this.showAllDim = true\r\n    },\r\n    handleCategoryClick(data) {\r\n      console.log(\"handleCategoryClick =========== \" + data)\r\n      this.dimLevel = data.dimLevel\r\n      if(data.dimLevel == 0) {\r\n        this.query.dimInfoId = null;\r\n        defaultCrud.toQuery();\r\n      }else if (data.dimLevel == 1) {\r\n        this.dimension.classificationId = data.id\r\n      } else if (data.dimLevel == 2) {\r\n        //用来配置维度值\r\n        this.dimensionValue.dimInfoId = data.id\r\n        this.dimensionValue.id = null\r\n\r\n        //用来修改维度赋值\r\n        this.dimension.categoryName = data.categoryName\r\n        this.dimension.id = data.id\r\n        this.dimension.classificationId = data.classificationId\r\n        this.dimension.remarks = data.remarks\r\n      } else if (data.dimLevel == 3 || data.dimLevel == 4 || data.dimLevel == 5) {\r\n        this.lastLevelDimValueFlag = data.dimLevel == 3;\r\n        this.dimensionValue.categoryName = data.categoryName\r\n        this.dimensionValue.id = data.id\r\n        this.dimensionValue.dimInfoId = data.dimInfoId\r\n        this.dimensionValue.lastLevelDimValueId = data.lastLevelDimValueId\r\n        this.dimensionValue.dimLevel = data.dimLevel\r\n      }\r\n      if(data.dimLevel == 1 || data.dimLevel == 2 ) {\r\n        this.query.dimInfoId = data.id\r\n        defaultCrud.toQuery();\r\n      }\r\n\r\n    },\r\n    // 关闭维度新增弹框\r\n    closeIndDimensionAddDialog() {\r\n      this.showIndDimensionAdd = false\r\n    },\r\n    // 确认提交新增维度\r\n    commitDim() {\r\n      this.crud.findVM('form').$refs['form'].validate(valid => {\r\n        if (!valid) {\r\n          return\r\n        }\r\n        if (this.dimension.id == null) {\r\n          crudIndDimInfo.crud.add(this.dimension).then(data => {\r\n            if (data.code && data.code !== 0) {\r\n              this.$notify({\r\n                title: data.msg,\r\n                type: 'error',\r\n                duration: 2500\r\n              })\r\n              //this.showIndDimensionAdd = false\r\n            } else {\r\n              this.$notify({\r\n                title: '新增成功',\r\n                type: 'success',\r\n                duration: 2500\r\n              })\r\n              this.initTreeData()\r\n              this.showIndDimensionAdd = false\r\n            }\r\n          })\r\n        } else {\r\n          crudIndDimInfo.crud.edit(this.dimension).then(data => {\r\n            if (data.code && data.code !== 0) {\r\n              this.$notify({\r\n                title: data.msg,\r\n                type: 'error',\r\n                duration: 2500\r\n              })\r\n             // this.showIndDimensionAdd = false\r\n            } else {\r\n              this.$notify({\r\n                title: '编辑成功',\r\n                type: 'success',\r\n                duration: 2500\r\n              })\r\n              this.initTreeData()\r\n              this.showIndDimensionAdd = false\r\n            }\r\n          })\r\n        }\r\n      })\r\n\r\n    },\r\n    // 关闭维度值新增弹框\r\n    closeIndDimensionValueAddDialog() {\r\n      this.showIndDimensionValueAdd = false\r\n    },\r\n    // 确认提交新增维度值\r\n    commitDimValue() {\r\n      this.crud.findVM('form').$refs['form'].validate(valid => {\r\n        if (!valid) {\r\n          return\r\n        }\r\n        if (this.dimensionValue.id == null) {\r\n          crudIndDimValue.crud.add(this.dimensionValue).then(data => {\r\n            if (data.code && data.code !== 0) {\r\n              this.$notify({\r\n                title: data.msg,\r\n                type: 'error',\r\n                duration: 2500\r\n              })\r\n              //this.showIndDimensionValueAdd = false\r\n            } else {\r\n              this.$notify({\r\n                title: '新增成功',\r\n                type: 'success',\r\n                duration: 2500\r\n              })\r\n              this.initTreeData()\r\n              this.showIndDimensionValueAdd = false\r\n            }\r\n          })\r\n        } else {\r\n          crudIndDimValue.crud.edit(this.dimensionValue).then(data => {\r\n            if (data.code && data.code !== 0) {\r\n              this.$notify({\r\n                title: data.msg,\r\n                type: 'error',\r\n                duration: 2500\r\n              })\r\n              //this.showIndDimensionValueAdd = false\r\n            } else {\r\n              this.$notify({\r\n                title: '编辑成功',\r\n                type: 'success',\r\n                duration: 2500\r\n              })\r\n              this.initTreeData()\r\n              this.showIndDimensionValueAdd = false\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    // 新增\r\n    addDimension(data) {\r\n      if (data.categoryName === '维度分类') {\r\n        //置空输入项\r\n        this.category.categoryName = null\r\n        this.category.id = null\r\n        this.indDimensionCateDialog = '指标维度分类-新增'\r\n        this.showIndDimensionCateAdd = true\r\n      } else if (data.dimLevel == 1 || this.dimLevel == 1 || this.dimLevel == 2) {\r\n        // this.dimension.classificationId = data.id\r\n        if (this.dimension.id != null && this.dimLevel == 2) {\r\n          this.indDimensionDialog = '指标维度名称-修改'\r\n          this.showIndDimensionAdd = true\r\n        } else {\r\n          this.indDimensionDialog = '指标维度名称-新增'\r\n          this.dimension.categoryName = null\r\n          this.dimension.remarks = null\r\n          this.dimension.id = null\r\n          this.showIndDimensionAdd = true\r\n        }\r\n      }\r\n    },\r\n    // 新增维度值\r\n    addDimensionValue(data) {\r\n    if (data.dimLevel == 2 || this.dimLevel == 2) {\r\n        this.indDimensionValueDialog = '维度值-新增'\r\n        // this.dimensionValue.dimInfoId = data.id\r\n        this.dimensionValue.categoryName = null\r\n        this.dimensionValue.dimLevel = null\r\n        this.dimensionValue.lastLevelDimValueId = null\r\n        this.dimensionValue.id = null\r\n        this.showIndDimensionValueAdd = true\r\n        this.lastLevelDimValueFlag = true\r\n      } else if (data.dimLevel == 3 || data.dimLevel == 4 || this.dimLevel == 3 || this.dimLevel == 4 || this.dimLevel == 5) {\r\n        this.indDimensionValueDialog = '维度值-修改'\r\n        this.showIndDimensionValueAdd = true\r\n      }\r\n    },\r\n    handleRemove(data) {\r\n      //处理删除，level为1表示指标维度分类的操作\r\n      if (data.dimLevel == 1) {\r\n        const $this = this\r\n        this.$confirm('确定要删除该节点吗?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          if (data.children.length === 0 ) {\r\n            crudIndClassification.crud.del([data.id]).then((res) => {\r\n              if (res.code !== 0) {\r\n                $this.$message({\r\n                  type: 'error',\r\n                  message: '删除失败,' + res.msg\r\n                })\r\n              } else {\r\n                $this.$message({\r\n                  type: 'success',\r\n                  message: '删除成功 '\r\n                })\r\n                this.initTreeData()\r\n              }\r\n            }).catch(() => {\r\n              $this.$message({\r\n                type: 'error',\r\n                message: '删除失败 '\r\n              })\r\n            })\r\n          } else {\r\n            $this.$message({\r\n              type: 'error',\r\n              message: '该分类已被引用，不可删除'\r\n            })\r\n          }\r\n        })\r\n      } else if (data.dimLevel == 2) {\r\n        const $this = this\r\n        this.$confirm('确定要删除该节点吗?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          if (data.children.length === 0 ) {\r\n            crudIndDimInfo.crud.del([data.id]).then((res) => {\r\n              if (res.code !== 0) {\r\n                $this.$message({\r\n                  type: 'error',\r\n                  message: '删除失败,' + res.msg\r\n                })\r\n              } else {\r\n                $this.$message({\r\n                  type: 'success',\r\n                  message: '删除成功 '\r\n                })\r\n                this.initTreeData()\r\n              }\r\n            }).catch(() => {\r\n              $this.$message({\r\n                type: 'error',\r\n                message: '删除失败 '\r\n              })\r\n            })\r\n          } else {\r\n            $this.$message({\r\n              type: 'error',\r\n              message: '当前节点下有子节点，不能删除'\r\n            })\r\n          }\r\n        })\r\n      } else if (data.dimLevel == 3 || data.dimLevel == 4 || data.dimLevel == 5) {\r\n        const $this = this\r\n        this.$confirm('确定要删除该节点吗?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          crudIndDimValue.crud.del([data.id]).then((res) => {\r\n            if (res.code !== 0) {\r\n              $this.$message({\r\n                type: 'error',\r\n                message: '删除失败,' + res.msg\r\n              })\r\n            } else {\r\n              $this.$message({\r\n                type: 'success',\r\n                message: '删除成功 '\r\n              })\r\n              this.initTreeData()\r\n            }\r\n          }).catch(() => {\r\n            $this.$message({\r\n              type: 'error',\r\n              message: '删除失败 '\r\n            })\r\n          })\r\n        })\r\n      }\r\n    },\r\n    handleEdit(data) {\r\n      if (data.dimLevel == 1) {\r\n        this.indDimensionCateDialog = '指标维度分类名称-编辑'\r\n        this.category.categoryName = data.categoryName\r\n        this.category.id = data.id\r\n        this.showIndDimensionCateAdd = true\r\n      } else if (data.dimLevel == 2) {\r\n        this.indDimensionDialog = '指标维度名称-编辑'\r\n        this.dimension.categoryName = data.categoryName\r\n        this.dimension.id = data.id\r\n        this.dimension.classificationId = data.classificationId\r\n        this.dimension.remarks = data.remarks\r\n        this.showIndDimensionAdd = true\r\n      } else if (data.dimLevel == 3) {\r\n        this.indDimensionValueDialog = '维度值-编辑'\r\n        this.dimensionValue.categoryName = data.categoryName\r\n        this.dimensionValue.id = data.id\r\n        this.dimensionValue.lastLevelDimValueId = data.lastLevelDimValueId\r\n        this.dimensionValue.dimInfoId = data.dimInfoId\r\n        this.showIndDimensionValueAdd = true\r\n        //上级维度值不能选中\r\n        this.lastLevelDimValueFlag = true\r\n      } else if (data.dimLevel == 4 || data.dimLevel == 5) {\r\n        this.indDimensionValueDialog = '维度值-编辑'\r\n        this.dimensionValue.categoryName = data.categoryName\r\n        this.dimensionValue.id = data.id\r\n        this.dimensionValue.lastLevelDimValueId = data.lastLevelDimValueId\r\n        this.dimensionValue.dimInfoId = data.dimInfoId\r\n        this.showIndDimensionValueAdd = true\r\n      }\r\n    },\r\n    closeIndDimensionCateAddDialog() {\r\n      this.showIndDimensionCateAdd = false\r\n    },\r\n    //新增指标维度分类提交\r\n    commitDimCate() {\r\n      if (this.category.id == null) {\r\n        crudIndClassification.crud.add(this.category).then(data => {\r\n          if (data.code && data.code !== 0) {\r\n            this.$notify({\r\n              title: '新增失败',\r\n              type: 'error',\r\n              duration: 2500\r\n            })\r\n            this.showIndDimensionCateAdd = false\r\n          } else {\r\n            this.$notify({\r\n              title: '新增成功',\r\n              type: 'success',\r\n              duration: 2500\r\n            })\r\n            this.initTreeData()\r\n            this.showIndDimensionCateAdd = false\r\n          }\r\n        })\r\n      } else {\r\n        crudIndClassification.crud.edit(this.category).then(data => {\r\n          if (data.code && data.code !== 0) {\r\n            this.$notify({\r\n              title: '编辑失败',\r\n              type: 'error',\r\n              duration: 2500\r\n            })\r\n            this.showIndDimensionCateAdd = false\r\n          } else {\r\n            this.$notify({\r\n              title: '编辑成功',\r\n              type: 'success',\r\n              duration: 2500\r\n            })\r\n            this.initTreeData()\r\n            this.showIndDimensionCateAdd = false\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}