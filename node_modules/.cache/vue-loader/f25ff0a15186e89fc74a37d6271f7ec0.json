{"remainingRequest":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\eladmin-common\\src\\views\\tools\\storage\\qiniu\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\eladmin-common\\src\\views\\tools\\storage\\qiniu\\index.vue","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport crudQiNiu from '../../../../api/tools/qiniu'\nimport { mapGetters } from 'vuex'\nimport { getToken } from '../../../../utils/auth'\nimport eForm from './form'\nimport CRUD, { presenter, header, crud } from '../../../../components/Crud/crud'\nimport rrOperation from '../../../../components/Crud/RR.operation'\nimport crudOperation from '../../../../components/Crud/CRUD.operation'\nimport pagination from '../../../../components/Crud/Pagination'\n\n// crud交由presenter持有\nconst defaultCrud = CRUD({ title: '七牛云文件', url: 'api/qiNiuContent', crudMethod: { ...crudQiNiu }})\nexport default {\n  components: { eForm, pagination, crudOperation, rrOperation },\n  mixins: [presenter(defaultCrud), header(), crud()],\n  data() {\n    return {\n      permission: {\n        del: ['admin', 'storage:del']\n      },\n      title: '文件', dialog: false,\n      icon: 'el-icon-refresh',\n      url: '', headers: { 'Authorization': getToken() },\n      dialogImageUrl: '', dialogVisible: false, fileList: [], files: [], newWin: null\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'qiNiuUploadApi'\n    ])\n  },\n  watch: {\n    url(newVal, oldVal) {\n      if (newVal && this.newWin) {\n        this.newWin.sessionStorage.clear()\n        this.newWin.location.href = newVal\n        // 重定向后把url和newWin重置\n        this.url = ''\n        this.newWin = null\n      }\n    }\n  },\n  created() {\n    this.crud.optShow.add = false\n    this.crud.optShow.edit = false\n  },\n  methods: {\n    // 七牛云配置\n    doConfig() {\n      const _this = this.$refs.form\n      _this.init()\n      _this.dialog = true\n    },\n    handleSuccess(response, file, fileList) {\n      const uid = file.uid\n      const id = response.id\n      this.files.push({ uid, id })\n    },\n    handleBeforeRemove(file, fileList) {\n      for (let i = 0; i < this.files.length; i++) {\n        if (this.files[i].uid === file.uid) {\n          crudQiNiu.del([this.files[i].id]).then(res => {})\n          return true\n        }\n      }\n    },\n    handlePictureCardPreview(file) {\n      this.dialogImageUrl = file.url\n      this.dialogVisible = true\n    },\n    // 刷新列表数据\n    doSubmit() {\n      this.fileList = []\n      this.dialogVisible = false\n      this.dialogImageUrl = ''\n      this.dialog = false\n      this.crud.toQuery()\n    },\n    // 监听上传失败\n    handleError(e, file, fileList) {\n      const msg = JSON.parse(e.message)\n      this.crud.notify(msg.message, CRUD.NOTIFICATION_TYPE.ERROR)\n    },\n    // 下载文件\n    download(id) {\n      this.downloadLoading = true\n      // 先打开一个空的新窗口，再请求\n      this.newWin = window.open()\n      crudQiNiu.download(id).then(res => {\n        this.downloadLoading = false\n        this.url = res.url\n      }).catch(err => {\n        this.downloadLoading = false\n        console.log(err.response.data.message)\n      })\n    },\n    // 同步数据\n    synchronize() {\n      this.icon = 'el-icon-loading'\n      crudQiNiu.sync().then(res => {\n        this.icon = 'el-icon-refresh'\n        this.$message({\n          showClose: true,\n          message: '数据同步成功',\n          type: 'success',\n          duration: 1500\n        })\n        this.crud.toQuery()\n      }).catch(err => {\n        this.icon = 'el-icon-refresh'\n        console.log(err.response.data.message)\n      })\n    }\n  }\n}\n",null]}