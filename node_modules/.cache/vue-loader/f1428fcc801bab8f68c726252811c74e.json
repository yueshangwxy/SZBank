{"remainingRequest":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DataAssetPlatform\\Pncui-Ind\\src\\views\\indicators\\dimension\\dimData.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\src\\views\\indicators\\dimension\\dimData.vue","mtime":1647932070290},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647917124586},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1647917124178},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647917124586},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1647917137429}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport crudIndDimensionData, {getDimTree} from '../../../api/indicators/indDimensionData'\nimport CRUD, { presenter, header, form, crud } from '@crud/crud'\nimport rrOperation from '@crud/RR.operation'\nimport crudOperation from '@crud/CRUD.operation'\nimport udOperation from '@crud/UD.operation'\nimport pagination from '@crud/Pagination'\n\n// crud交由presenter持有\nconst defaultCrud = CRUD({\n  title: '维度公共数据',\n  url: crudIndDimensionData.url,\n  sort: 'id,desc',\n  crudMethod: { ...crudIndDimensionData.crud }\n})\nconst defaultForm = {\n  id: null,\n  typeCode: null,\n  typeName: null,\n  dimCode: null,\n  dimName: null,\n  dimLevel: null,\n  parentDimCode: null,\n  parentDimName: null,\n  crtUserCode: null,\n  crtOrgCode: null,\n  crtDate: null,\n  updUserCode: null,\n  updOrgCode: null,\n  updDate: null,\n  tableName: null,\n  columnDimCode: null,\n  columnDimName: null,\n  columnCodeColumn: null,\n  columnNameColumn: null,\n  columnDimLevel: null,\n  columnFilterColumn: null,\n  columnPid: null,\n  queryFilter: null\n}\nexport default {\n  name: 'IndDimensionData',\n  components: { pagination, crudOperation, rrOperation, udOperation },\n  mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\n  data() {\n    return {\n      table: {\n        columns: {\n          id: 'hidden'\n        }\n      },\n      showAllDim: false,\n      showPagination: false,\n      filterValue: [],\n      parentDimCode: null,\n      typeCode: null,\n      typeName: null,\n      dimLevel: null,\n      tCode: null,\n      tName: null\n    }\n  },\n  created() {\n  },\n  methods: {\n    // 获取数据前设置好接口地址\n    [CRUD.HOOK.beforeRefresh]() {\n      return false\n    },\n    getRowKeys: function(row) {\n      if (row.children !== null) {\n        return row.typeCode\n      } else {\n        return row.typeCode + String(Math.floor(Math.random()*10000))\n      }\n    },\n    searchDimData() {\n      const pid = this.query.columnPid\n      if (pid === null || pid === '') {\n         this.crud.page.page = 1\n         CRUD.HOOK.beforeRefresh = true\n         this.query.parentDimCode = this.parentDimCode\n         this.query.typeCode = this.typeCode\n         this.query.typeName = this.typeName\n         this.query.dimLevel = this.dimLevel\n         this.showPagination = false\n         this.crud.refresh()\n      } else {\n        this.showPagination = true\n        const params = {\n          columnCodeColumn: this.query.columnCodeColumn,\n          columnNameColumn: this.query.columnNameColumn,\n          columnPid: this.query.columnPid,\n          columnDimLevel: this.query.columnDimLevel,\n          columnFilterColumn: this.query.columnFilterColumn,\n          parentDimCode: this.parentDimCode,\n          typeCode: this.typeCode,\n          typeName: this.typeName,\n          queryFilter: this.query.queryFilter,\n          tableName: this.query.tableName,\n        }\n         getDimTree(params).then(data => {\n           if (data.code === 0) {\n             this.crud.data = data.data\n             this.crud.page.total = data.data.length\n           } else {\n             this.$message.error({\n               message: '获取数据失败'\n             })\n           }\n         })\n      }\n    },\n    closeDialog() {\n      this.typeCode = null\n      this.typeName = null\n      this.parentDimCode = null\n      this.dimLevel = null\n      this.filterValue = []\n      this.crud.data = []\n    },\n    resetQuery() {\n      this.typeCode = null\n      this.typeName = null\n      this.parentDimCode = null\n      const pid = this.query.columnPid\n      if (pid === null || pid === '') {\n        this.crud.page.page = 1\n        this.dimLevel = null\n        this.query.typeCode = null\n        this.query.typeName = null\n        this.query.parentDimCode = null\n        this.query.dimLevel = null\n        // this.query.parentDimName = null\n        this.showPagination = false\n        this.crud.refresh()\n      } else {\n        this.showPagination = true\n        const params = {\n          columnCodeColumn: this.query.columnCodeColumn,\n          columnNameColumn: this.query.columnNameColumn,\n          columnPid: this.query.columnPid,\n          columnDimLevel: this.query.columnDimLevel,\n          columnFilterColumn: this.query.columnFilterColumn,\n          parentDimCode: this.parentDimCode,\n          queryFilter: this.query.queryFilter,\n          tableName: this.query.tableName,\n        }\n        getDimTree(params).then(data => {\n          if (data.code === 0) {\n            this.crud.data = data.data\n            this.crud.page.total = data.data.length\n          } else {\n            this.$message.error({\n              message: '获取数据失败'\n            })\n          }\n        })\n      }\n\n\n    }\n  }\n}\n",null]}