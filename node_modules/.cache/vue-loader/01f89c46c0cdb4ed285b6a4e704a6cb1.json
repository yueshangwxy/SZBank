{"remainingRequest":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\eladmin-common\\src\\views\\system\\user\\center.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\eladmin-common\\src\\views\\system\\user\\center.vue","mtime":1641383749690},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters } from 'vuex'\r\nimport updatePass from './center/updatePass'\r\nimport updateEmail from './center/updateEmail'\r\nimport { getToken } from '../../../utils/auth'\r\nimport store from '../../../store'\r\nimport { isvalidPhone } from '../../../utils/validate'\r\nimport { parseTime } from '../../../utils/index'\r\nimport crud from '../../../mixins/crud'\r\nimport { editUser } from '../../../api/system/user'\r\nimport Avatar from '../../../assets/images/avatar.png'\r\nexport default {\r\n  name: 'Center',\r\n  components: { updatePass, updateEmail },\r\n  mixins: [crud],\r\n  data() {\r\n    // 自定义验证\r\n    const validPhone = (rule, value, callback) => {\r\n      if (!value) {\r\n        callback(new Error('请输入电话号码'))\r\n      } else if (!isvalidPhone(value)) {\r\n        callback(new Error('请输入正确的11位手机号码'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      Avatar: Avatar,\r\n      activeName: 'first',\r\n      saveLoading: false,\r\n      headers: {\r\n        'Authorization': getToken()\r\n      },\r\n      form: {},\r\n      rules: {\r\n        nickName: [\r\n          { required: true, message: '请输入用户昵称', trigger: 'blur' },\r\n          { min: 2, max: 20, message: '长度在 2 到 20 个字符', trigger: 'blur' }\r\n        ],\r\n        phone: [\r\n          { required: true, trigger: 'blur', validator: validPhone }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'user',\r\n      'updateAvatarApi',\r\n      'baseApi'\r\n    ])\r\n  },\r\n  created() {\r\n    this.form = { id: this.user.id, nickName: this.user.nickName, sex: this.user.sex, phone: this.user.phone }\r\n    store.dispatch('GetInfo').then(() => {})\r\n  },\r\n  methods: {\r\n    parseTime,\r\n    handleClick(tab, event) {\r\n      if (tab.name === 'second') {\r\n        this.init()\r\n      }\r\n    },\r\n    beforeInit() {\r\n      this.url = 'api/logs/user'\r\n      return true\r\n    },\r\n    handleSuccess(response, file, fileList) {\r\n      this.$notify({\r\n        title: '头像修改成功',\r\n        type: 'success',\r\n        duration: 2500\r\n      })\r\n      store.dispatch('GetInfo').then(() => {})\r\n    },\r\n    // 监听上传失败\r\n    handleError(e, file, fileList) {\r\n      const msg = JSON.parse(e.message)\r\n      this.$notify({\r\n        title: msg.message,\r\n        type: 'error',\r\n        duration: 2500\r\n      })\r\n    },\r\n    doSubmit() {\r\n      if (this.$refs['form']) {\r\n        this.$refs['form'].validate((valid) => {\r\n          if (valid) {\r\n            this.saveLoading = true\r\n            editUser(this.form).then(() => {\r\n              this.editSuccessNotify()\r\n              store.dispatch('GetInfo').then(() => {})\r\n              this.saveLoading = false\r\n            }).catch(() => {\r\n              this.saveLoading = false\r\n            })\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n",null]}