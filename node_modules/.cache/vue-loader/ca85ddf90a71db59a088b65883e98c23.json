{"remainingRequest":"D:\\SZBank\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\SZBank\\node_modules\\eladmin-common\\src\\views\\mnt\\deploy\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\SZBank\\node_modules\\eladmin-common\\src\\views\\mnt\\deploy\\index.vue","mtime":1650418876937},{"path":"D:\\SZBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\SZBank\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733},{"path":"D:\\SZBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\SZBank\\node_modules\\vue-loader\\lib\\index.js","mtime":1650418886580}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport crudDeploy from '../../../api/mnt/deploy'\r\nimport dForm from './deploy'\r\nimport fForm from './sysRestore'\r\nimport CRUD, { presenter, header, form, crud } from '../../../components/Crud/crud'\r\nimport rrOperation from '../../../components/Crud/RR.operation'\r\nimport crudOperation from '../../../components/Crud/CRUD.operation'\r\nimport udOperation from '../../../components/Crud/UD.operation'\r\nimport pagination from '../../../components/Crud/Pagination'\r\n// crud交由presenter持有\r\nconst defaultCrud = CRUD({ title: '部署', url: 'api/deploy', crudMethod: { ...crudDeploy }})\r\nconst defaultForm = { id: null, app: { id: null }, deploys: [] }\r\nexport default {\r\n  components: { dForm, fForm, pagination, crudOperation, rrOperation, udOperation },\r\n  mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\r\n  data() {\r\n    return {\r\n      currentRow: {}, selectIndex: '', appName: '', urlHistory: '',\r\n      times: 0, appId: '', deployId: '', apps: [], servers: [],\r\n      permission: {\r\n        add: ['admin', 'deploy:add'],\r\n        edit: ['admin', 'deploy:edit'],\r\n        del: ['admin', 'deploy:del']\r\n      },\r\n      rules: {\r\n        'app.id': [\r\n          { required: true, message: '应用不能为空', trigger: 'blur', type: 'number' }\r\n        ],\r\n        deploys: [\r\n          { required: true, message: '服务器不能为空', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    [CRUD.HOOK.beforeRefresh]() {\r\n      this.selectIndex = ''\r\n      return true\r\n    },\r\n    // 新增编辑前做的操作\r\n    [CRUD.HOOK.beforeToCU](crud, form) {\r\n      this.initSelect()\r\n      const deploys = []\r\n      form.deploys.forEach(function(deploy, index) {\r\n        deploys.push(deploy.id)\r\n      })\r\n      this.form.deploys = deploys\r\n    },\r\n    // 提交前\r\n    [CRUD.HOOK.beforeSubmit]() {\r\n      const deploys = []\r\n      this.form.deploys.forEach(function(data, index) {\r\n        const deploy = { id: data }\r\n        deploys.push(deploy)\r\n      })\r\n      this.form.deploys = deploys\r\n      return true\r\n    },\r\n    deploy() {\r\n      this.$refs.deploy.dialog = true\r\n      this.$refs.deploy.deployInfo = this.currentRow\r\n    },\r\n    sysRestore() {\r\n      this.$refs.sysRestore.dialog = true\r\n    },\r\n    handleCurrentChange(row) {\r\n      this.currentRow = row\r\n      this.selectIndex = !row ? null : row.id\r\n      this.appName = !row ? null : row.app.name\r\n      this.times = this.times + !row ? 0 : 1\r\n      this.appId = !row ? null : row.appId\r\n      this.deployId = !row ? null : row.id\r\n    },\r\n    startServer() {\r\n      crudDeploy.startServer(JSON.stringify(this.currentRow))\r\n        .then(res => {\r\n        })\r\n        .catch(err => {\r\n          console.log('error:' + err.response.data.message)\r\n        })\r\n    },\r\n    stopServer() {\r\n      crudDeploy.stopServer(JSON.stringify(this.currentRow))\r\n        .then(res => {\r\n        })\r\n        .catch(err => {\r\n          console.log('error:' + err.response.data.message)\r\n        })\r\n    },\r\n    serverStatus() {\r\n      crudDeploy.serverStatus(JSON.stringify(this.currentRow))\r\n        .then(res => {\r\n        })\r\n        .catch(err => {\r\n          console.log('error:' + err.response.data.message)\r\n        })\r\n    },\r\n    initSelect() {\r\n      crudDeploy.getApps().then(res => {\r\n        this.apps = res.content\r\n      })\r\n      crudDeploy.getServers().then(res => {\r\n        this.servers = res.content\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}