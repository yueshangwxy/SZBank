{"remainingRequest":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\eladmin-common\\src\\views\\generator\\config.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\eladmin-common\\src\\views\\generator\\config.vue","mtime":499162500000},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport crud from '../../mixins/crud'\nimport {update, get} from '../../api/generator/genConfig'\nimport {save, sync, generator} from '../../api/generator/generator'\nimport {getDicts} from '../../api/system/dict'\n\nexport default {\n  name: 'GeneratorConfig',\n  components: {},\n  mixins: [crud],\n  data() {\n    return {\n      activeName: 'first',\n      tableName: '',\n      tableHeight: 550,\n      columnLoading: false,\n      configLoading: false,\n      dicts: [],\n      syncLoading: false,\n      genLoading: false,\n      form: {\n        id: null,\n        tableName: '',\n        author: '',\n        pack: '',\n        path: '',\n        moduleName: '',\n        cover: 'false',\n        apiPath: '',\n        prefix: '',\n        apiAlias: null\n      },\n      rules: {\n        author: [\n          {required: true, message: '作者不能为空', trigger: 'blur'}\n        ],\n        pack: [\n          {required: true, message: '包路径不能为空', trigger: 'blur'}\n        ],\n        moduleName: [\n          {required: true, message: '包路径不能为空', trigger: 'blur'}\n        ],\n        path: [\n          {required: true, message: '前端路径不能为空', trigger: 'blur'}\n        ],\n        apiAlias: [\n          {required: true, message: '接口名称不能为空', trigger: 'blur'}\n        ],\n        cover: [\n          {required: true, message: '不能为空', trigger: 'blur'}\n        ]\n      }\n    }\n  },\n  created() {\n    this.tableHeight = document.documentElement.clientHeight - 385\n    this.tableName = this.$route.query.tableName\n    this.$nextTick(() => {\n      this.init()\n      get(this.tableName).then(data => {\n        this.form = data\n        this.form.cover = this.form.cover.toString()\n      })\n      getDicts().then(data => {\n        this.dicts = data\n      })\n    })\n  },\n  methods: {\n    beforeInit() {\n      this.url = 'api/generator/columns'\n      const tableName = this.tableName\n      this.params = {tableName}\n      return true\n    },\n    saveColumnConfig() {\n      this.columnLoading = true\n      save(this.data).then(res => {\n        this.notify('保存成功', 'success')\n        this.columnLoading = false\n      }).catch(err => {\n        this.columnLoading = false\n        console.log(err.response.data.message)\n      })\n    },\n    doSubmit() {\n      this.$refs['form'].validate((valid) => {\n        if (valid) {\n          this.configLoading = true\n          update(this.form).then(res => {\n            this.notify('保存成功', 'success')\n            this.form = res\n            this.form.cover = this.form.cover.toString()\n            this.configLoading = false\n          }).catch(err => {\n            this.configLoading = false\n            console.log(err.response.data.message)\n          })\n        }\n      })\n    },\n    sync() {\n      this.syncLoading = true\n      sync([this.tableName]).then(() => {\n        this.init()\n        this.notify('同步成功', 'success')\n        this.syncLoading = false\n      }).then(() => {\n        this.syncLoading = false\n      })\n    },\n    toGen() {\n      this.genLoading = true\n      save(this.data).then(res => {\n        this.notify('保存成功', 'success')\n        // 生成代码\n        generator(this.tableName, 0).then(data => {\n          this.genLoading = false\n          this.notify('生成成功', 'success')\n        }).catch(err => {\n          this.genLoading = false\n          console.log(err.response.data.message)\n        })\n      }).catch(err => {\n        this.genLoading = false\n        console.log(err.response.data.message)\n      })\n    }\n  }\n}\n",null]}