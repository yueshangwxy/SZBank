{"remainingRequest":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\eladmin-common\\src\\views\\monitor\\server\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\eladmin-common\\src\\views\\monitor\\server\\index.vue","mtime":499162500000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport crudServer from '../../../api/monitor/server'\nimport CRUD, {presenter, header, form, crud} from '../../../components/Crud/crud'\nimport rrOperation from '../../../components/Crud/RR.operation'\nimport crudOperation from '../../../components/Crud/CRUD.operation'\nimport udOperation from '../../../components/Crud/UD.operation'\nimport pagination from '../../../components/Crud/Pagination'\n\n// crud交由presenter持有\nconst defaultCrud = CRUD({title: '监控', url: 'api/server', sort: 'sort,asc', crudMethod: {...crudServer}})\nconst defaultForm = {\n  id: null,\n  address: 'localhost',\n  name: null,\n  ip: null,\n  port: 8777,\n  state: null,\n  cpuRate: null,\n  cpuCore: null,\n  memTotal: null,\n  memUsed: null,\n  diskTotal: null,\n  diskUsed: null,\n  swapTotal: null,\n  swapUsed: null,\n  sort: 999\n}\nexport default {\n  name: 'ServerMonitor',\n  components: {pagination, crudOperation, rrOperation, udOperation},\n  mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\n  data() {\n    return {\n      permission: {\n        add: ['admin', 'server:add'],\n        edit: ['admin', 'server:edit'],\n        del: ['admin', 'server:del']\n      },\n      rules: {\n        name: [\n          {required: true, message: '请输入名称', trigger: 'blur'}\n        ],\n        address: [\n          {required: true, message: '请输入IP', trigger: 'blur'}\n        ],\n        port: [\n          {required: true, message: '请输入访问端口', trigger: 'blur', type: 'number'}\n        ]\n      }\n    }\n  },\n  created() {\n    this.crud.optShow.download = false\n  },\n  methods: {\n    formatCpuRate(row, column) {\n      const value = row.cpuRate\n      if (!value) {\n        return 0\n      }\n      return (Math.floor(value * 10000) / 100) + '%'\n    },\n    percentNumber(value, total) {\n      if (!value || !total) {\n        return 0\n      }\n      return value / total * 100\n    },\n    percentStatus(value, total) {\n      const percent = this.percentNumber(value, total)\n      if (percent < 60) {\n        return 'success'\n      } else if (percent < 90) {\n        return 'warning'\n      } else {\n        return 'exception'\n      }\n    },\n    convertToGb(num) {\n      if (!num) {\n        return '-'\n      }\n      let unit = 'G'\n      if (num > 1024) {\n        num = num / 1024\n        unit = 'T'\n      }\n      num = Math.floor(num * 100) / 100\n      return num + unit\n    },\n    formatMem(row, column) {\n      return this.convertToGb(row.memUsed) + ' / ' + this.convertToGb(row.memTotal)\n    },\n    formatDisk(row, column) {\n      return this.convertToGb(row.diskUsed) + ' / ' + this.convertToGb(row.diskTotal)\n    },\n    formatSwap(row, column) {\n      return this.convertToGb(row.swapUsed) + ' / ' + this.convertToGb(row.swapTotal)\n    }\n  }\n}\n",null]}