{"remainingRequest":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\eladmin-system\\src\\views\\system\\dept\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\eladmin-system\\src\\views\\system\\dept\\index.vue","mtime":1649224866686},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649224862071},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1649224861568},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649224862071},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1649224877943}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport crudDept from '../../../api/system/dept'\r\nimport qs from 'qs'\r\nimport Treeselect from '@riophae/vue-treeselect'\r\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css'\r\nimport CRUD, {presenter, header, form, crud} from '@crud/crud'\r\nimport rrOperation from '@crud/RR.operation'\r\nimport crudOperation from '@crud/CRUD.operation'\r\nimport udOperation from '@crud/UD.operation'\r\n\r\n// crud交由presenter持有\r\nconst defaultCrud = CRUD({title: '机构', url: 'system/dept/queryDepts', crudMethod: {...crudDept}})\r\nconst defaultForm = {id: null, name: null, pid: 1, enabled: 'true', code: null, bussCode: null, bussName: null}\r\nexport default {\r\n  name: 'Dept',\r\n  components: {Treeselect, crudOperation, rrOperation, udOperation},\r\n  mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\r\n  // 设置数据字典\r\n  dicts: ['dept_status', 'DEPT_CATEGORY'],\r\n  data() {\r\n    return {\r\n      expands: ['1'],\r\n      depts: [],\r\n      dbpdata: {\r\n        id: null,\r\n        name: null,\r\n        thirdPath: null,\r\n        defaultApproveUser: null\r\n      },\r\n      dbpconfigTitle: '机构配置',\r\n      rules: {\r\n        name: [\r\n          {required: true, message: '请输入名称', trigger: 'blur'}\r\n        ],\r\n        id: [\r\n          {required: true, message: '请输入编号', trigger: 'blur'}\r\n        ]\r\n      },\r\n      permission: {\r\n        add: ['admin', 'dept:add'],\r\n        edit: ['admin', 'dept:edit'],\r\n        del: ['admin', 'dept:del']\r\n      },\r\n      enabledTypeOptions: [\r\n        {key: '1', display_name: '启用'},\r\n        {key: '0', display_name: '停用'}\r\n      ],\r\n      dbpconfigStatus: false,\r\n      submitConfigStatus: 1,\r\n\r\n      deptUsers: []\r\n    }\r\n  },\r\n  created() {\r\n    this.resetQuery()\r\n  },\r\n  methods: {\r\n    resetQuery() {\r\n      this.crud.resetQuery(false);\r\n      this.crud.refresh()\r\n    },\r\n    getRowKeys: function (row) {\r\n      return row.id\r\n    },\r\n    // 新增与编辑前做的操作\r\n    [CRUD.HOOK.afterToCU](crud, form) {\r\n      form.enabled = `${form.enabled}`\r\n      // 获取所有部门\r\n      crudDept.getDepts({enabled: true}).then(res => {\r\n        this.depts = res.content\r\n      })\r\n    },\r\n    // 查询前做的操作\r\n    [CRUD.HOOK.beforeToDetail](crud, form) {\r\n      form.enabled = `${form.enabled}`\r\n      // 获取所有部门\r\n      /*crudDept.getDepts({enabled: true}).then(res => {\r\n        this.depts = res.content\r\n      })*/\r\n    },\r\n    // 提交前的验证\r\n    [CRUD.HOOK.afterValidateCU]() {\r\n      if (!this.form.pid && this.form.id !== 1) {\r\n        this.$message({\r\n          message: '上级部门不能为空',\r\n          type: 'warning'\r\n        })\r\n        return false\r\n      }\r\n      return true\r\n    },\r\n    // 改变状态\r\n    changeEnabled(data, val) {\r\n      this.$confirm('此操作将 \"' + this.dict.label.dept_status[val] + '\" ' + data.name + '部门, 是否继续？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        crudDept.edit(data).then(res => {\r\n          this.crud.notify(this.dict.label.dept_status[val] + '成功', CRUD.NOTIFICATION_TYPE.SUCCESS)\r\n        }).catch(err => {\r\n          data.enabled = !data.enabled\r\n          console.log(err.response.data.message)\r\n        })\r\n      }).catch(() => {\r\n        data.enabled = !data.enabled\r\n      })\r\n    },\r\n    checkboxT(row, rowIndex) {\r\n      return row.id !== 1\r\n    },\r\n    configDbpPath(row) {\r\n      //this.getDeptUser(row.id);\r\n      defaultCrud.crudMethod.getDeptUser(qs.stringify({deptId: row.id})).then(res => {\r\n        this.deptUsers = res.data\r\n        console.log(\"configDbpPath   \" + row.name)\r\n        this.dbpdata.id = row.id\r\n        this.dbpdata.name = row.name\r\n        this.dbpdata.thirdPath = row.dbpPath\r\n        this.dbpdata.defaultApproveUser = row.defaultApproveUserList\r\n        this.dbpconfigStatus = true\r\n      })\r\n    },\r\n    submitConfig(dbpdata) {\r\n      this.submitConfigStatus = 2\r\n      console.log(\"submitConfig  id:  \" + dbpdata.id + \",thirdPath: \" + dbpdata.thirdPath)\r\n      var formData = {};\r\n      formData.deptId = dbpdata.id\r\n      formData.deptName = dbpdata.name\r\n      /*if(!dbpdata.thirdPath){\r\n        this.$message({\r\n          message: '请输入DBP路径',\r\n          type: 'warning'\r\n        })\r\n        this.submitConfigStatus = 1\r\n        return false;\r\n      }*/\r\n      formData.thirdPath = dbpdata.thirdPath\r\n      formData.defaultApproveUser = dbpdata.defaultApproveUser != null ? dbpdata.defaultApproveUser.toString() : null\r\n      defaultCrud.crudMethod.configDbp(formData).then(res => {\r\n        console.log(\"submitConfig res : \" + res)\r\n        defaultCrud.notify(res, CRUD.NOTIFICATION_TYPE.SUCCESS)\r\n        this.dbpconfigStatus = false\r\n        this.submitConfigStatus = 1\r\n        defaultCrud.toQuery();\r\n      })\r\n    },\r\n    cancelConfig() {\r\n      this.dbpconfigStatus = false\r\n      this.submitConfigStatus = 1\r\n    }\r\n    /*getDeptUser(deptId){\r\n      defaultCrud.crudMethod.getDeptUser(qs.stringify({deptId:deptId})).then(res => {\r\n        debugger;\r\n        console.log(\"submitConfig res : \" + res)\r\n        this.deptUsers = res.data\r\n      })\r\n    }*/\r\n  }\r\n}\r\n",null]}