{"remainingRequest":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DataAssetPlatform\\Pncui-Ind\\src\\views\\indicators\\indicator\\arithmetic\\sqlCheckPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\src\\views\\indicators\\indicator\\arithmetic\\sqlCheckPage.vue","mtime":1647917138753},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647917124586},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1647917124178},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647917124586},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1647917137429}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport crudIndIndicatorInfo, { saveArithmetic } from '../../../../api/indicators/indIndicatorInfo'\nimport { sqlCheck } from '@datasource/api/datasources/indDatasource'\nimport category from '../../category/categoryInfo'\nimport aForm from './taste/tastePage'\nimport { getDimListById } from '../../../../api/indicators/indDimension'\n\nexport default {\n  components: {\n    category,\n    aForm\n  },\n  data() {\n    return {\n      loading: false,\n      dialog: false,\n      sqlCheck: false,\n      limitCheck: false,\n      title: '',\n      ieCode: '',\n      tree: {},\n      tags: [],\n      dBExpress: [],\n      tempArray: [],\n      dimArray: [],\n      tableData: [{\n        checkName: '',\n        checkFlag: '',\n        checkValue: '',\n        isCheck: false\n      }],\n      sqlTemp: true,\n      sqlData: {\n        dataSourceId: null,\n        sqlText: null,\n        ieCode: null\n      },\n      categoryIdL: '',\n      categoryName: ''\n    }\n  },\n  mounted() {\n    // 删除初始化时第一行数据\n    this.tableData.splice(0, 1)\n  },\n  methods: {\n    /* SQL校验的method----start */\n    // SQL校验触发事件\n    sqlTest() {\n      const param = {\n        'sqlText': this.sqlData.sqlText\n      }\n      sqlCheck(param).then(data => {\n        if (data.code === 0) {\n          if (data.data.isCheck == 'Y') {\n            this.$message.success({\n              message: 'sql校验成功'\n            })\n            this.sqlTemp = false\n            return\n          } else {\n            this.$message.error({\n              message: 'sql语法不正确'\n            })\n            this.sqlTemp = true\n            return\n          }\n        } else {\n          this.$message.error({\n            message: 'sql校验失败'\n          })\n          this.sqlTemp = true\n          return\n        }\n      })\n    },\n    // SQL校验触发事件\n    saveSql() {\n      const param = {\n        'ieCode': this.sqlData.ieCode,\n        'ruleType': '2',\n        'calcRule': this.sqlData.sqlText\n      }\n      saveArithmetic(param).then(data => {\n        if (data.code === 0) {\n          this.$message.success({\n            message: '衍生指标计算规则保存成功'\n          })\n          this.sqlCheck = false\n        } else {\n          this.$message.error({\n            message: '衍生指标计算规则保存失败'\n          })\n          this.sqlCheck = false\n        }\n      })\n    },\n    /* SQL校验的method----end */\n  }\n}\n",null]}