{"remainingRequest":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\eladmin-common\\src\\views\\tools\\picture\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\eladmin-common\\src\\views\\tools\\picture\\index.vue","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"C:/Users/Evicce/Desktop/work/code2/indicator/Pncui-Indicator/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport crudPic from \"../../../api/tools/picture\";\nimport CRUD, { presenter, header, crud } from \"../../../components/Crud/crud\";\nimport { getToken } from \"../../../utils/auth\";\nimport rrOperation from \"../../../components/Crud/RR.operation\";\nimport crudOperation from \"../../../components/Crud/CRUD.operation\";\nimport pagination from \"../../../components/Crud/Pagination\"; // crud交由presenter持有\n\nvar defaultCrud = CRUD({\n  title: '图片',\n  url: 'api/pictures',\n  crudMethod: _objectSpread({}, crudPic)\n});\nexport default {\n  name: 'Pictures',\n  components: {\n    pagination: pagination,\n    crudOperation: crudOperation,\n    rrOperation: rrOperation\n  },\n  mixins: [presenter(defaultCrud), header(), crud()],\n  data: function data() {\n    return {\n      dialog: false,\n      syncLoading: false,\n      headers: {\n        'Authorization': getToken()\n      },\n      permission: {\n        del: ['admin', 'pictures:del']\n      },\n      dialogImageUrl: '',\n      dialogVisible: false,\n      fileList: [],\n      pictures: []\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['imagesUploadApi'])),\n  created: function created() {\n    this.crud.optShow.add = false;\n    this.crud.optShow.edit = false;\n  },\n  methods: {\n    handleSuccess: function handleSuccess(response, file, fileList) {\n      var uid = file.uid;\n      var id = response.id;\n      this.pictures.push({\n        uid: uid,\n        id: id\n      });\n    },\n    handleBeforeRemove: function handleBeforeRemove(file, fileList) {\n      for (var i = 0; i < this.pictures.length; i++) {\n        if (this.pictures[i].uid === file.uid) {\n          crudPic.del(this.pictures[i].id).then(function (res) {});\n          return true;\n        }\n      }\n    },\n    handlePictureCardPreview: function handlePictureCardPreview(file) {\n      this.dialogImageUrl = file.url;\n      this.dialogVisible = true;\n    },\n    // 刷新列表数据\n    doSubmit: function doSubmit() {\n      this.fileList = [];\n      this.dialogVisible = false;\n      this.dialogImageUrl = '';\n      this.dialog = false;\n      this.crud.toQuery();\n    },\n    // 监听上传失败\n    handleError: function handleError(e, file, fileList) {\n      var msg = JSON.parse(e.message);\n      this.$notify({\n        title: msg.message,\n        type: 'error',\n        duration: 2500\n      });\n    },\n    sync: function sync() {\n      var _this = this;\n\n      this.syncLoading = true;\n      crudPic.sync().then(function (res) {\n        _this.crud.notify('同步成功', CRUD.NOTIFICATION_TYPE.SUCCESS);\n\n        _this.crud.toQuery();\n\n        _this.syncLoading = false;\n      });\n    }\n  }\n};",null]}