{"remainingRequest":"D:\\SZBank\\node_modules\\babel-loader\\lib\\index.js!D:\\SZBank\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\SZBank\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\SZBank\\src\\views\\indicators\\detailsView\\apiDetailsView.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\SZBank\\src\\views\\indicators\\detailsView\\apiDetailsView.vue","mtime":1656042806015},{"path":"D:\\SZBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\SZBank\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733},{"path":"D:\\SZBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\SZBank\\node_modules\\vue-loader\\lib\\index.js","mtime":1650418886580}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.set\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.array.from\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _mixinsFunc = require(\"@/mixins/mixinsFunc\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  mixins: [_mixinsFunc.mixinsFunctions],\n  data: function data() {\n    return {\n      // basicinfo\n      basicinfo: {\n        indexName: \"\",\n        interfaceAds: \"\",\n        apiDescription: \"\",\n        reqType: \"\",\n        //reqType\n        respType: \"\",\n        //respType\n        owner: \"\",\n        application: \"\",\n        myCrtTime: \"\",\n        //createTime\n        myUpdTime: \"\",\n        //updateTime\n        online: \"是\",\n        catalogue1: \"\",\n        catalogue2: \"\",\n        catalogue1Name: \"\",\n        catalogue2Name: \"\"\n      },\n      basicInfoProp: [{\n        prop: \"interfaceAds\",\n        label: \"接口地址\",\n        align: \"center\"\n      }, {\n        prop: \"apiDescription\",\n        label: \"接口描述\",\n        align: \"center\"\n      }, {\n        prop: \"reqType\",\n        label: \"请求类型\",\n        align: \"center\"\n      }, {\n        prop: \"deptName\",\n        label: \"业务属主部门\",\n        align: \"center\"\n      }, // {\n      //   prop: \"respType\",\n      //   label: \"返回类型\",\n      //   align: \"center\",\n      // },\n      // {\n      //   prop: \"owner\",\n      //   label: \"所属用户\",\n      //   align: \"center\",\n      // },\n      {\n        prop: \"myCrtTime\",\n        label: \"创建时间\",\n        align: \"center\"\n      }, {\n        prop: \"myUpdTime\",\n        label: \"更新时间\",\n        align: \"center\"\n      } // {\n      //   prop: \"online\",\n      //   label: \"是否公开\",\n      //   align: \"center\",\n      // },\n      ],\n      basicInfoList: [],\n      fielddataList: [],\n      resdataList: [],\n      apiBgImg: require(\"../../../assets/apiBg.png\"),\n      respropList: [{\n        prop: \"name\",\n        label: \"字段名称\",\n        align: \"center\"\n      }, {\n        prop: \"type\",\n        label: \"字段类型\",\n        align: \"center\"\n      }, {\n        prop: \"isPass\",\n        label: \"是否必传\",\n        align: \"center\"\n      }, {\n        prop: \"description\",\n        label: \"字段描述\",\n        align: \"center\"\n      }],\n      detailsView: false,\n      id: \"\",\n      assetsState: \"\",\n      // 目录树\n      catalogueList: [],\n      cataValue: []\n    };\n  },\n  methods: {\n    initData: function initData() {\n      var _this = this;\n\n      if (this.$route.name === \"API详情\") {\n        this.detailsView = true;\n      } // 目录树\n\n\n      this.$api.getAllCatalogueList({}).then(function (res) {\n        _this.catalogueList = res.data;\n      }); // 数据\n\n      this.id = this.$route.query.id; // 通过路由传递id\n\n      this.$api.getApiById({\n        id: this.id,\n        isRecord: this.detailsView\n      }).then(function (res) {\n        _this.basicinfo = res;\n        _this.basicInfoList = []; // 发布状态\n\n        _this.assetsState = _this.basicinfo.assetsState; // 返回的目录  -- 渲染\n\n        var temp = _this.basicinfo.catalogues;\n        _this.cataValue = [];\n        _this.fielddataList = _this.basicinfo.reqParams || [];\n        _this.resdataList = _this.basicinfo.respParams || [];\n\n        _this.basicInfoList.push(_this.basicinfo || []);\n\n        for (var key in temp) {\n          key = key.split(\"/\");\n\n          _this.cataValue.push({\n            id: key\n          });\n        }\n      });\n    },\n    handleChange: function handleChange(val) {\n      console.log(val);\n    },\n    confirmModify: function confirmModify() {\n      var _this2 = this;\n\n      var list = JSON.parse(JSON.stringify(this.cataValue));\n      list = list.map(function (item) {\n        return item = item.id.join(\"/\");\n      });\n      var listSet = Array.from(new Set(list));\n\n      if (listSet.length !== list.length) {\n        this.$message.error(\"添加目录不能重复\");\n      } else {\n        this.$api.updateAssetApi({\n          id: this.id,\n          list: list,\n          assetsState: this.assetsState\n        }).then(function (res) {\n          _this2.$message.success(\"修改成功!\");\n\n          _this2.closeThisPage();\n        });\n      }\n    },\n    deleteCatalogue: function deleteCatalogue(index) {\n      this.cataValue.splice(index, 1);\n    },\n    transOnline: function transOnline(online) {\n      if (online === 1) {\n        return \"是\";\n      } else if (online === 0) {\n        return \"否\";\n      } else {\n        return \"\";\n      }\n    },\n    addCatalogue: function addCatalogue() {\n      if (this.cataValue.length > 4) {\n        this.$message.warning(\"最多添加5条目录\");\n      } else {\n        this.cataValue.push({\n          id: []\n        });\n      }\n    }\n  }\n};\nexports.default = _default;",null]}