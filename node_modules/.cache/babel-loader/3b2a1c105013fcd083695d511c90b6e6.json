{"remainingRequest":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DataAssetPlatform000\\Pncui-Ind\\src\\views\\indicators\\home\\swiper-box.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\src\\views\\indicators\\home\\swiper-box.vue","mtime":1655426177803},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1650418886580},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1650418886580}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _vueAwesomeSwiper = require(\"vue-awesome-swiper\");\n\nrequire(\"swiper/dist/css/swiper.css\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar c_swiper = document.getElementsByClassName(\"swiper-wrapper\");\nvar _default = {\n  name: \"SwiperBox\",\n  components: {\n    swiper: _vueAwesomeSwiper.swiper,\n    swiperSlide: _vueAwesomeSwiper.swiperSlide\n  },\n  props: {\n    deptList: {\n      type: Array,\n      default: []\n    }\n  },\n  computed: {\n    swiper: function swiper() {\n      return this.$refs.mySwiper.swiper;\n    }\n  },\n  data: function data() {\n    var _this = this;\n\n    return {\n      activeSlide: 1,\n      swiperOption: {\n        loop: true,\n        // 是否循环轮播\n        autoplay: {\n          delay: 4000,\n          stopOnLastSlide: false,\n          disableOnInteraction: true\n        },\n        // 是否可以自动轮播\n        slidesPerView: \"auto\",\n        // 可是区域内可展示多少个块\n        spaceBetween: 16,\n        // 块之间间隔距离\n        initialSlide: 0,\n        // 默认初始显示块\n        freeMode: false,\n        observer: true,\n        observeParents: true,\n        centeredSlides: true,\n        // 显示分页\n        pagination: {\n          el: \".swiper-pagination\",\n          clickable: true\n        },\n        // 设置点击箭头\n        navigation: {\n          nextEl: \".swiper-button-next\",\n          prevEl: \".swiper-button-prev\"\n        },\n        on: {\n          slideChange: function slideChange() {\n            c_swiper[0].style.alignItem = \"center\";\n\n            _this.getCurrentData(c_swiper[0].swiper.activeIndex);\n          }\n        }\n      }\n    };\n  },\n  methods: {\n    // 获取接口\n    getCurrentData: function getCurrentData(index) {\n      if (index < this.deptList.length) {\n        this.$emit(\"getOrganizationData\", this.deptList[index]);\n      } else {\n        // 因为是循环的，所以要取余\n        var num = parseInt(index % this.deptList.length);\n        this.$emit(\"getOrganizationData\", this.deptList[num]);\n      }\n    },\n    // 数字实现三位分割显示\n    numberFormat: function numberFormat(value) {\n      if (!value) return \"0\";\n      var intPart = Number(value).toFixed(0); // 获取整数部分\n\n      var intPartFormat = intPart.toString().replace(/(\\d)(?=(?:\\d{3})+$)/g, \"$1,\"); // 将整数部分逢三一断\n\n      var floatPart = \".00\"; // 预定义小数部分\n\n      var value2Array = value.toString().split(\".\"); // =2表示数据有小数位\n\n      if (value2Array.length === 2) {\n        floatPart = value2Array[1].toString(); // 拿到小数部分\n\n        if (floatPart.length === 1) {\n          // 补0\n          return intPartFormat + \".\" + floatPart + \"0\";\n        } else {\n          return intPartFormat + \".\" + floatPart;\n        }\n      } else {\n        return intPartFormat;\n      }\n    }\n  },\n  created: function created() {// this.$refs.mySwiper.slideToLoop(3, 100, false);\n  }\n};\nexports.default = _default;",null]}