{"remainingRequest":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\DataAssetPlatform000\\Pncui-Ind\\mock\\index.js","dependencies":[{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\mock\\index.js","mtime":1713695826399},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/code/DataAssetPlatform000/Pncui-Ind/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.array.from\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"D:/code/DataAssetPlatform000/Pncui-Ind/node_modules/@babel/runtime/helpers/toConsumableArray\"));\n\nvar _mockjs = _interopRequireDefault(require(\"mockjs\"));\n\nvar _utils = require(\"./utils\");\n\nvar _auth = _interopRequireDefault(require(\"./auth/auth\"));\n\nvar _homePage = _interopRequireDefault(require(\"./homePage/homePage\"));\n\nvar _searchPage = _interopRequireDefault(require(\"./searchPage/searchPage\"));\n\nvar _myShopCar = _interopRequireDefault(require(\"./myShopCar/myShopCar\"));\n\nvar _myProcess = _interopRequireDefault(require(\"./myProcess/myProcess\"));\n\nvar _dataServicePlatform = _interopRequireDefault(require(\"./dataServicePlatform/dataServicePlatform\"));\n\nvar _assetOperation = _interopRequireDefault(require(\"./assetOperation/assetOperation\"));\n\nvar _basicDataMnt = _interopRequireDefault(require(\"./basicDataMnt/basicDataMnt\"));\n\nvar _myCollection = _interopRequireDefault(require(\"./myCollection/myCollection\"));\n\nvar _portalHome = _interopRequireDefault(require(\"./portalHome/portalHome\"));\n\nvar _dataLab = _interopRequireDefault(require(\"./dataLab/dataLab\"));\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar mocks = [].concat((0, _toConsumableArray2.default)(_auth.default), (0, _toConsumableArray2.default)(_homePage.default), (0, _toConsumableArray2.default)(_searchPage.default), (0, _toConsumableArray2.default)(_myShopCar.default), (0, _toConsumableArray2.default)(_myProcess.default), (0, _toConsumableArray2.default)(_dataServicePlatform.default), (0, _toConsumableArray2.default)(_assetOperation.default), (0, _toConsumableArray2.default)(_basicDataMnt.default), (0, _toConsumableArray2.default)(_myCollection.default), (0, _toConsumableArray2.default)(_portalHome.default), (0, _toConsumableArray2.default)(_dataLab.default)); // for front mock\n// please use it cautiously, it will redefine XMLHttpRequest,\n// which will cause many of your third-party libraries to be invalidated(like progress event).\n\nfunction mockXHR() {\n  // mock patch\n  // https://github.com/nuysoft/Mock/issues/300\n  _mockjs.default.XHR.prototype.proxy_send = _mockjs.default.XHR.prototype.send;\n\n  _mockjs.default.XHR.prototype.send = function () {\n    if (this.custom.xhr) {\n      this.custom.xhr.withCredentials = this.withCredentials || false;\n\n      if (this.responseType) {\n        this.custom.xhr.responseType = this.responseType;\n      }\n    }\n\n    this.proxy_send.apply(this, arguments);\n  };\n\n  function XHR2ExpressReqWrap(respond) {\n    return function (options) {\n      var result = null;\n\n      if (respond instanceof Function) {\n        var body = options.body,\n            type = options.type,\n            url = options.url; // https://expressjs.com/en/4x/api.html#req\n\n        result = respond({\n          method: type,\n          body: JSON.parse(body),\n          query: (0, _utils.param2Obj)(url)\n        });\n      } else {\n        result = respond;\n      }\n\n      return _mockjs.default.mock(result);\n    };\n  }\n\n  var _iterator = _createForOfIteratorHelper(mocks),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var i = _step.value;\n\n      _mockjs.default.mock(new RegExp(i.url), i.type || 'get', XHR2ExpressReqWrap(i.response));\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n\nmodule.exports = {\n  mocks: mocks,\n  mockXHR: mockXHR\n};",null]}