{"remainingRequest":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js!F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\code\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\code\\indicator\\Pncui-Indicator\\src\\views\\indicators\\indicator\\atom\\hisIndex.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\code\\indicator\\Pncui-Indicator\\src\\views\\indicators\\indicator\\atom\\hisIndex.vue","mtime":1637905698178},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"F:/code/indicator/Pncui-Indicator/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"F:/code/indicator/Pncui-Indicator/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _toConsumableArray from \"F:/code/indicator/Pncui-Indicator/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.set\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _objectSpread from \"F:/code/indicator/Pncui-Indicator/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _methods;\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport crudIndAtomInfo, { getColumnByTabel, getDimensions, getGenInd, getTablesById, bizNameIsContract, approveDetailByBusinessKey, abolish, startProcess, delAtom as _delAtom } from '@/api/indicators/indAtomInfoHis';\nimport crudIndDimInfo, { getDimInfos } from '@/api/indicators/indDimInfo';\nimport { getDimValues, getDimValuesChildren } from '@/api/indicators/indDimValue';\nimport { getAllSource, getDimInfo, process } from '@/api/indicators/indIndicatorInfo';\nimport CRUD, { crud, form, header, presenter } from '@crud/crud';\nimport rrOperation from '@crud/RR.operation';\nimport crudOperation from '@crud/CRUD.operation';\nimport udOperation from '@crud/UD.operation';\nimport pagination from '@crud/Pagination';\nimport category from \"../../category/category\";\nimport dimensionPage from \"../atom/dimension/index\";\nimport atomPage from \"./atomPage\";\nimport { isSignedInteger, validateStrLenFiveHundred, validateStrLenHundred } from '@/utils/validator';\nimport { getClassifications } from '@/api/indicators/indClassification';\nimport crudIndCategory from '@/api/indicators/indCategory';\nimport { getDepts as _getDepts } from '@/utils/system';\nimport Treeselect from '@riophae/vue-treeselect';\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css';\nimport qs from \"qs\"; // crud交由presenter持有\n\nvar defaultCrud = CRUD({\n  title: '指标信息',\n  url: crudIndAtomInfo.url,\n  sort: 'id,desc',\n  crudMethod: _objectSpread({}, crudIndAtomInfo.crud)\n});\nvar defaultForm = {\n  id: null,\n  categoryId: null,\n  sourceDataSource: 'local',\n  targetDataSource: 'local',\n  bizCode: null,\n  bizName: null,\n  genBizName: null,\n  // 根指标名称\n  indFirstType: null,\n  // 指标一级分类\n  indSecondType: null,\n  // 指标二级分类\n  businessDept: null,\n  // 业务属主部门\n  indLevel: null,\n  // 指标层级\n  isDeptQuery: true,\n  // 是否部门内部都可查询指标结果\n  isAdditionalRecording: false,\n  // 指标结果是否会补录\n  indDimAndValueRelations: [],\n  indDefinition: null,\n  // 指标定义\n  indDefRule: null,\n  // 指标口径规则\n  indValueRange1: null,\n  // 指标取值范围1\n  indValueRange2: null,\n  // 指标取值范围2\n  indInnerWarnValue: '',\n  // 指标内部警戒值（表示预警）\n  indInnerWarnPassValue: '',\n  // 指标内部警戒值（表示通过）\n  indMonWarnValue: '',\n  // 指标监管警戒值（表示预警）\n  indMonWarnPassValue: '',\n  // 指标监管警戒值（表示通过）\n  currency: null,\n  // 币种\n  indValueType: null,\n  // 指标数值属性\n  indFrequency: [],\n  // 指标生成频率\n  indCalType: null,\n  // 度量单位\n  indSafeLevel: null,\n  // 指标安全等级\n  indMonField: null,\n  // 监管属性\n  indProcessSys: null,\n  // 权威加工系统\n  indDataType: null,\n  // 数据类型\n  indDataForm: null,\n  // 数据格式\n  indReference: null,\n  // 参考依据\n  isRealTimeProcess: false,\n  // 是否需要实时加工\n  indCurrentValue: true,\n  // 当期值\n  indContemporaneousValue: true,\n  // 同期值\n  indYearOnYearIncrement: true,\n  // 同比增量\n  indYearOnYearGrowth: true,\n  // 同比增幅\n  indPreviousPeriodValue: true,\n  // 上期值\n  indMonthOnMonthIncrement: true,\n  // 环比增量\n  indMonthOnMonthGrowth: true,\n  // 环比增幅\n  indInitialValueOfTheYear: true,\n  // 年初值\n  indYearOnYearIncre: true,\n  // 较年初增量\n  indIncreaseOverTheBeginningOfTheYear: true,\n  // 较年初增幅\n  indVerifyStatus: null,\n  // 指标审批状态\n  indDeployStatus: null,\n  // 指标发布状态\n  indVerifyId: null,\n  indStandSource: null,\n  // 标准来源\n  ieProp: null,\n  createTable: null,\n  keepHistory: '1',\n  bizTabCode: null,\n  bizFlag: null,\n  bizCalcSql: null,\n  // 实时指标取数SQL\n  bizBatchCalcSql: null,\n  // 批量指标取数SQL\n  dimNames: null,\n  bizDesc: null,\n  calcSeq: null,\n  calcFreq: null,\n  crtUserCode: null,\n  crtOrgCode: null,\n  crtDate: null,\n  updUserCode: null,\n  updOrgCode: null,\n  updDate: null,\n  tenant: null,\n  retention: null,\n  tableShare: '1',\n  status: '2',\n  categoryType: '0',\n  atomDimensions: []\n};\nexport default {\n  name: 'IndAtomInfoHis',\n  components: {\n    Treeselect: Treeselect,\n    pagination: pagination,\n    crudOperation: crudOperation,\n    rrOperation: rrOperation,\n    udOperation: udOperation,\n    category: category,\n    dimensionPage: dimensionPage,\n    atomPage: atomPage\n  },\n  mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\n  dicts: ['IE_PROP', 'CREATE_TABLE', 'YN', 'RETENTION', 'IE_STATUS', 'GEN_IND', 'IND_FIRST_TYPE', 'IND_SECOND_TYPE', 'BUSSINESS_DEPT', 'IND_LEVEL', 'IND_CURRENCY', 'IND_VALUE_TYPE', 'IND_FREQUENCY', 'IND_CAL_TYPE', 'IND_SAFE_LEVEL', 'IND_MON_FIELD', 'IND_PROCESS_SYS', 'IND_DATA_TYPE', 'IND_STAND_SOURCE', 'DIMENSION_CATEGORY', 'DIMENSION', 'LAST_LEVEL_DIMENSION_VALUE'],\n  data: function data() {\n    var h = this.$createElement;\n    return {\n      dimAndValueObject1: {\n        dimension: null,\n        dimensionValue: null\n      },\n      dimAndValueObject2: {\n        dimension: null,\n        dimensionValue: null\n      },\n      dimAndValueObject3: {\n        dimension: '',\n        dimensionValue: ''\n      },\n      dimAndValueObject4: {\n        dimension: null,\n        dimensionValue: null\n      },\n      dimAndValueObject5: {\n        dimension: null,\n        dimensionValue: null\n      },\n      dimAndValueObject6: {\n        dimension: null,\n        dimensionValue: null\n      },\n      dimAndValueObject7: {\n        dimension: null,\n        dimensionValue: null\n      },\n      dimAndValueObject8: {\n        dimension: null,\n        dimensionValue: null\n      },\n      dimAndValueObject9: {\n        dimension: null,\n        dimensionValue: null\n      },\n      dimAndValueObject10: {\n        dimension: null,\n        dimensionValue: null\n      },\n      table: {\n        columns: {\n          sourceDataSource: 'hidden',\n          targetDataSource: 'hidden',\n          keepHistory: 'hidden',\n          bizDesc: 'hidden',\n          crtUserCode: 'hidden',\n          crtOrgCode: 'hidden',\n          crtDate: 'hidden',\n          updUserCode: 'hidden',\n          updOrgCode: 'hidden',\n          updDate: 'hidden',\n          tenant: 'hidden'\n        }\n      },\n      permission: {\n        processA: ['indAtomInfo:processA'],\n        add: ['indAtomInfo:add'],\n        edit: ['indAtomInfo:edit'],\n        del: ['indAtomInfo:del'],\n        details: ['indAtomInfo:details'],\n        workflow: ['indAtomInfo:workflow'],\n        batchCheckResult: ['indAtomInfo:batchCheckResult'],\n        historyVersion: ['indAtomInfo:historyVersion'],\n        cancelInd: ['indAtomInfo:cancelInd'],\n        processVerify: ['indAtomInfo:processVerify'],\n        historyVersionDetail: ['indAtomInfo:historyVersionDetail']\n      },\n      rules: {\n        bizName: [{\n          required: true,\n          message: '指标名称不能为空',\n          trigger: 'blur'\n        }, {\n          validator: validateStrLenHundred,\n          trigger: 'blur'\n        }],\n        ieProp: [{\n          required: true,\n          message: '指标类型不能为空',\n          trigger: 'change'\n        }],\n        genBizName: [{\n          required: true,\n          message: '根指标不能为空',\n          trigger: 'change'\n        }],\n        indFirstType: [{\n          required: true,\n          message: '指标一级分类不能为空',\n          trigger: 'change'\n        }],\n        indSecondType: [{\n          required: true,\n          message: '指标二级分类不能为空',\n          trigger: 'change'\n        }],\n        businessDept: [{\n          required: true,\n          message: '业务属主部门不能为空',\n          trigger: 'change'\n        }],\n        indLevel: [{\n          required: true,\n          message: '指标层级不能为空',\n          trigger: 'change'\n        }],\n        indDefinition: [{\n          required: true,\n          message: '指标定义不能为空',\n          trigger: 'blur'\n        }, {\n          validator: validateStrLenFiveHundred,\n          trigger: 'blur'\n        }],\n        indDefRule: [{\n          required: true,\n          message: '指标口径规则不能为空',\n          trigger: 'blur'\n        }, {\n          validator: validateStrLenFiveHundred,\n          trigger: 'blur'\n        }],\n        indValueRange1: [{\n          validator: isSignedInteger,\n          trigger: 'blur'\n        }],\n        indValueRange2: [{\n          validator: isSignedInteger,\n          trigger: 'blur'\n        }],\n        currency: [{\n          required: true,\n          message: '币种不能为空',\n          trigger: 'change'\n        }],\n        indFrequency: [{\n          required: true,\n          message: '指标生成频率不能为空',\n          trigger: 'change'\n        }],\n        indCalType: [{\n          required: true,\n          message: '度量单位不能为空',\n          trigger: 'change'\n        }],\n        indMonField: [{\n          required: true,\n          message: '监管属性不能为空',\n          trigger: 'change'\n        }],\n        indDataType: [{\n          required: true,\n          message: '数据类型不能为空',\n          trigger: 'change'\n        }]\n      },\n      dimensionRules: {\n        categoryName: [{\n          required: true,\n          message: '指标维度名称不能为空',\n          trigger: 'change'\n        }]\n      },\n      dimensionValueRules: {\n        categoryName: [{\n          required: true,\n          message: '指标维度值不能为空',\n          trigger: 'change'\n        }]\n      },\n      sourceData: [],\n      tableInfo: [],\n      atomDimensions: [],\n      bizTabCodeDis: false,\n      // 计算输日期的页面\n      processDialog: false,\n      // 传给后台的参数\n      processParam: {\n        codes: [],\n        periodDate: ''\n      },\n      dateValue: '',\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      dimensionArr: [],\n      dimensionTitle: '维度',\n      dimensionNumber: 2,\n      dimensionTmp: null,\n      dimensionValueArr: [],\n      dimensionValueTitle: '维度值',\n      dimensionValueNumber: 2,\n      dimensionValueTmp: null,\n      showIndDefRule: false,\n      showIndHistory: false,\n      indInnerWarnValueArr: [1],\n      indInnerWarnValueNumber: 1,\n      indInnerWarnPassValueArr: [1],\n      indInnerWarnPassValueNumber: 1,\n      indMonWarnValueArr: [1],\n      indMonWarnValueNumber: 1,\n      indMonWarnPassValueArr: [1],\n      indMonWarnPassValueNumber: 1,\n      historyData: [],\n      showIndDimensionAdd: false,\n      flowData: [],\n      showFlow: false,\n      dimension: {\n        id: null,\n        classificationId: null,\n        // 所属分类\n        categoryName: null,\n        // 指标维度名称\n        remarks: null // 备注\n\n      },\n      showIndDimensionValueAdd: false,\n      dimensionValue: {\n        dimension: null,\n        // 所属维度\n        lastLevelDimensionValue: null,\n        // 上级维度值\n        dimValue: null // 指标维度值\n\n      },\n      renderFunc: function renderFunc(h, option) {\n        return h(\"span\", [option.label]);\n      },\n      transferData: [],\n      value: [],\n      indDefRuleStr: '',\n      genIndArr: [],\n      genAndDerivedIndArr: [],\n      dimInfoArr: [],\n      dimValueArr: [],\n      dimValueArr2: [],\n      classificationArr: [],\n      dimValueTmp1: [],\n      dimValueTmp2: [],\n      formDialog: false,\n      qryIndFirstType: [],\n      qryIndSecondType: [],\n      formIndFirstType: [],\n      formIndSecondType: [],\n      depts: []\n    };\n  },\n  props: {\n    ieId: null\n  },\n  created: function created() {\n    console.log(\"ssadsd\" + this.ieId);\n    this.query.ieId = this.ieId;\n    this.initDimInfos();\n    this.initDimValuesChildren();\n    this.initDimValues();\n    this.initClassifications();\n    this.initIndFirstType();\n    this.getDepts();\n  },\n  methods: (_methods = {\n    validateBizNameContract: function validateBizNameContract() {\n      var _this2 = this;\n\n      var that = this;\n      bizNameIsContract(that.form.id, that.form.bizName).then(function (res) {\n        if (res.code == 0) {\n          if (res.data) {\n            _this2.$message.error(\"指标名称重复,请重新输入\");\n          }\n        } else {\n          _this2.$message.error(\"系统错误\");\n        }\n      });\n    },\n    initDimInfos: function initDimInfos() {\n      var _this3 = this;\n\n      getDimInfos({\n        size: 100,\n        page: 0\n      }).then(function (data) {\n        _this3.dimInfoArr = data.data.records;\n      });\n    },\n    initDimValuesChildren: function initDimValuesChildren() {\n      var _this4 = this;\n\n      getDimValuesChildren({\n        size: 100,\n        page: 0\n      }).then(function (data) {\n        _this4.dimValueArr = data.data;\n      });\n    },\n    initDimValues: function initDimValues() {\n      var _this5 = this;\n\n      getDimValues({\n        size: 100,\n        page: 0\n      }).then(function (data) {\n        _this5.dimValueArr2 = data.data.records;\n      });\n    },\n    initClassifications: function initClassifications() {\n      var _this6 = this;\n\n      getClassifications({\n        size: 100,\n        page: 0\n      }).then(function (data) {\n        _this6.classificationArr = data.data.records;\n      });\n    },\n    initIndFirstType: function initIndFirstType() {\n      var _this7 = this;\n\n      crudIndCategory.getCategoryList(0).then(function (res) {\n        var data = res.data;\n\n        if (res.code == 0) {\n          for (var i = 0; i < data.length; i++) {\n            _this7.qryIndFirstType.push({\n              id: data[i].id,\n              label: data[i].categoryName,\n              value: data[i].id\n            });\n\n            _this7.formIndFirstType.push({\n              id: data[i].id,\n              label: data[i].categoryName,\n              value: data[i].id\n            });\n          }\n        }\n      });\n    },\n    initIndSecondType: function initIndSecondType(indFirstType, type) {\n      var _this8 = this;\n\n      if (type == \"query\") {\n        this.qryIndSecondType = [];\n      } else {\n        this.formIndSecondType = [];\n      } //let indFirstType = this.query.indFirstType;\n\n\n      if (indFirstType == null) {\n        return;\n      }\n\n      crudIndCategory.getCategoryList(indFirstType).then(function (res) {\n        var data = res.data;\n\n        if (res.code == 0) {\n          for (var i = 0; i < data.length; i++) {\n            if (type == \"query\") {\n              _this8.qryIndSecondType.push({\n                id: data[i].id,\n                label: data[i].categoryName,\n                value: data[i].id\n              });\n            } else {\n              _this8.formIndSecondType.push({\n                id: data[i].id,\n                label: data[i].categoryName,\n                value: data[i].id\n              });\n            }\n          }\n        }\n      });\n    }\n  }, _defineProperty(_methods, CRUD.HOOK.beforeRefresh, function () {\n    this.crud.optShow.edit = true; // this.query.ieType = '4'\n\n    return true;\n  }), _defineProperty(_methods, CRUD.HOOK.afterRefresh, function () {\n    var _this9 = this;\n\n    // getAllSource().then(data => {\n    //   this.sourceData = [{ id: 'local', datasourceName: '默认数据源' }].concat(data.data)\n    // })\n    getGenInd().then(function (data) {\n      _this9.genIndArr = data.data;\n    });\n  }), _defineProperty(_methods, CRUD.HOOK.beforeToEdit, function () {\n    if (this.crud.selections[0].indVerifyStatus == '2') {\n      this.$notify({\n        title: '审批中的指标不能修改',\n        type: 'error',\n        duration: 2500\n      });\n    }\n\n    this.form.indVerifyStatus = this.crud.selections[0].indVerifyStatus;\n    this.form.indDeployStatus = this.crud.selections[0].indDeployStatus;\n    this.form.id = this.crud.selections[0].id;\n    this.form.bizCode = this.crud.selections[0].bizCode;\n    this.form.ieProp = this.crud.selections[0].ieProp;\n    this.form.genBizName = this.crud.selections[0].genBizName;\n    this.form.bizName = this.crud.selections[0].bizName;\n    this.form.indFirstType = this.crud.selections[0].indFirstType;\n    this.form.categoryType = this.crud.selections[0].categoryType;\n    this.initIndSecondType(this.form.indFirstType, 'form');\n    this.form.indSecondType = this.crud.selections[0].indSecondType;\n    this.dimAndValueObject1.dimension = this.crud.selections[0].indDimAndValueRelations.length == 0 ? null : this.crud.selections[0].indDimAndValueRelations[0].dimension;\n    this.dimAndValueObject1.dimensionValue = this.crud.selections[0].indDimAndValueRelations.length == 0 ? null : this.crud.selections[0].indDimAndValueRelations[0].dimensionValue;\n    this.dimAndValueObject2.dimension = this.crud.selections[0].indDimAndValueRelations.length == 0 ? null : this.crud.selections[0].indDimAndValueRelations[1].dimension;\n    this.dimAndValueObject2.dimensionValue = this.crud.selections[0].indDimAndValueRelations.length == 0 ? null : this.crud.selections[0].indDimAndValueRelations[1].dimensionValue;\n    this.form.businessDept = this.crud.selections[0].businessDept;\n    this.form.indLevel = this.crud.selections[0].indLevel;\n    this.form.isDeptQuery = this.crud.selections[0].isDeptQuery;\n    this.form.isAdditionalRecording = this.crud.selections[0].isAdditionalRecording;\n    this.form.indDefinition = this.crud.selections[0].indDefinition;\n    this.form.indDefRule = this.crud.selections[0].indDefRule;\n    this.form.indValueRange1 = this.crud.selections[0].indValueRange1;\n    this.form.indValueRange2 = this.crud.selections[0].indValueRange2;\n    this.form.indInnerWarnValue = this.crud.selections[0].indInnerWarnValue;\n    this.form.indMonWarnValue = this.crud.selections[0].indMonWarnValue;\n    this.form.currency = this.crud.selections[0].currency;\n    this.form.indValueType = this.crud.selections[0].indValueType;\n    this.form.indFrequency = this.crud.selections[0].indFrequency == null ? null : Array.isArray(this.crud.selections[0].indFrequency) ? this.crud.selections[0].indFrequency : this.crud.selections[0].indFrequency.split(',');\n    this.form.indCalType = this.crud.selections[0].indCalType;\n    this.form.indSafeLevel = this.crud.selections[0].indSafeLevel;\n    this.form.indMonField = this.crud.selections[0].indMonField;\n    this.form.indProcessSys = this.crud.selections[0].indProcessSys;\n    this.form.indDataType = this.crud.selections[0].indDataType;\n    this.form.indDataForm = this.crud.selections[0].indDataForm;\n    this.form.indReference = this.crud.selections[0].indReference;\n    this.form.isRealTimeProcess = this.crud.selections[0].isRealTimeProcess;\n    this.form.indCurrentValue = this.crud.selections[0].indCurrentValue;\n    this.form.indContemporaneousValue = this.crud.selections[0].indContemporaneousValue;\n    this.form.indYearOnYearIncrement = this.crud.selections[0].indYearOnYearIncrement;\n    this.form.indYearOnYearGrowth = this.crud.selections[0].indYearOnYearGrowth;\n    this.form.indPreviousPeriodValue = this.crud.selections[0].indPreviousPeriodValue;\n    this.form.indMonthOnMonthIncrement = this.crud.selections[0].indMonthOnMonthIncrement;\n    this.form.indMonthOnMonthGrowth = this.crud.selections[0].indMonthOnMonthGrowth;\n    this.form.indInitialValueOfTheYear = this.crud.selections[0].indInitialValueOfTheYear;\n    this.form.indYearOnYearIncre = this.crud.selections[0].indYearOnYearIncre;\n    this.form.indIncreaseOverTheBeginningOfTheYear = this.crud.selections[0].indIncreaseOverTheBeginningOfTheYear;\n    this.form.indVerifyId = this.crud.selections[0].indVerifyId; // getAllSource().then(data => {\n    //   this.sourceData = [{ id: 'local', datasourceName: '默认数据源' }].concat(data.data)\n    // })\n    // getTablesById(this.form.targetDataSource).then(data => {\n    //   this.tableInfo = data.data\n    // })\n  }), _defineProperty(_methods, CRUD.HOOK.beforeToDetail, function (data) {\n    this.form.id = data.form.id;\n    this.form.bizCode = data.form.bizCode;\n    this.form.ieProp = data.form.ieProp;\n    this.form.genBizName = data.form.genBizName;\n    this.form.bizName = data.form.bizName;\n    this.form.indFirstType = data.form.indFirstType;\n    this.initIndSecondType(this.form.indFirstType, 'form');\n    this.form.indSecondType = data.form.indSecondType;\n    this.form.categoryType = data.form.categoryType;\n    this.dimAndValueObject1.dimension = data.form.indDimAndValueRelations.length == 0 ? null : data.form.indDimAndValueRelations[0].dimension;\n    this.dimAndValueObject1.dimensionValue = data.form.indDimAndValueRelations.length == 0 ? null : data.form.indDimAndValueRelations[0].dimensionValue;\n    this.dimAndValueObject2.dimension = data.form.indDimAndValueRelations.length == 0 ? null : data.form.indDimAndValueRelations[1].dimension;\n    this.dimAndValueObject2.dimensionValue = data.form.indDimAndValueRelations.length == 0 ? null : data.form.indDimAndValueRelations[1].dimensionValue;\n    this.form.businessDept = data.form.businessDept;\n    this.form.indLevel = data.form.indLevel;\n    this.form.isDeptQuery = data.form.isDeptQuery;\n    this.form.isAdditionalRecording = data.form.isAdditionalRecording;\n    this.form.indDefinition = data.form.indDefinition;\n    this.form.indDefRule = data.form.indDefRule;\n    this.form.indValueRange1 = data.form.indValueRange1;\n    this.form.indValueRange2 = data.form.indValueRange2;\n    this.form.indInnerWarnValue = data.form.indInnerWarnValue;\n    this.form.indMonWarnValue = data.form.indMonWarnValue;\n    this.form.currency = data.form.currency;\n    this.form.indValueType = data.form.indValueType;\n    this.form.indFrequency = data.form.indFrequency == null ? null : Array.isArray(data.form.indFrequency) ? data.form.indFrequency : data.form.indFrequency.split(',');\n    this.form.indCalType = data.form.indCalType;\n    this.form.indSafeLevel = data.form.indSafeLevel;\n    this.form.indMonField = data.form.indMonField;\n    this.form.indProcessSys = data.form.indProcessSys;\n    this.form.indDataType = data.form.indDataType;\n    this.form.indDataForm = data.form.indDataForm;\n    this.form.indReference = data.form.indReference;\n    this.form.isRealTimeProcess = data.form.isRealTimeProcess;\n    this.form.indCurrentValue = data.form.indCurrentValue;\n    this.form.indContemporaneousValue = data.form.indContemporaneousValue;\n    this.form.indYearOnYearIncrement = data.form.indYearOnYearIncrement;\n    this.form.indYearOnYearGrowth = data.form.indYearOnYearGrowth;\n    this.form.indPreviousPeriodValue = data.form.indPreviousPeriodValue;\n    this.form.indMonthOnMonthIncrement = data.form.indMonthOnMonthIncrement;\n    this.form.indMonthOnMonthGrowth = data.form.indMonthOnMonthGrowth;\n    this.form.indInitialValueOfTheYear = data.form.indInitialValueOfTheYear;\n    this.form.indYearOnYearIncre = data.form.indYearOnYearIncre;\n    this.form.indIncreaseOverTheBeginningOfTheYear = data.form.indIncreaseOverTheBeginningOfTheYear;\n    this.form.indVerifyStatus = data.form.indVerifyStatus;\n    this.form.indDeployStatus = data.form.indDeployStatus;\n    this.form.indVerifyId = data.form.indVerifyId;\n  }), _defineProperty(_methods, CRUD.HOOK.beforeSubmit, function () {\n    // if (this.form.atomDimensions == null) {\n    //   this.crud.notify('请进行维度管理', CRUD.NOTIFICATION_TYPE.ERROR)\n    //   return false\n    // }\n    //对新增状态进行参数设置\n    if (this.crud.status.add == CRUD.STATUS.PREPARED) {\n      this.form.indFrequency = this.form.indFrequency.join(',');\n      this.form.indDimAndValueRelations.push(this.dimAndValueObject1);\n      this.form.indDimAndValueRelations.push(this.dimAndValueObject2);\n      this.form.indDefRule = this.form.indDefRule + \"||\" + this.indDefRuleStr;\n      console.log('这里是新增参数编辑');\n    } else if (this.crud.status.edit == CRUD.STATUS.PREPARED) {\n      this.form.indFrequency = this.form.indFrequency.join(','); //维度和维度值\n\n      console.log(this.form.indDimAndValueRelations);\n    }\n  }), _defineProperty(_methods, CRUD.HOOK.beforeToAdd, function () {\n    if (!this.form.categoryId) {\n      this.crud.notify('请选择分类', CRUD.NOTIFICATION_TYPE.ERROR);\n      return false;\n    }\n\n    if (this.form.categoryId == '0') {\n      this.crud.notify('根节点不能添加', CRUD.NOTIFICATION_TYPE.ERROR);\n      return false;\n    }\n\n    this.form.categoryType = this.type;\n    this.form.indDimAndValueRelations = [];\n    this.indDefRuleStr = '';\n  }), _defineProperty(_methods, \"toSelectOne\", function toSelectOne(data) {\n    /*const _thisAtom = this.$refs.atomPage\r\n    _thisAtom.form = data\r\n    //this.initIndSecondType(_thisAtom.form.indFirstType,'form')\r\n    _thisAtom.title = '指标[' + data.bizCode + ']'\r\n    _thisAtom.form.indFrequency = data.indFrequency == null ? [] : Array.isArray(data.indFrequency)? data.indFrequency : data.indFrequency.split(',')\r\n    _thisAtom.dimAndValueObject1.dimension = data.indDimAndValueRelations.length == 0 ? null : data.indDimAndValueRelations[0].dimension\r\n    _thisAtom.dimAndValueObject1.dimensionValue = data.indDimAndValueRelations.length == 0 ? null : data.indDimAndValueRelations[0].dimensionValue\r\n    _thisAtom.dimAndValueObject2.dimension = data.indDimAndValueRelations.length == 0 ? null : data.indDimAndValueRelations[1].dimension\r\n    _thisAtom.dimAndValueObject2.dimensionValue = data.indDimAndValueRelations.length == 0 ? null : data.indDimAndValueRelations[1].dimensionValue\r\n      /!* _this.bizCode = data.bizCode*!/\r\n    _thisAtom.atomPageDialog = true*/\n    this.form = data;\n    this.formDialog = true;\n  }), _defineProperty(_methods, \"bizTabCodeChange\", function bizTabCodeChange() {\n    this.bizTabCodeDis = this.form.bizTabCode == null;\n  }), _defineProperty(_methods, \"atomDimensionHandle\", function atomDimensionHandle() {\n    var _this10 = this;\n\n    if (this.form.bizCalcSql != null) {\n      var _this = this.$refs.dimensionPage;\n      _this.keepHistory = this.form.keepHistory;\n\n      if (this.form.bizTabCode == null) {\n        this.bizTabCodeDis = true;\n      }\n      /* const paramSql = {\r\n        bizCalcSql: this.form.bizCalcSql\r\n      }\r\n      bizCalcSqlVali(paramSql).then(data => {\r\n        if (data.code == 0) {\r\n          } else {\r\n          this.$message(data.msg)\r\n        }\r\n      })*/\n\n\n      var param = {\n        bizCalcSql: this.form.bizCalcSql,\n        bizCode: this.form.bizCode,\n        keepHistory: this.form.keepHistory,\n        bizTabCode: this.form.bizTabCode,\n        targetDataSource: this.form.targetDataSource\n      };\n      getDimensions(param).then(function (data) {\n        if (data.code == 0) {\n          _this.atomDimensions = data.data;\n          _this.dimensionDialog = true;\n        } else {\n          _this10.$message(data.msg);\n        }\n      });\n      getDimInfo().then(function (data) {\n        _this.dimensions = data.data;\n      });\n      /* const colParam = {\r\n        'id': this.form.targetDataSource,\r\n        'tablename': this.form.bizTabCode\r\n        /!* 'data_type': this.form.filterColumn*!/\r\n      }*/\n\n      if (this.form.bizTabCode != null) {\n        getColumnByTabel(this.form.targetDataSource, this.form.bizTabCode).then(function (data) {\n          _this.colCodes = data.data;\n        });\n        /* getColumns(colParam).then(data => {\r\n          if (data.code == 0) {\r\n            _this.colCodes = data.data\r\n            console.log(data.data)\r\n          } else {\r\n            _this.colCodes = []\r\n            alert('数据源连接错误')\r\n          }\r\n        })*/\n      } else {\n        this.bizTabCodeDis = true;\n      }\n    }\n  }), _defineProperty(_methods, \"getAtomDimensions\", function getAtomDimensions(data) {\n    this.form.atomDimensions = data;\n  }), _defineProperty(_methods, \"handleCategoryClick\", function handleCategoryClick(data) {\n    this.crud.form.categoryId = data.id;\n    this.crud.query.categoryIds = data.childrenIds;\n    this.crud.query.categoryType = data.categoryType;\n    this.form.categoryId = data.id;\n    var parentId = data.parentId;\n\n    if (parentId == null) {\n      this.crud.optShow.add = false;\n      this.crud.form.indFirstType = data.id;\n      this.initIndSecondType(data.id, 'form');\n    } else if (parentId == '0') {\n      this.crud.optShow.add = true;\n      this.crud.form.indFirstType = data.id;\n      this.initIndSecondType(data.id, 'form');\n    } else {\n      this.crud.optShow.add = true;\n      this.crud.form.indFirstType = data.parentId;\n      this.initIndSecondType(data.parentId, 'form');\n      this.crud.form.indSecondType = data.id;\n    }\n\n    this.crud.refresh();\n  }), _defineProperty(_methods, \"dataSourceChangeHandle\", function dataSourceChangeHandle(val) {\n    var _this11 = this;\n\n    this.form.bizTabCode = null;\n    /* const param = {\r\n      id: val\r\n    }\r\n    getTables(param).then(data => {\r\n      this.tableInfo = data.data\r\n    })*/\n    // 通过数据源id查询表\n\n    getTablesById(val).then(function (data) {\n      _this11.tableInfo = data.data;\n    });\n  }), _defineProperty(_methods, \"toSourceDataName\", function toSourceDataName(row) {\n    var name = '';\n    this.sourceData.forEach(function (row1) {\n      if (row1.id == row.sourceDataSource) {\n        name = row1.datasourceName;\n      }\n    });\n    return name;\n  }), _defineProperty(_methods, \"toTargetDataName\", function toTargetDataName(row) {\n    var name = '';\n    this.sourceData.forEach(function (row1) {\n      if (row1.id == row.targetDataSource) {\n        name = row1.datasourceName;\n      }\n    });\n    return name;\n  }), _defineProperty(_methods, \"processA\", function processA(data) {\n    var bizCodes = [];\n\n    for (var i = 0; i < data.length; i++) {\n      bizCodes.push(data[i].bizCode);\n    }\n\n    this.processParam.codes = bizCodes;\n    this.processDialog = true;\n  }), _defineProperty(_methods, \"processB\", function processB() {\n    var _this12 = this;\n\n    if (this.dateValue == '') {\n      this.crud.notify('日期不能为空', CRUD.NOTIFICATION_TYPE.ERROR);\n    } else {\n      this.processParam.periodDate = this.dateFormat(this.dateValue, 'YYYYMMDD');\n      process(this.processParam, 'atom').then(function (data) {\n        if (data.code == 0) {\n          _this12.crud.notify(data.msg, CRUD.NOTIFICATION_TYPE.SUCCESS);\n        } else {\n          _this12.crud.notify(data.msg, CRUD.NOTIFICATION_TYPE.ERROR);\n        }\n\n        _this12.processDialog = false;\n      });\n    }\n  }), _defineProperty(_methods, \"addDimension\", function addDimension() {\n    this.showIndDimensionAdd = true;\n  }), _defineProperty(_methods, \"addDimensionValue\", function addDimensionValue() {\n    this.showIndDimensionValueAdd = true;\n  }), _defineProperty(_methods, \"addDimensionAndValue\", function addDimensionAndValue() {\n    this.dimensionArr.push(++this.dimensionNumber);\n    this.dimensionArr = this.uniqueArr(this.dimensionArr); // this.dimensionArr.push({ id: ++this.dimensionNumber, value: { dimension: null, dimensionValue: null } })\n  }), _defineProperty(_methods, \"deleteDimensionAndValue\", function deleteDimensionAndValue(item) {\n    this.dimensionArr.splice(this.dimensionArr.indexOf(item), 1);\n    this.dimensionNumber = 2;\n  }), _defineProperty(_methods, \"uniqueArr\", function uniqueArr(arr) {\n    var x = new Set(arr);\n    return _toConsumableArray(x);\n  }), _defineProperty(_methods, \"showIndDefRuleDialog\", function showIndDefRuleDialog() {\n    // this.indDefRuleStr = ''\n    this.value = [];\n    this.showIndDefRule = true;\n  }), _defineProperty(_methods, \"closeIndDefRuleDialog\", function closeIndDefRuleDialog() {\n    this.showIndDefRule = false;\n  }), _defineProperty(_methods, \"handleChange\", function handleChange(value, direction, movedKeys) {\n    console.log(value, direction, movedKeys);\n  }), _defineProperty(_methods, \"addIndInnerWarnValue\", function addIndInnerWarnValue() {\n    this.indInnerWarnValueArr.push(++this.indInnerWarnValueNumber);\n    this.indInnerWarnValueArr = this.uniqueArr(this.indInnerWarnValueArr);\n  }), _defineProperty(_methods, \"delIndInnerWarnValue\", function delIndInnerWarnValue(item) {\n    this.indInnerWarnValueArr.splice(this.indInnerWarnValueArr.indexOf(item), 1);\n    this.indInnerWarnValueNumber = 1;\n  }), _defineProperty(_methods, \"addIndInnerWarnPassValue\", function addIndInnerWarnPassValue() {\n    this.indInnerWarnPassValueArr.push(++this.indInnerWarnPassValueNumber);\n    this.indInnerWarnPassValueArr = this.uniqueArr(this.indInnerWarnPassValueArr);\n  }), _defineProperty(_methods, \"delIndInnerWarnPassValue\", function delIndInnerWarnPassValue(item) {\n    this.indInnerWarnPassValueArr.splice(this.indInnerWarnPassValueArr.indexOf(item), 1);\n    this.indInnerWarnPassValueNumber = 1;\n  }), _defineProperty(_methods, \"addIndMonWarnValue\", function addIndMonWarnValue() {\n    this.indMonWarnValueArr.push(++this.indMonWarnValueNumber);\n    this.indMonWarnValueArr = this.uniqueArr(this.indMonWarnValueArr);\n  }), _defineProperty(_methods, \"delIndMonWarnValue\", function delIndMonWarnValue(item) {\n    this.indMonWarnValueArr.splice(this.indMonWarnValueArr.indexOf(item), 1);\n    this.indMonWarnValueNumber = 1;\n  }), _defineProperty(_methods, \"addIndMonWarnPassValue\", function addIndMonWarnPassValue() {\n    this.indMonWarnPassValueArr.push(++this.indMonWarnPassValueNumber);\n    this.indMonWarnPassValueArr = this.uniqueArr(this.indMonWarnPassValueArr);\n  }), _defineProperty(_methods, \"delIndMonWarnPassValue\", function delIndMonWarnPassValue(item) {\n    this.indMonWarnPassValueArr.splice(this.indMonWarnPassValueArr.indexOf(item), 1);\n    this.indMonWarnPassValueNumber = 1;\n  }), _defineProperty(_methods, \"cancelInd\", function cancelInd(data) {\n    var _this13 = this;\n\n    if (data == null && !Array.isArray(data)) return;\n    var ids = \"\";\n\n    for (var i = 0; i < data.length; i++) {\n      ids += data[i].id + \",\";\n    }\n\n    if (ids != null && ids.includes(\",\")) {\n      ids = ids.substr(0, ids.length - 1);\n    }\n\n    this.$confirm('确认废止指标?', '废止指标', {\n      confirmButtonText: '确定',\n      cancelButtonText: '取消',\n      type: 'warning'\n    }).then(function () {\n      abolish(ids).then(function (res) {\n        if (res.code == 0) {\n          _this13.$notify({\n            title: '指标废止成功',\n            type: 'success',\n            duration: 2500\n          });\n        } else {\n          _this13.$notify({\n            title: '指标废止失败',\n            type: 'error',\n            duration: 2500\n          });\n        }\n\n        _this13.crud.refresh();\n      });\n    }).catch(function () {});\n  }), _defineProperty(_methods, \"processVerify\", function processVerify(data) {\n    var _this14 = this;\n\n    if (data == null && !Array.isArray(data)) return;\n    var ids = \"\";\n\n    for (var i = 0; i < data.length; i++) {\n      ids += data[i].id + \",\";\n    }\n\n    if (ids != null && ids.includes(\",\")) {\n      ids = ids.substr(0, ids.length - 1);\n    }\n\n    this.$confirm('确认发起审批?', '发起审批', {\n      confirmButtonText: '确定',\n      cancelButtonText: '取消',\n      type: 'warning'\n    }).then(function () {\n      startProcess(ids).then(function (res) {\n        if (res.code == 0) {\n          _this14.$notify({\n            title: '发起审批请求成功',\n            type: 'success',\n            duration: 2500\n          });\n        } else {\n          _this14.$notify({\n            title: '发起审批请求失败',\n            type: 'error',\n            duration: 2500\n          });\n        }\n\n        _this14.crud.refresh();\n      });\n    }).catch(function () {});\n  }), _defineProperty(_methods, \"closeIndHistoryDialog\", function closeIndHistoryDialog() {\n    this.historyData = [];\n    this.showIndHistory = false;\n  }), _defineProperty(_methods, \"closeFlowDialog\", function closeFlowDialog() {\n    this.flowData = [];\n    this.showFlow = false;\n  }), _defineProperty(_methods, \"closeIndDimensionAddDialog\", function closeIndDimensionAddDialog() {\n    this.showIndDimensionAdd = false;\n  }), _defineProperty(_methods, \"commitDim\", function commitDim() {\n    var _this15 = this;\n\n    crudIndDimInfo.crud.add(this.dimension).then(function (data) {\n      if (data.code && data.code != 0) {\n        _this15.$notify({\n          title: '新增失败',\n          type: 'error',\n          duration: 2500\n        });\n\n        _this15.showIndDimensionAdd = false;\n      } else {\n        _this15.$notify({\n          title: '新增成功',\n          type: 'success',\n          duration: 2500\n        });\n\n        _this15.initDimInfos();\n\n        _this15.showIndDimensionAdd = false;\n      }\n    });\n  }), _defineProperty(_methods, \"closeIndDimensionValueAddDialog\", function closeIndDimensionValueAddDialog() {\n    this.showIndDimensionValueAdd = false;\n  }), _defineProperty(_methods, \"commitDimValue\", function commitDimValue() {}), _defineProperty(_methods, \"selectInd\", function selectInd() {\n    this.indDefRuleStr += this.value[0];\n    this.showIndDefRule = false;\n  }), _defineProperty(_methods, \"indDefRulePlus\", function indDefRulePlus() {\n    this.indDefRuleStr += ' + ';\n  }), _defineProperty(_methods, \"indDefRuleSubtraction\", function indDefRuleSubtraction() {\n    this.indDefRuleStr += ' - ';\n  }), _defineProperty(_methods, \"indDefRuleMultiplication\", function indDefRuleMultiplication() {\n    this.indDefRuleStr += ' × ';\n  }), _defineProperty(_methods, \"indDefRuleDivision\", function indDefRuleDivision() {\n    this.indDefRuleStr += ' / ';\n  }), _defineProperty(_methods, \"handleDimValueClick1\", function handleDimValueClick1(data, selected) {\n    if (selected == true) {\n      this.dimValueTmp1.push(data.id);\n      this.dimensionTmp1 = this.uniqueArr(this.dimValueTmp1);\n    }\n\n    this.dimAndValueObject1.dimensionValue = this.dimValueTmp1.join(',');\n  }), _defineProperty(_methods, \"handleDimValueClick2\", function handleDimValueClick2(data, selected) {\n    if (selected == true) {\n      this.dimValueTmp2.push(data.id);\n      this.dimensionTmp1 = this.uniqueArr(this.dimValueTmp2);\n    }\n\n    this.dimAndValueObject2.dimensionValue = this.dimValueTmp2.join(',');\n  }), _defineProperty(_methods, \"handleDimValueClick3\", function handleDimValueClick3(data, selected, node) {}), _defineProperty(_methods, \"indInnerWarnValueBiggerClick\", function indInnerWarnValueBiggerClick() {\n    this.form.indInnerWarnValue += '>';\n  }), _defineProperty(_methods, \"indInnerWarnValueEqualsClick\", function indInnerWarnValueEqualsClick() {\n    this.form.indInnerWarnValue += '=';\n  }), _defineProperty(_methods, \"indInnerWarnValueSmallerClick\", function indInnerWarnValueSmallerClick() {\n    this.form.indInnerWarnValue += '<';\n  }), _defineProperty(_methods, \"indInnerWarnValueNotEqualsClick\", function indInnerWarnValueNotEqualsClick() {\n    this.form.indInnerWarnValue += '≠';\n  }), _defineProperty(_methods, \"indMonWarnValueBiggerClick\", function indMonWarnValueBiggerClick() {\n    this.form.indMonWarnValue += '>';\n  }), _defineProperty(_methods, \"indMonWarnValueEqualsClick\", function indMonWarnValueEqualsClick() {\n    this.form.indMonWarnValue += '=';\n  }), _defineProperty(_methods, \"indMonWarnValueSmallerClick\", function indMonWarnValueSmallerClick() {\n    this.form.indMonWarnValue += '<';\n  }), _defineProperty(_methods, \"indMonWarnValueNotEqualsClick\", function indMonWarnValueNotEqualsClick() {\n    this.form.indMonWarnValue += '≠';\n  }), _defineProperty(_methods, \"modifyInd\", function modifyInd(data) {}), _defineProperty(_methods, \"getCategoryName\", function () {\n    var _getCategoryName = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(row) {\n      var res;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(row.indFirstType == null)) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\", '未知分类');\n\n            case 2:\n              _context.next = 4;\n              return crudIndCategory.getCategoryName(row.indFirstType);\n\n            case 4:\n              res = _context.sent;\n\n              if (!(res.code == 0)) {\n                _context.next = 7;\n                break;\n              }\n\n              return _context.abrupt(\"return\", res.data + \"ccc\");\n\n            case 7:\n              return _context.abrupt(\"return\", '未知分类');\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getCategoryName(_x) {\n      return _getCategoryName.apply(this, arguments);\n    }\n\n    return getCategoryName;\n  }()), _defineProperty(_methods, \"getDepts\", function getDepts() {\n    var _this16 = this;\n\n    _getDepts({\n      enabled: true\n    }).then(function (res) {\n      _this16.depts = res.content;\n    });\n  }), _defineProperty(_methods, \"delAtom\", function delAtom(row) {\n    var _this17 = this;\n\n    if (row.indDeployStatus == \"2\") {\n      //已发布\n      this.$confirm('该指标已发布，确认废止?', '废止指标', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        abolish(row.id).then(function (res) {\n          if (res.code == 0) {\n            _this17.$notify({\n              title: '指标废止成功',\n              type: 'success',\n              duration: 2500\n            });\n          } else {\n            _this17.$notify({\n              title: '指标废止失败',\n              type: 'error',\n              duration: 2500\n            });\n          } //defaultCrud.refresh();\n\n        });\n      }).catch(function () {});\n    } else if (row.indDeployStatus == \"1\") {\n      //未发布\n      this.$confirm('请确认是否删除?', '删除指标', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        defaultCrud.delAllLoading = true;\n\n        _delAtom(row.id).then(function (res) {\n          if (res.code == 0) {\n            _this17.$notify({\n              title: '指标删除成功',\n              type: 'success',\n              duration: 2500\n            });\n          } else {\n            _this17.$notify({\n              title: '指标删除失败',\n              type: 'error',\n              duration: 2500\n            });\n          }\n        });\n\n        defaultCrud.refresh();\n      }).catch(function () {});\n    } else if (row.indDeployStatus == \"3\") {\n      //已废止\n      this.$alert('已废止指标，不能删除', '删除指标');\n    }\n  }), _defineProperty(_methods, \"submitAndStartProcess\", function submitAndStartProcess() {\n    this.crud.form.indVerifyStatus = '2';\n    /*let indFrequency = this.crud.form.indFrequency;\r\n    if(Array.isArray(indFrequency)) {\r\n      let str_indFrequency = indFrequency.join(',');\r\n      this.crud.form.indFrequency = str_indFrequency;\r\n    }*/\n\n    this.crud.submitCU();\n    /*updateAtom(this.crud.form).then(res=>{\r\n      if(res.code == 0) {\r\n        this.$notify({\r\n          title: '指标修改成功',\r\n          type: 'success',\r\n          duration: 2500\r\n        })\r\n      } else {\r\n        this.$notify({\r\n          title: '指标修改失败',\r\n          type: 'error',\r\n          duration: 2500\r\n        })\r\n      }\r\n      this.formDialog = false\r\n      defaultCrud.status.cu = 0\r\n      defaultCrud.refresh();\r\n    })*/\n  }), _methods)\n};",null]}