{"remainingRequest":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DataAssetPlatform\\Pncui-Ind\\src\\views\\indicators\\category\\category.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\src\\views\\indicators\\category\\category.vue","mtime":1647932070256},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647917124586},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1647917124178},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647917124586},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1647917137429}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/code/DataAssetPlatform/Pncui-Ind/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"D:/code/DataAssetPlatform/Pncui-Ind/node_modules/@babel/runtime/helpers/typeof\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.weak-map\");\n\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"D:/code/DataAssetPlatform/Pncui-Ind/node_modules/@babel/runtime/helpers/defineProperty\"));\n\nvar _indCategory = _interopRequireDefault(require(\"@/api/indicators/indCategory\"));\n\nvar _crud = _interopRequireWildcard(require(\"@crud/crud\"));\n\nvar _indTenant = require(\"@/api/indUserApply/indTenant\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar defaultCrud = (0, _crud.default)({\n  title: '指标信息',\n  url: _indCategory.default.url,\n  sort: 'id,desc',\n  crudMethod: _objectSpread({}, _indCategory.default.crud)\n});\nvar defaultForm = {\n  parentName: null,\n  categoryName: null,\n  categoryType: null,\n  id: null,\n  parentId: null,\n  prefix: null,\n  operType: null,\n  level: 1\n};\nvar _default = {\n  name: 'IndCategory',\n  // components: { pagination, crudOperation, rrOperation, udOperation },\n  mixins: [(0, _crud.presenter)(defaultCrud), (0, _crud.header)(), (0, _crud.form)(defaultForm), (0, _crud.crud)()],\n  data: function data() {\n    return {\n      type: '0',\n      parentId: '0',\n      isTop: false,\n      dialogVisible: false,\n      dialogTitle: '',\n      filterText: '',\n      activeName: 'defaultCategory',\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      },\n      treeData: [{\n        id: '0',\n        categoryType: this.type,\n        categoryName: '全部类别',\n        children: [],\n        parentName: null,\n        parentId: null,\n        prefix: null,\n        level: 0\n      }],\n      permission: {\n        add: ['admin', 'indCategory:add'],\n        edit: ['admin', 'indCategory:edit'],\n        del: ['admin', 'indCategory:del'],\n        selfAdd: ['admin', 'indCategory:selfAdd'],\n        selfEdit: ['admin', 'indCategory:selfEdit'],\n        selfDel: ['admin', 'indCategory:selfDel']\n      },\n      rules: {\n        id: [{\n          required: true,\n          message: '分类ID不能为空',\n          trigger: 'blur'\n        }],\n        categoryName: [{\n          required: true,\n          message: '分类名称不能为空',\n          trigger: 'blur'\n        }]\n      },\n      tenantArr: [],\n      superAdminFlag: false\n    };\n  },\n  props: {\n    canOpr: true,\n    height: {\n      type: String,\n      default: '465px'\n    }\n  },\n  watch: {\n    filterText: function filterText(val) {\n      this.$refs.tree.filter(val);\n    }\n  },\n  mounted: function mounted() {\n    // console.log('=====category---mounted....')\n    this.superAdminFlag = (0, _indTenant.isSuperAdmin)();\n    this.init();\n    this.getTenants();\n  },\n  methods: {\n    // 获取数据前设置好接口地址\n\n    /*  [CRUD.HOOK.beforeRefresh]() {\n        return true\n    },*/\n    filterNode: function filterNode(value, treeData) {\n      if (!value) return true;\n      return treeData.categoryName.indexOf(value) !== -1;\n    },\n    handleTabClick: function handleTabClick(tab, event) {\n      console.log(\"tab===>, \" + tab);\n      this.type = tab.index;\n      this.treeData[0].categoryType = tab.index;\n      this.treeData[0].children = [];\n      this.init();\n      this.handleNodeClick(this.treeData[0]);\n    },\n    // 点击事件\n    handleNodeClick: function handleNodeClick(data) {\n      this.$emit('node-click', data);\n    },\n    handleAdd: function handleAdd(data) {\n      this.form.level = parseInt(data.level) + 1;\n      this.dialogVisible = true;\n      this.dialogTitle = \"新增指标分类\";\n      this.form.categoryType = this.type; //this.form.categoryName = data.categoryName\n\n      this.form.parentName = data.categoryName;\n      this.form.parentId = data.id;\n      this.form.categoryName = null;\n      this.form.operType = \"add\";\n\n      if (data.id > 0) {\n        this.form.prefix = data.prefix;\n      }\n\n      if (data.id == '0') {\n        this.isTop = true;\n      } else {\n        this.isTop = false;\n      }\n    },\n    handleEdit: function handleEdit(data) {\n      this.dialogVisible = true;\n      this.dialogTitle = \"修改指标分类\";\n      this.form.categoryType = data.categoryType;\n      this.form.categoryName = data.categoryName;\n      this.form.parentName = data.parentName;\n      this.form.id = data.id;\n      this.form.parentId = data.parentId;\n      this.form.operType = \"edit\";\n      this.form.prefix = data.prefix;\n      this.form.tenant = data.tenant;\n      this.form.level = data.level;\n\n      if (data.parentId == '0') {\n        this.isTop = true;\n      } else {\n        this.isTop = false;\n      }\n    },\n    handleRemove: function handleRemove(node, data) {\n      var $this = this;\n      this.$confirm('确定要删除该节点及其所有子节点吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _indCategory.default.crud.del([data.id]).then(function (res) {\n          if (res.code !== 0) {\n            $this.$message({\n              type: 'error',\n              message: '删除失败,' + res.msg\n            });\n          } else {\n            $this.$message({\n              type: 'success',\n              message: '删除成功 '\n            });\n          }\n\n          $this.init(); // this.crud.notify(this.dict.label.user_status[val] + '成功', CRUD.NOTIFICATION_TYPE.SUCCESS)\n        }).catch(function () {\n          console.log('删除异常');\n          $this.$message({\n            type: 'error',\n            message: '删除失败 '\n          });\n        });\n      }).catch(function () {});\n    },\n    init: function init() {\n      var _this = this;\n\n      var _self = this;\n\n      _indCategory.default.tree(this.type, this.parentId).then(function (res) {\n        console.log('======crudIndCategory.init======', res.toString());\n        _this.treeData[0].categoryType = _this.type;\n        _this.treeData[0].children = res.data; // this.crud.notify(this.dict.label.user_status[val] + '成功', CRUD.NOTIFICATION_TYPE.SUCCESS)\n        //刷新上层页面\n\n        _this.$emit('reloadIndFirstType');\n      }).catch(function () {\n        console.log(''); // data.enabled = !data.enabled\n      });\n    },\n    cancel: function cancel() {\n      this.dialogVisible = false;\n    },\n    submit: function submit() {\n      if (this.form.operType === \"add\") {\n        this.addCategory();\n      } else {\n        this.editCategory();\n      }\n    },\n    addCategory: function addCategory() {\n      var _this2 = this;\n\n      var $this = this;\n\n      if (this.superAdminFlag && this.superAdminFlag && this.isTop && this.form.tenant == null) {\n        $this.$message({\n          type: 'error',\n          message: '请选择所属租户'\n        });\n        return;\n      }\n\n      if (this.form.categoryName == null) {\n        $this.$message({\n          type: 'error',\n          message: '分类名称不能为空'\n        });\n        return;\n      }\n\n      if (this.form.categoryType == 0 && this.form.prefix == null) {\n        $this.$message({\n          type: 'error',\n          message: '前缀不能为空'\n        });\n        return;\n      }\n\n      _indCategory.default.crud.add({\n        categoryName: this.form.categoryName,\n        categoryType: this.form.categoryType,\n        prefix: this.form.prefix != null ? this.form.prefix.toUpperCase() : null,\n        parentId: this.form.parentId,\n        tenant: this.form.tenant,\n        level: this.form.level\n      }).then(function (res) {\n        if (res.code === 0) {\n          $this.$message({\n            type: 'success',\n            message: '添加成功 '\n          });\n          $this.init();\n          _this2.form.categoryName = null;\n          _this2.form.categoryType = null;\n          _this2.form.prefix = null;\n          _this2.form.parentId = null;\n          _this2.dialogVisible = false;\n        } else {\n          $this.$message({\n            type: 'error',\n            message: res.msg\n          });\n        }\n      }).catch(function () {\n        console.log('新增异常');\n        $this.$message({\n          type: 'error',\n          message: '添加失败 '\n        });\n      });\n    },\n    editCategory: function editCategory() {\n      var _this3 = this;\n\n      var $this = this;\n\n      if (this.superAdminFlag && this.superAdminFlag && this.isTop && this.form.tenant == null) {\n        $this.$message({\n          type: 'error',\n          message: '请选择所属租户'\n        });\n        return;\n      }\n\n      if (this.form.categoryName == null) {\n        $this.$message({\n          type: 'error',\n          message: '分类名称不能为空'\n        });\n        return;\n      }\n\n      if (this.form.categoryType == 0 && this.form.prefix == null) {\n        $this.$message({\n          type: 'error',\n          message: '前缀不能为空'\n        });\n        return;\n      }\n\n      _indCategory.default.crud.edit({\n        categoryName: this.form.categoryName,\n        categoryType: this.form.categoryType,\n        prefix: this.form.prefix != null ? this.form.prefix.toUpperCase() : null,\n        id: this.form.id,\n        parentId: this.form.parentId,\n        tenant: this.form.tenant,\n        level: this.form.level\n      }).then(function (res) {\n        if (res.code === 0) {\n          $this.$message({\n            type: 'success',\n            message: '修改成功 '\n          });\n          $this.init();\n          _this3.form.categoryName = null;\n          _this3.form.categoryType = null;\n          _this3.form.prefix = null;\n          _this3.form.parentId = null;\n          _this3.dialogVisible = false;\n        } else {\n          $this.$message({\n            type: 'error',\n            message: res.msg\n          });\n        }\n      }).catch(function () {\n        $this.$message({\n          type: 'error',\n          message: '修改失败 '\n        });\n      });\n      /*this.$prompt('输入节点名称', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        inputValue: data.categoryName\n        // inputPattern: /[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?/,\n        // inputErrorMessage: '邮箱格式不正确'\n      }).then(() => {\n       }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '修改失败'\n        })\n      })*/\n\n    },\n    getTenants: function getTenants() {\n      var _this4 = this;\n\n      (0, _indTenant.getTenants)().then(function (data) {\n        if (data != null && data.code == '0000') {\n          _this4.tenantArr = data.data;\n        }\n      });\n    }\n  }\n};\nexports.default = _default;",null]}