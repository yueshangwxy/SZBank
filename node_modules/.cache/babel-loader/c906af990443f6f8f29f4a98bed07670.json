{"remainingRequest":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\DataAssetPlatform000\\Pncui-Ind\\src\\router\\index.js","dependencies":[{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\src\\router\\index.js","mtime":1654584242696},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"D:/code/DataAssetPlatform000/Pncui-Ind/node_modules/@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"D:/code/DataAssetPlatform000/Pncui-Ind/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadMenus = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"D:/code/DataAssetPlatform000/Pncui-Ind/node_modules/@babel/runtime/helpers/objectSpread2\"));\n\nvar _routers = _interopRequireWildcard(require(\"./routers\"));\n\nvar _store = _interopRequireDefault(require(\"../store\"));\n\nvar _settings = _interopRequireDefault(require(\"@public/config/settings\"));\n\nvar _nprogress = _interopRequireDefault(require(\"nprogress\"));\n\nrequire(\"nprogress/nprogress.css\");\n\nvar _auth = require(\"@eladmin/utils/auth\");\n\nvar _menu = require(\"@eladmin/api/system/menu\");\n\n// progress bar\n// progress bar style\n// getToken from cookie\n_nprogress.default.configure({\n  showSpinner: false\n}); // NProgress Configuration\n\n\nvar whiteList = ['/login', '/sso/login']; // no redirect whitelist\n// router.beforeEach((to, from, next) => {\n//   // console.debug('==15===router foreache>',from, to,next)\n//   if (to.meta.title) {\n//     document.title = to.meta.title + ' - ' + Config.title\n//   }\n//   NProgress.start()\n//   console.log(\"to.path==> \" + to.path)\n//   if(isSSORequest(to)) { //单点登录\n//     console.log(\"单点登录\")\n//     removeToken()\n//     let targetUrl = getSsoTargetUrl(to);\n//     if(targetUrl) {\n//       next(`/login?token=${to.query.token}&userName=${to.query.userName}&type=sso&targetUrl=` + targetUrl) // 跳转的登录页面\n//       // next(`/login?type=sso&path=${to.query.path}&id=${to.query.id}&assignee=${to.query.assignee}`)\n//     } else {\n//       next(`/login?token=${to.query.token}&userName=${to.query.userName}&type=sso`) // 跳转的登录页面\n//     }\n//     NProgress.done()\n//     return;\n//   }\n//   console.log(\"正常登录\")\n//   if (getToken()) {\n//     // console.debug('==21===router foreache>', to)\n//     // 已登录且要跳转的页面是登录页\n//     if (to.path === '/login') {\n//       next({ path: '/' })\n//       NProgress.done()\n//     } else {\n//       // console.debug('==27===router foreache>', to, store.getters.loadMenus, store.getters.authorizes)\n//       if (store.getters.authorizes.length === 0) { // 判断当前用户是否已拉取完user_info信息\n//         store.dispatch('GetInfo').then(() => { // 拉取user_info\n//           // 动态路由，拉取菜单\n//           loadMenus(next, to)\n//         }).catch((err) => {\n//           console.log(err)\n//           store.dispatch('LogOut').then(() => {\n//             location.reload() // 为了重新实例化vue-router对象 避免bug\n//           })\n//         })\n//         // 登录时未拉取 菜单，在此处拉取\n//       } else if (store.getters.loadMenus) {\n//         // 修改成false，防止死循环\n//         store.dispatch('updateLoadMenus').then(() => {\n//         })\n//         loadMenus(next, to)\n//       } else {\n//         next()\n//       }\n//     }\n//   } else {\n//     console.debug('==49===router foreache>', to)\n//     /* has no token*/\n//     if (whiteList.indexOf(to.path) !== -1 || to.path.startsWith('/assets')) { // 在免登录白名单，直接进入\n//       next()\n//     } else {\n//       //next(`/login?redirect=${to.fullPath || to.path}`) // 否则全部重定向到登录页\n//       next(`/login`) // 否则全部重定向到登录页\n//       NProgress.done()\n//     }\n//   }\n// })\n\nvar loadMenus = function loadMenus(next, to) {\n  var roleId = '';\n  console.log('-----loadMenus getCurrentRole()>>>', (0, _auth.getCurrentRole)());\n\n  if ((0, _auth.getCurrentRole)() && (0, _auth.getCurrentRole)().id) {\n    roleId = (0, _auth.getCurrentRole)().id;\n  }\n\n  (0, _menu.buildMenus)(roleId).then(function (res) {\n    console.log('-----loadMenus>>>', res);\n    var asyncRouter = (0, _routers.filterAsyncRouter)(res.menu);\n\n    _store.default.commit('SET_AUTHORIZES', res.authorities);\n\n    asyncRouter.push({\n      path: '*',\n      redirect: '/404',\n      hidden: true\n    });\n\n    _store.default.dispatch('GenerateRoutes', asyncRouter).then(function () {\n      // 存储路由\n      _routers.default.addRoutes(asyncRouter); // 动态添加可访问路由表\n\n\n      if (to.path === '/404' && to.redirectedFrom === '/refresh') {\n        next({\n          path: '/'\n        });\n      } else {\n        next((0, _objectSpread2.default)((0, _objectSpread2.default)({}, to), {}, {\n          replace: true\n        }));\n      }\n    });\n  });\n  /*} else {\r\n    next({ path: '/login' })\r\n  }*/\n};\n\nexports.loadMenus = loadMenus;\n\n_routers.default.afterEach(function () {\n  _nprogress.default.done(); // finish progress bar\n\n});",null]}