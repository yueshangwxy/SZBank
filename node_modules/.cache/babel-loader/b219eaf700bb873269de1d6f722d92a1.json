{"remainingRequest":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js!D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\indicator\\Pncui-Indicator\\src\\views\\indicators\\login\\login.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\src\\views\\indicators\\login\\login.vue","mtime":1646633727704},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"D:/WorkSpace/indicator/Pncui-Indicator/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { encrypt } from '@eladmin/utils/rsaEncrypt';\nimport Config from '@public/config/settings';\nimport { getCodeImg, ssoLogin } from '@eladmin/api/login';\nimport Cookies from 'js-cookie';\nimport { mapGetters, mapActions } from 'vuex';\nimport ThemeSelect from '@portal/components/ThemeSelect';\nexport default {\n  name: 'Login',\n  data: function data() {\n    return {\n      title: Config.title,\n      codeEnabled: false,\n      codeUrl: '',\n      cookiePass: '',\n      theme: 'default',\n      loginForm: {\n        username: '',\n        password: '',\n        rememberMe: false,\n        code: '',\n        uuid: '',\n        loginType: ''\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          trigger: 'blur',\n          message: '用户名不能为空'\n        }],\n        password: [{\n          required: true,\n          trigger: 'blur',\n          message: '密码不能为空'\n        }],\n        code: [{\n          required: true,\n          trigger: 'change',\n          message: '验证码不能为空'\n        }]\n      },\n      loading: false,\n      redirect: undefined,\n      currentRole: {\n        id: '',\n        name: ''\n      },\n      selectRole: false,\n      showForm: false\n    };\n  },\n  components: {\n    ThemeSelect: ThemeSelect\n  },\n  computed: {\n    logo: function logo() {\n      //console.log('lllllogo>>>>>', Config.logo, typeof (Config.logo))\n      return Config.logo ? Config.logo : require('@portalParent/public/themes/' + this.getStyle()['style'] + '/images/logo.png');\n    },\n    getBackground: function getBackground() {\n      //return '/themes/' + this.getTheme().layout + '/' + this.getTheme().style + '/images/login_bg_' + (new Date().getDay() + 1) + '.jpg'\n      return Config.loginBackground ? Config.loginBackground : require('@portalParent/public/themes/' + this.getStyle().style + '/images/login_bg_' + (new Date().getDay() + 1) + '.jpg');\n    }\n  },\n  watch: {\n    $route: {\n      handler: function handler(route) {\n        this.redirect = route.query && route.query.redirect;\n      },\n      immediate: true\n    }\n  },\n  created: function created() {\n    var param = getQueryObject();\n    var token = param.token;\n    var type = param.type;\n    console.log(\"login token:: \" + token + \",loginType :: \" + type);\n\n    if (type === 'sso' && token != null) {\n      this.showForm = false;\n      this.autoLogin(token);\n    } else {\n      this.showForm = true;\n    }\n\n    this.getCode();\n    this.getCookie();\n  },\n  mounted: function mounted() {},\n  methods: _objectSpread({\n    getCode: function getCode() {\n      var _this = this;\n\n      getCodeImg().then(function (res) {\n        _this.codeEnabled = res.enabled;\n\n        if (res.enabled) {\n          _this.codeUrl = res.img;\n          _this.loginForm.uuid = res.uuid;\n        }\n      });\n    },\n    getCookie: function getCookie() {\n      var username = Cookies.get('username');\n      var password = Cookies.get('password');\n      var rememberMe = Cookies.get('rememberMe'); // 保存cookie里面的加密后的密码\n\n      this.cookiePass = password === undefined ? '' : password;\n      password = password === undefined ? this.loginForm.password : password;\n      this.loginForm = {\n        username: username === undefined ? this.loginForm.username : username,\n        password: password,\n        rememberMe: rememberMe === undefined ? false : Boolean(rememberMe),\n        code: ''\n      };\n    },\n    autoLogin: function autoLogin(token) {\n      var _this2 = this;\n\n      console.log(\"autoLogin ==> \" + token);\n      ssoLogin(token).then(function (res) {\n        if (res.code === '00') {\n          _this2.loginForm.username = res.username;\n          _this2.loginForm.password = res.password;\n          _this2.loginForm.loginType = 'sso';\n\n          _this2.handleLogin();\n        }\n      });\n    },\n    handleLogin: function handleLogin() {\n      var _this3 = this;\n\n      console.log(\"handleLogin ==>\");\n      this.$refs.loginForm.validate(function (valid) {\n        var user = {\n          username: _this3.loginForm.username,\n          password: _this3.loginForm.password,\n          rememberMe: _this3.loginForm.rememberMe,\n          code: _this3.loginForm.code,\n          uuid: _this3.loginForm.uuid,\n          loginType: _this3.loginForm.loginType\n        };\n        console.log(\"handleLogin ==> user \" + user.loginType);\n\n        if (user.password !== _this3.cookiePass) {\n          user.password = encrypt(user.password);\n        }\n\n        if (valid) {\n          _this3.loading = true;\n\n          if (user.rememberMe) {\n            Cookies.set('username', user.username, {\n              expires: Config.passCookieExpires\n            });\n            Cookies.set('password', user.password, {\n              expires: Config.passCookieExpires\n            });\n            Cookies.set('rememberMe', user.rememberMe, {\n              expires: Config.passCookieExpires\n            });\n          } else {\n            Cookies.remove('username');\n            Cookies.remove('password');\n            Cookies.remove('rememberMe');\n          }\n\n          _this3.$store.dispatch('Login', user).then(function () {\n            //console.log('======dddddd======', this.user())\n            if (_this3.user().roles != null && _this3.user().roles.length > 0) {\n              if (_this3.user().roles.length > 1) {\n                console.log('=======login=====>', _this3.user());\n\n                for (var i = 0; i < _this3.user().roles.length; i++) {\n                  _this3.currentRole.id += _this3.user().roles[i].id + \",\";\n                  _this3.currentRole.name += _this3.user().roles[i].name + \",\";\n                }\n\n                _this3.currentRole.id = _this3.currentRole.id.substr(0, _this3.currentRole.id.length - 1);\n                _this3.currentRole.name = _this3.currentRole.name.substr(0, _this3.currentRole.name.length - 1);\n                _this3.selectRole = false;\n\n                _this3.goin();\n              } else if (_this3.user().roles.length === 1) {\n                _this3.currentRoleid = _this3.user().roles[0].id;\n                _this3.currentRole.name += _this3.user().roles[0].name;\n\n                _this3.goin();\n              }\n            } else {\n              _this3.$message('当前用户没有访问该系统的权限，请联系管理员！', 'error');\n            }\n          }).catch(function (error) {\n            console.log(error);\n            _this3.loading = false;\n\n            _this3.getCode();\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    goin: function goin() {\n      if (!this.currentRole) {\n        this.$message('请选择角色', 'error');\n        return;\n      } //console.log('======goin============', this.currentRole, this.user().roles.find(e => e.id == this.currentRole))\n\n\n      this.$store.dispatch('setCurrentRole', this.currentRole);\n      this.$router.push({\n        path: this.redirect || '/'\n      });\n    },\n    cancel: function cancel() {\n      this.selectRole = false;\n      this.loading = false;\n    }\n  }, mapGetters(['user', 'getStyle']))\n};\n\nfunction getQueryObject(url) {\n  url = url == null ? window.location.href : url;\n  var search = url.substring(url.lastIndexOf('?') + 1);\n  var obj = {};\n  var reg = /([^?&=]+)=([^?&=]*)/g;\n  search.replace(reg, function (rs, $1, $2) {\n    var name = decodeURIComponent($1);\n    var val = decodeURIComponent($2);\n    val = String(val);\n    obj[name] = val;\n    return rs;\n  });\n  return obj;\n}",null]}