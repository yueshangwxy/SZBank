{"remainingRequest":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\pncui-portal-fashional\\src\\layout\\login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\pncui-portal-fashional\\src\\layout\\login.vue","mtime":1650772045999},{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650772030926},{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1650772030306},{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650772030926},{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1650772056629}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"C:/Users/rdren/Desktop/workspace/DataAssetPlatform/Pncui-Ind/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"C:/Users/rdren/Desktop/workspace/DataAssetPlatform/Pncui-Ind/node_modules/@babel/runtime/helpers/defineProperty\"));\n\nvar _rsaEncrypt = require(\"@eladmin/utils/rsaEncrypt\");\n\nvar _settings = _interopRequireDefault(require(\"@public/config/settings\"));\n\nvar _login = require(\"@eladmin/api/login\");\n\nvar _jsCookie = _interopRequireDefault(require(\"js-cookie\"));\n\nvar _vuex = require(\"vuex\");\n\nvar _ThemeSelect = _interopRequireDefault(require(\"../components/ThemeSelect\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar _default = {\n  name: 'Login',\n  data: function data() {\n    return {\n      title: _settings.default.title,\n      codeEnabled: false,\n      codeUrl: '',\n      cookiePass: '',\n      theme: 'default',\n      loginForm: {\n        username: '',\n        password: '',\n        rememberMe: false,\n        code: '',\n        uuid: ''\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          trigger: 'blur',\n          message: '用户名不能为空'\n        }],\n        password: [{\n          required: true,\n          trigger: 'blur',\n          message: '密码不能为空'\n        }],\n        code: [{\n          required: true,\n          trigger: 'change',\n          message: '验证码不能为空'\n        }]\n      },\n      loading: false,\n      redirect: undefined,\n      currentRole: {\n        id: '',\n        name: ''\n      },\n      selectRole: false\n    };\n  },\n  components: {\n    ThemeSelect: _ThemeSelect.default\n  },\n  computed: {\n    logo: function logo() {\n      //console.log('lllllogo>>>>>', Config.logo, typeof (Config.logo))\n      return _settings.default.logo ? _settings.default.logo : require('../../public/themes/' + this.getStyle()['style'] + '/images/logo.png');\n    },\n    getBackground: function getBackground() {\n      //return '/themes/' + this.getTheme().layout + '/' + this.getTheme().style + '/images/login_bg_' + (new Date().getDay() + 1) + '.jpg'\n      return _settings.default.loginBackground ? _settings.default.loginBackground : require('../../public/themes/' + this.getStyle().style + '/images/login_bg_' + (new Date().getDay() + 1) + '.jpg');\n    }\n  },\n  watch: {\n    $route: {\n      handler: function handler(route) {\n        this.redirect = route.query && route.query.redirect;\n      },\n      immediate: true\n    }\n  },\n  created: function created() {\n    this.getCode();\n    this.getCookie();\n  },\n  mounted: function mounted() {},\n  methods: _objectSpread({\n    getCode: function getCode() {\n      var _this = this;\n\n      (0, _login.getCodeImg)().then(function (res) {\n        _this.codeEnabled = res.enabled;\n\n        if (res.enabled) {\n          _this.codeUrl = res.img;\n          _this.loginForm.uuid = res.uuid;\n        }\n      });\n    },\n    getCookie: function getCookie() {\n      var username = _jsCookie.default.get('username');\n\n      var password = _jsCookie.default.get('password');\n\n      var rememberMe = _jsCookie.default.get('rememberMe'); // 保存cookie里面的加密后的密码\n\n\n      this.cookiePass = password === undefined ? '' : password;\n      password = password === undefined ? this.loginForm.password : password;\n      this.loginForm = {\n        username: username === undefined ? this.loginForm.username : username,\n        password: password,\n        rememberMe: rememberMe === undefined ? false : Boolean(rememberMe),\n        code: ''\n      };\n    },\n    handleLogin: function handleLogin() {\n      var _this2 = this;\n\n      this.$refs.loginForm.validate(function (valid) {\n        var user = {\n          username: _this2.loginForm.username,\n          password: _this2.loginForm.password,\n          rememberMe: _this2.loginForm.rememberMe,\n          code: _this2.loginForm.code,\n          uuid: _this2.loginForm.uuid\n        };\n\n        if (user.password !== _this2.cookiePass) {\n          user.password = (0, _rsaEncrypt.encrypt)(user.password);\n        }\n\n        if (valid) {\n          _this2.loading = true;\n\n          if (user.rememberMe) {\n            _jsCookie.default.set('username', user.username, {\n              expires: _settings.default.passCookieExpires\n            });\n\n            _jsCookie.default.set('password', user.password, {\n              expires: _settings.default.passCookieExpires\n            });\n\n            _jsCookie.default.set('rememberMe', user.rememberMe, {\n              expires: _settings.default.passCookieExpires\n            });\n          } else {\n            _jsCookie.default.remove('username');\n\n            _jsCookie.default.remove('password');\n\n            _jsCookie.default.remove('rememberMe');\n          }\n\n          _this2.$store.dispatch('Login', user).then(function () {\n            //console.log('======dddddd======', this.user())\n            if (_this2.user().roles != null && _this2.user().roles.length > 0) {\n              if (_this2.user().roles.length > 1) {\n                console.log('=======login=====>', _this2.user());\n\n                for (var i = 0; i < _this2.user().roles.length; i++) {\n                  _this2.currentRole.id += _this2.user().roles[i].id + \",\";\n                  _this2.currentRole.name += _this2.user().roles[i].name + \",\";\n                }\n\n                _this2.currentRole.id = _this2.currentRole.id.substr(0, _this2.currentRole.id.length - 1);\n                _this2.currentRole.name = _this2.currentRole.name.substr(0, _this2.currentRole.name.length - 1);\n                _this2.selectRole = false;\n\n                _this2.goin();\n              } else if (_this2.user().roles.length == 1) {\n                _this2.currentRoleid = _this2.user().roles[0].id;\n                _this2.currentRole.name += _this2.user().roles[0].name;\n\n                _this2.goin();\n              }\n            } else {\n              _this2.$message('当前用户没有访问该系统的权限，请联系管理员！', 'error');\n            }\n          }).catch(function (error) {\n            console.log(error);\n            _this2.loading = false;\n\n            _this2.getCode();\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    goin: function goin() {\n      if (!this.currentRole) {\n        this.$message('请选择角色', 'error');\n        return;\n      } //console.log('======goin============', this.currentRole, this.user().roles.find(e => e.id == this.currentRole))\n\n\n      this.$store.dispatch('setCurrentRole', this.currentRole);\n      this.$router.push({\n        path: this.redirect || '/'\n      });\n    },\n    cancel: function cancel() {\n      this.selectRole = false;\n      this.loading = false;\n    }\n  }, (0, _vuex.mapGetters)(['user', 'getStyle']))\n};\nexports.default = _default;",null]}