{"remainingRequest":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js!F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\code\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\code\\indicator\\Pncui-Indicator\\src\\views\\indicators\\category\\category.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\code\\indicator\\Pncui-Indicator\\src\\views\\indicators\\category\\category.vue","mtime":1637223962338},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport _objectSpread from \"F:/code/indicator/Pncui-Indicator/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport crudIndCategory from '@/api/indicators/indCategory';\nimport CRUD, { crud, form, header, presenter } from \"@crud/crud\";\nvar defaultCrud = CRUD({\n  title: '指标信息',\n  url: crudIndCategory.url,\n  sort: 'id,desc',\n  crudMethod: _objectSpread({}, crudIndCategory.crud)\n});\nvar defaultForm = {\n  parentName: null,\n  categoryName: null,\n  categoryType: null,\n  id: null,\n  parentId: null,\n  prefix: null,\n  operType: null\n};\nexport default {\n  name: 'IndCategory',\n  // components: { pagination, crudOperation, rrOperation, udOperation },\n  mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\n  data: function data() {\n    return {\n      type: '0',\n      parentId: '0',\n      dialogVisible: false,\n      dialogTitle: '',\n      filterText: '',\n      activeName: 'defaultCategory',\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      },\n      treeData: [{\n        id: '0',\n        categoryType: this.type,\n        categoryName: '全部类别',\n        children: [],\n        parentName: null,\n        parentId: null,\n        prefix: null\n      }],\n      permission: {\n        add: ['admin', 'indCategory:add'],\n        edit: ['admin', 'indCategory:edit'],\n        del: ['admin', 'indCategory:del']\n      },\n      rules: {\n        id: [{\n          required: true,\n          message: '分类ID不能为空',\n          trigger: 'blur'\n        }],\n        categoryName: [{\n          required: true,\n          message: '分类名称不能为空',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  watch: {\n    filterText: function filterText(val) {\n      this.$refs.tree.filter(val);\n    }\n  },\n  mounted: function mounted() {\n    // console.log('=====category---mounted....')\n    this.init();\n  },\n  methods: {\n    // 获取数据前设置好接口地址\n\n    /*  [CRUD.HOOK.beforeRefresh]() {\n        return true\n    },*/\n    filterNode: function filterNode(value, treeData) {\n      if (!value) return true;\n      return treeData.categoryName.indexOf(value) !== -1;\n    },\n    handleTabClick: function handleTabClick(tab, event) {\n      console.log(\"tab===>, \" + tab);\n      this.type = tab.index;\n      this.treeData[0].categoryType = tab.index;\n      this.treeData[0].children = [];\n      this.init();\n      this.handleNodeClick(this.treeData[0]);\n    },\n    // 点击事件\n    handleNodeClick: function handleNodeClick(data) {\n      this.$emit('node-click', data);\n    },\n    handleAdd: function handleAdd(data) {\n      this.dialogVisible = true;\n      this.dialogTitle = \"新增指标分类\";\n      this.form.categoryType = this.type; //this.form.categoryName = data.categoryName\n\n      this.form.parentName = data.categoryName;\n      this.form.parentId = data.id;\n      this.form.operType = \"add\";\n\n      if (data.id > 0) {\n        this.form.prefix = data.prefix;\n      }\n    },\n    handleEdit: function handleEdit(data) {\n      this.dialogVisible = true;\n      this.dialogTitle = \"修改指标分类\";\n      this.form.categoryType = data.categoryType;\n      this.form.categoryName = data.categoryName;\n      this.form.parentName = data.parentName;\n      this.form.id = data.id;\n      this.form.operType = \"edit\";\n      this.form.prefix = data.prefix;\n    },\n    handleRemove: function handleRemove(node, data) {\n      var $this = this;\n      this.$confirm('确定要删除该节点及其所有子节点吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        crudIndCategory.crud.del([data.id]).then(function (res) {\n          if (res.code !== 0) {\n            $this.$message({\n              type: 'error',\n              message: '删除失败,' + res.msg\n            });\n          } else {\n            $this.$message({\n              type: 'success',\n              message: '删除成功 '\n            });\n          }\n\n          $this.init(); // this.crud.notify(this.dict.label.user_status[val] + '成功', CRUD.NOTIFICATION_TYPE.SUCCESS)\n        }).catch(function () {\n          console.log('删除异常');\n          $this.$message({\n            type: 'error',\n            message: '删除失败 '\n          });\n        });\n      }).catch(function () {});\n    },\n    init: function init() {\n      var _this = this;\n\n      crudIndCategory.tree(this.type, this.parentId).then(function (res) {\n        console.log('======crudIndCategory.init======', res.toString());\n        _this.treeData[0].categoryType = _this.type;\n        _this.treeData[0].children = res.data; // this.crud.notify(this.dict.label.user_status[val] + '成功', CRUD.NOTIFICATION_TYPE.SUCCESS)\n      }).catch(function () {\n        console.log(''); // data.enabled = !data.enabled\n      });\n    },\n    cancel: function cancel() {\n      this.dialogVisible = false;\n    },\n    submit: function submit() {\n      if (this.form.operType === \"add\") {\n        this.addCategory();\n      } else {\n        this.editCategory();\n      }\n    },\n    addCategory: function addCategory() {\n      var _this2 = this;\n\n      var $this = this;\n\n      if (this.form.categoryName == null) {\n        $this.$message({\n          type: 'error',\n          message: '分类名称不能为空'\n        });\n        return;\n      }\n\n      if (this.form.prefix == null) {\n        $this.$message({\n          type: 'error',\n          message: '前缀不能为空'\n        });\n        return;\n      }\n\n      crudIndCategory.crud.add({\n        categoryName: this.form.categoryName,\n        categoryType: this.form.categoryType,\n        prefix: this.form.prefix != null ? this.form.prefix.toUpperCase() : null,\n        parentId: this.form.parentId\n      }).then(function (res) {\n        if (res.code === 0) {\n          $this.$message({\n            type: 'success',\n            message: '添加成功 '\n          });\n          $this.init();\n          _this2.form.categoryName = null;\n          _this2.form.categoryType = null;\n          _this2.form.prefix = null;\n          _this2.form.parentId = null;\n          _this2.dialogVisible = false;\n        } else {\n          $this.$message({\n            type: 'error',\n            message: res.msg\n          });\n        }\n      }).catch(function () {\n        console.log('新增异常');\n        $this.$message({\n          type: 'error',\n          message: '添加失败 '\n        });\n      });\n    },\n    editCategory: function editCategory() {\n      var _this3 = this;\n\n      var $this = this;\n\n      if (this.form.categoryName == null) {\n        $this.$message({\n          type: 'error',\n          message: '分类名称不能为空'\n        });\n        return;\n      }\n\n      if (this.form.prefix == null) {\n        $this.$message({\n          type: 'error',\n          message: '前缀不能为空'\n        });\n        return;\n      }\n\n      crudIndCategory.crud.edit({\n        categoryName: this.form.categoryName,\n        categoryType: this.form.categoryType,\n        prefix: this.form.prefix != null ? this.form.prefix.toUpperCase() : null,\n        id: this.form.id\n      }).then(function (res) {\n        if (res.code === 0) {\n          $this.$message({\n            type: 'success',\n            message: '修改成功 '\n          });\n          $this.init();\n          _this3.form.categoryName = null;\n          _this3.form.categoryType = null;\n          _this3.form.prefix = null;\n          _this3.form.parentId = null;\n          _this3.dialogVisible = false;\n        } else {\n          $this.$message({\n            type: 'error',\n            message: res.msg\n          });\n        }\n      }).catch(function () {\n        $this.$message({\n          type: 'error',\n          message: '修改失败 '\n        });\n      });\n      this.$prompt('输入节点名称', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        inputValue: data.categoryName // inputPattern: /[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?/,\n        // inputErrorMessage: '邮箱格式不正确'\n\n      }).then(function () {}).catch(function () {\n        _this3.$message({\n          type: 'info',\n          message: '修改失败'\n        });\n      });\n    }\n  }\n};",null]}