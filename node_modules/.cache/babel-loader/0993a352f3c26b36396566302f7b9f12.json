{"remainingRequest":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\thread-loader\\dist\\cjs.js!D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js!D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\src\\router\\index.js","dependencies":[{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\src\\router\\index.js","mtime":1611823389000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\workspace-suzhouzhibiao\\Indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"D:/workspace-suzhouzhibiao/Indicator/Pncui-Indicator/node_modules/@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"D:/workspace-suzhouzhibiao/Indicator/Pncui-Indicator/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadMenus = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"D:/workspace-suzhouzhibiao/Indicator/Pncui-Indicator/node_modules/@babel/runtime/helpers/objectSpread2\"));\n\nrequire(\"core-js/modules/es6.string.starts-with\");\n\nvar _routers = _interopRequireWildcard(require(\"./routers\"));\n\nvar _store = _interopRequireDefault(require(\"../store\"));\n\nvar _settings = _interopRequireDefault(require(\"@public/config/settings\"));\n\nvar _nprogress = _interopRequireDefault(require(\"nprogress\"));\n\nrequire(\"nprogress/nprogress.css\");\n\nvar _auth = require(\"@eladmin/utils/auth\");\n\nvar _menu = require(\"@eladmin/api/system/menu\");\n\n// progress bar\n// progress bar style\n// getToken from cookie\n_nprogress.default.configure({\n  showSpinner: false\n}); // NProgress Configuration\n\n\nvar whiteList = ['/login', '/sso/login']; // no redirect whitelist\n\n_routers.default.beforeEach(function (to, from, next) {\n  // console.debug('==15===router foreache>',from, to,next)\n  if (to.meta.title) {\n    document.title = to.meta.title + ' - ' + _settings.default.title;\n  }\n\n  _nprogress.default.start();\n\n  if ((0, _auth.getToken)()) {\n    // console.debug('==21===router foreache>', to)\n    // 已登录且要跳转的页面是登录页\n    if (to.path === '/login') {\n      next({\n        path: '/'\n      });\n\n      _nprogress.default.done();\n    } else {\n      // console.debug('==27===router foreache>', to, store.getters.loadMenus, store.getters.authorizes)\n      if (_store.default.getters.authorizes.length === 0) {\n        // 判断当前用户是否已拉取完user_info信息\n        _store.default.dispatch('GetInfo').then(function (res) {\n          // 拉取user_info\n          // 动态路由，拉取菜单\n          loadMenus(next, to);\n        }).catch(function (err) {\n          _store.default.dispatch('LogOut').then(function () {\n            location.reload(); // 为了重新实例化vue-router对象 避免bug\n          });\n        }); // 登录时未拉取 菜单，在此处拉取\n\n      } else if (_store.default.getters.loadMenus) {\n        // 修改成false，防止死循环\n        _store.default.dispatch('updateLoadMenus').then(function (res) {});\n\n        loadMenus(next, to);\n      } else {\n        next();\n      }\n    }\n  } else {\n    /* has no token*/\n    if (whiteList.indexOf(to.path) !== -1 || to.path.startsWith('/assets')) {\n      // 在免登录白名单，直接进入\n      next();\n    } else {\n      //next(`/login?redirect=${to.fullPath || to.path}`) // 否则全部重定向到登录页\n      next(\"/login\"); // 否则全部重定向到登录页\n\n      _nprogress.default.done();\n    }\n  }\n});\n\nvar loadMenus = function loadMenus(next, to) {\n  var roleId = '';\n\n  if ((0, _auth.getCurrentRole)() && (0, _auth.getCurrentRole)().id) {\n    roleId = (0, _auth.getCurrentRole)().id;\n  }\n\n  (0, _menu.buildMenus)(roleId).then(function (res) {\n    var asyncRouter = (0, _routers.filterAsyncRouter)(res.menu);\n\n    _store.default.commit('SET_AUTHORIZES', res.authorities);\n\n    asyncRouter.push({\n      path: '*',\n      redirect: '/404',\n      hidden: true\n    });\n\n    _store.default.dispatch('GenerateRoutes', asyncRouter).then(function () {\n      // 存储路由\n      _routers.default.addRoutes(asyncRouter); // 动态添加可访问路由表\n\n\n      if (to.path === '/404' && to.redirectedFrom === '/refresh') {\n        next({\n          path: '/'\n        });\n      } else {\n        next((0, _objectSpread2.default)((0, _objectSpread2.default)({}, to), {}, {\n          replace: true\n        }));\n      }\n    });\n  });\n  /*} else {\n    next({ path: '/login' })\n  }*/\n};\n\nexports.loadMenus = loadMenus;\n\n_routers.default.afterEach(function () {\n  _nprogress.default.done(); // finish progress bar\n\n});",null]}