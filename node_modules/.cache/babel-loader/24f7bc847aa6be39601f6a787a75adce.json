{"remainingRequest":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\eladmin-system\\src\\views\\system\\post\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\eladmin-system\\src\\views\\system\\post\\index.vue","mtime":1641384062586},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"C:/Users/Evicce/Desktop/work/code2/indicator/Pncui-Indicator/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _objectSpread from \"C:/Users/Evicce/Desktop/work/code2/indicator/Pncui-Indicator/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _methods;\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport crudUser from \"../../../api/system/user\";\nimport { isvalidPhone } from '@eladmin/utils/validate';\nimport { getDepts as _getDepts } from \"../../../api/system/dept\";\nimport { getAll, getLevel } from \"../../../api/system/role\";\nimport { getAllJob } from \"../../../api/system/job\";\nimport CRUD, { presenter, header, form, crud } from '@crud/crud';\nimport rrOperation from '@crud/RR.operation';\nimport crudOperation from '@crud/CRUD.operation';\nimport udOperation from '@crud/UD.operation';\nimport pagination from '@crud/Pagination';\nimport Treeselect from '@riophae/vue-treeselect';\nimport { mapGetters } from 'vuex';\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css';\nimport request from '@eladmin/utils/request';\nimport qs from 'qs';\nvar userRoles = []; // crud交由presenter持有\n\nvar defaultCrud = CRUD({\n  title: '用户',\n  url: 'api/users',\n  crudMethod: _objectSpread({}, crudUser)\n});\nvar defaultForm = {\n  id: null,\n  userType: '0',\n  username: null,\n  nickName: null,\n  sex: '男',\n  email: null,\n  enabled: 'false',\n  roles: [],\n  job: {\n    id: null\n  },\n  dept: {\n    id: null\n  },\n  phone: null\n};\nexport default {\n  name: 'User',\n  components: {\n    Treeselect: Treeselect,\n    crudOperation: crudOperation,\n    rrOperation: rrOperation,\n    udOperation: udOperation,\n    pagination: pagination\n  },\n  mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\n  // 数据字典\n  dicts: ['user_status', 'USER_TYPE'],\n  data: function data() {\n    // 自定义验证\n    var validPhone = function validPhone(rule, value, callback) {\n      if (!value) {\n        callback(new Error('请输入电话号码'));\n      } else if (!isvalidPhone(value)) {\n        callback(new Error('请输入正确的11位手机号码'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      height: document.documentElement.clientHeight - 180 + 'px;',\n      deptName: '',\n      depts: [],\n      deptDatas: [],\n      jobs: [],\n      level: 3,\n      roles: [],\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      },\n      permission: {\n        add: ['admin', 'user:add'],\n        edit: ['admin', 'user:edit'],\n        del: ['admin', 'user:del'],\n        resetpwd: ['admin', 'user:resetpwd']\n      },\n      enabledTypeOptions: [{\n        key: 'true',\n        display_name: '启用'\n      }, {\n        key: 'false',\n        display_name: '停用'\n      }],\n      userTypeOptions: [{\n        key: '0',\n        user_type_select: '临时'\n      }, {\n        key: '1',\n        user_type_select: '正式'\n      }],\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 20,\n          message: '长度在 2 到 20 个字符',\n          trigger: 'blur'\n        }],\n        userType: [{\n          required: true,\n          message: '请选择用户类型',\n          trigger: 'blur'\n        }],\n        nickName: [{\n          required: true,\n          message: '请输入用户昵称',\n          trigger: 'blur'\n        }, {\n          min: 2,\n          max: 20,\n          message: '长度在 2 到 20 个字符',\n          trigger: 'blur'\n        }],\n        dept: {\n          id: [{\n            required: true,\n            message: '机构不能为空',\n            trigger: 'change'\n          }]\n        }\n      },\n      resetLoading: false\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['user'])),\n  created: function created() {\n    var _this = this;\n\n    // console.log(\"初始化查询表单传输数据！\" + this.form.enabled)\n    this.query.enabled = 'true';\n    this.crud.refresh();\n    this.$nextTick(function () {\n      _this.getDeptDatas();\n\n      _this.crud.toQuery();\n\n      _this.crud.msg.add = '新增成功，默认密码：123456';\n    });\n  },\n  mounted: function mounted() {\n    var that = this;\n\n    window.onresize = function temp() {\n      that.height = document.documentElement.clientHeight - 180 + 'px;';\n    };\n  },\n  methods: (_methods = {\n    changeRole: function changeRole(value) {\n      userRoles = [];\n      value.forEach(function (data, index) {\n        var role = {\n          id: data\n        };\n        userRoles.push(role);\n      });\n    }\n  }, _defineProperty(_methods, CRUD.HOOK.afterAddError, function (crud) {\n    this.afterErrorMethod(crud);\n  }), _defineProperty(_methods, CRUD.HOOK.afterEditError, function (crud) {\n    this.afterErrorMethod(crud);\n  }), _defineProperty(_methods, \"afterErrorMethod\", function afterErrorMethod(crud) {\n    // 恢复select\n    var initRoles = [];\n    userRoles.forEach(function (role, index) {\n      initRoles.push(role.id);\n    });\n    crud.form.roles = initRoles;\n  }), _defineProperty(_methods, \"deleteTag\", function deleteTag(value) {\n    userRoles.forEach(function (data, index) {\n      if (data.id === value) {\n        userRoles.splice(index, value);\n      }\n    });\n  }), _defineProperty(_methods, CRUD.HOOK.afterToCU, function (crud, form) {\n    this.getDepts();\n    this.getRoles();\n    this.getRoleLevel();\n    form.enabled = form.enabled.toString();\n\n    if (!form.dept.id && this.query.deptId) {\n      form.dept.id = this.query.deptId;\n    }\n  }), _defineProperty(_methods, CRUD.HOOK.beforeToEdit, function (crud, form) {\n    // this.getJobs(this.form.dept.id)\n    userRoles = [];\n    var roles = [];\n    form.roles.forEach(function (role, index) {\n      roles.push(role.id); // 初始化编辑时候的角色\n\n      var rol = {\n        id: role.id\n      };\n      userRoles.push(rol);\n    });\n    form.roles = roles;\n  }), _defineProperty(_methods, CRUD.HOOK.afterValidateCU, function (crud) {\n    console.log('用户类型：' + crud.form.userType);\n    console.log('用户名：' + crud.form.username);\n\n    if (crud.form.userType === '0') {\n      var nameResult = crud.form.username.substring(0, 3);\n\n      if (nameResult != 'DAP') {\n        crud.form.username = 'DAP' + crud.form.username;\n      }\n    }\n\n    if (!crud.form.dept.id) {\n      this.$message({\n        message: '部门不能为空',\n        type: 'warning'\n      });\n      return false;\n    }\n\n    crud.form.roles = userRoles;\n    return true;\n  }), _defineProperty(_methods, \"getDeptDatas\", function getDeptDatas() {\n    var _this2 = this;\n\n    var sort = 'id,desc';\n    var params = {\n      sort: sort\n    };\n\n    if (this.deptName) {\n      params['name'] = this.deptName;\n    }\n\n    _getDepts(params).then(function (res) {\n      _this2.deptDatas = res.content;\n    });\n  }), _defineProperty(_methods, \"getDepts\", function getDepts() {\n    var _this3 = this;\n\n    _getDepts({\n      enabled: true\n    }).then(function (res) {\n      _this3.depts = res.content;\n    });\n  }), _defineProperty(_methods, \"handleNodeClick\", function handleNodeClick(data) {\n    if (data.pid === 0) {\n      this.query.deptId = null;\n    } else {\n      this.query.deptId = data.id;\n    }\n\n    this.crud.toQuery();\n  }), _defineProperty(_methods, \"changeEnabled\", function changeEnabled(data, val) {\n    var _this4 = this;\n\n    this.$confirm('此操作将 \"' + this.dict.label.user_status[val] + '\" ' + data.username + ', 是否继续？', '提示', {\n      confirmButtonText: '确定',\n      cancelButtonText: '取消',\n      type: 'warning'\n    }).then(function () {\n      crudUser.edit(data).then(function (res) {\n        _this4.crud.notify(_this4.dict.label.user_status[val] + '成功', CRUD.NOTIFICATION_TYPE.SUCCESS);\n      }).catch(function () {\n        data.enabled = !data.enabled;\n      });\n    }).catch(function () {\n      data.enabled = !data.enabled;\n    });\n  }), _defineProperty(_methods, \"getRoles\", function getRoles() {\n    var _this5 = this;\n\n    getAll().then(function (res) {\n      _this5.roles = res;\n    }).catch(function () {});\n  }), _defineProperty(_methods, \"getJobs\", function getJobs(id) {\n    var _this6 = this;\n\n    getAllJob(id).then(function (res) {\n      _this6.jobs = res.content;\n    }).catch(function () {});\n  }), _defineProperty(_methods, \"selectFun\", function selectFun(node, instanceId) {// console.log('=======selectFun========', node, instanceId)\n    // this.level = node.deptLevel\n    // this.getJobs(node.id)\n    // this.form.job.id = null\n  }), _defineProperty(_methods, \"getRoleLevel\", function getRoleLevel() {\n    var _this7 = this;\n\n    getLevel().then(function (res) {\n      _this7.level = res.level;\n    }).catch(function () {});\n  }), _defineProperty(_methods, \"checkboxT\", function checkboxT(row, rowIndex) {\n    return row.id !== this.user.id;\n  }), _defineProperty(_methods, \"doResetPwd\", function doResetPwd(datas) {\n    var _this8 = this;\n\n    this.$confirm(\"\\u786E\\u8BA4\\u91CD\\u7F6E\\u9009\\u4E2D\\u7684\".concat(datas.length, \"\\u4E2A\\u7528\\u6237?\"), '提示', {\n      confirmButtonText: '确定',\n      cancelButtonText: '取消',\n      type: 'warning'\n    }).then(function () {\n      _this8.resetPwd(datas);\n    }).catch(function () {});\n  }), _defineProperty(_methods, \"resetPwd\", function resetPwd(key, index) {\n    var _this9 = this;\n\n    var ids = [];\n\n    if (key instanceof Array) {\n      key.forEach(function (val) {\n        ids.push(val.id);\n      });\n    } else {\n      ids.push(key.id);\n    }\n\n    this.resetLoading = true;\n    request({\n      url: '/api/users/resetPwd',\n      method: 'post',\n      data: ids\n    }).then(function (res) {\n      _this9.resetLoading = false;\n\n      _this9.$notify({\n        title: '重置成功',\n        type: 'success',\n        duration: 2500\n      });\n    });\n  }), _methods)\n};",null]}