{"remainingRequest":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js!F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\code\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\code\\indicator\\Pncui-Indicator\\src\\views\\indicators\\indicator\\atom\\dimension\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\code\\indicator\\Pncui-Indicator\\src\\views\\indicators\\indicator\\atom\\dimension\\index.vue","mtime":1634782932460},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"F:/code/indicator/Pncui-Indicator/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _typeof from \"F:/code/indicator/Pncui-Indicator/node_modules/@babel/runtime/helpers/esm/typeof\";\n\nvar _methods;\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CRUD, { crud } from '@crud/crud';\nexport default {\n  name: 'IndAtomDimension',\n  components: {},\n  mixins: [],\n  dicts: ['DIM_TYPE', 'DIM_FLAG'],\n  props: {\n    atomDimensionDis: {\n      type: Boolean,\n      default: false\n    },\n    bizTabCodeDis: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      atomDimensions: [],\n      dimensions: [],\n      keepHistory: '0',\n      selectListRow: [],\n      dimensionDialog: false,\n      dimDisplay: '',\n      bizTabCode: null,\n      colCodes: [],\n      title: '',\n      permission: {\n        add: ['admin', 'indAtomDimension:add'],\n        edit: ['admin', 'indAtomDimension:edit'],\n        del: ['admin', 'indAtomDimension:del']\n      },\n      rules: {}\n    };\n  },\n  watch: {\n    atomDimensions: {\n      handler: function handler(newName, oldName) {\n        var _this = this;\n\n        this.colCodes.some(function (colCode) {\n          colCode.dis = false;\n\n          _this.atomDimensions.some(function (atomDim) {\n            if (colCode.columnName === atomDim.colCode) {\n              colCode.dis = true;\n            }\n          });\n        });\n      },\n      deep: true\n    }\n  },\n  methods: (_methods = {}, _defineProperty(_methods, CRUD.HOOK.beforeRefresh, function () {\n    console.log(this.props.bizTabCodeDis, 'bizTabCodeDis');\n    return true;\n  }), _defineProperty(_methods, \"selectRow\", function selectRow(val) {\n    this.selectListRow = val;\n  }), _defineProperty(_methods, \"changeRemarkByColCode\", function changeRemarkByColCode(item) {\n    this.colCodes.some(function (colCode) {\n      if (colCode.columnName === item.colCode) {\n        item.remark = colCode.columnDesc;\n        /* if(colCode.dis===true){\n           colCode.dis = false\n         }else{\n           colCode.dis = true\n         }*/\n      }\n    });\n  }), _defineProperty(_methods, \"dimClickHandle\", function dimClickHandle() {\n    var _this2 = this;\n\n    var atomDimension = [];\n    var dimType = 0;\n    var dimTypeM = 0;\n    var dimTypeB = 0;\n    var dimTypeP = 0;\n    var dimColeN = 0;\n\n    var _loop = function _loop(i) {\n      if (_this2.atomDimensions[i].dimType === 'D' && _this2.atomDimensions[i].dimCode === null) {\n        _this2.$message('类型为维度时 必须选择维度编号');\n\n        return {\n          v: false\n        };\n      }\n\n      _this2.dimensions.some(function (item) {\n        if (item.dimCode === _this2.atomDimensions[i].dimCode) {\n          _this2.atomDimensions[i].dimDesc = item.dimName;\n        }\n      });\n\n      newValue = {\n        id: _this2.atomDimensions[i].id,\n        dimType: _this2.atomDimensions[i].dimType,\n        dimCode: _this2.atomDimensions[i].dimCode,\n        dimDesc: _this2.atomDimensions[i].dimDesc,\n        dimFlag: _this2.atomDimensions[i].dimFlag,\n        colCode: _this2.atomDimensions[i].colCode,\n        defaultCode: _this2.atomDimensions[i].defaultCode,\n        sourceCol: _this2.atomDimensions[i].sourceCol,\n        remark: _this2.atomDimensions[i].remark,\n        dimSeq: _this2.atomDimensions[i].dimSeq\n      };\n\n      if (_this2.atomDimensions[i].dimType === 'M') {\n        dimTypeM++;\n      }\n\n      if (_this2.atomDimensions[i].dimType === 'B') {\n        dimTypeB++;\n      }\n\n      if (_this2.atomDimensions[i].dimType === 'P') {\n        dimTypeP++;\n      }\n\n      if (_this2.atomDimensions[i].dimType !== null && _this2.atomDimensions[i].colCode === null) {\n        dimColeN++;\n      }\n\n      if (_this2.atomDimensions[i].dimType !== null) {\n        atomDimension.push(newValue);\n      } else {\n        dimType++;\n      }\n    };\n\n    for (var i = 0; i < this.atomDimensions.length; i++) {\n      var newValue;\n\n      var _ret = _loop(i);\n\n      if (_typeof(_ret) === \"object\") return _ret.v;\n    }\n\n    if (dimType == 0) {\n      if (dimColeN === 0) {\n        if (dimTypeM > 0) {\n          if (dimTypeB > 0) {\n            if (this.keepHistory === '1' && dimTypeP === 0) {\n              this.$message('保留历史时 必须选择一个日期');\n            } else {\n              this.$emit('func', atomDimension);\n              this.dimensionDialog = false;\n            }\n          } else {\n            this.$message('类型必须有一个是指标编号');\n          }\n        } else {\n          this.$message('类型至少有一个是度量');\n        }\n      } else {\n        this.$message('表列名不能为空');\n      }\n    } else {\n      this.$message('类型不能为空');\n    }\n  }), _defineProperty(_methods, \"addRow\", function addRow() {\n    var list = {\n      dimCode: this.dimCode,\n      dimDesc: this.dimDesc,\n      dimType: this.dimType,\n      dimFlag: this.dimFlag,\n      defaultCode: this.defaultCode,\n      sourceCol: this.sourceCol,\n      colCode: this.colCode,\n      remark: this.remark\n    };\n    this.atomDimensions.unshift(list);\n    console.log(this.bizTabCode);\n  }), _defineProperty(_methods, \"delData\", function delData() {\n    /* for (let i = 0; i < this.selectlistRow.length; i++) {*/\n    var atomRows = this.selectListRow;\n    var atomDs = this.atomDimensions;\n\n    for (var i = 0; i < atomRows.length; i++) {\n      for (var j = 0; j < atomDs.length; j++) {\n        if (atomRows[i] === atomDs[j]) {\n          this.atomDimensions.splice(j, 1);\n        }\n      }\n    }\n\n    this.atomDimensions.clearSelection();\n  }), _methods)\n};",null]}