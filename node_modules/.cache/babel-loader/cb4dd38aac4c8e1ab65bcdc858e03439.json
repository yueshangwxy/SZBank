{"remainingRequest":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\DataAssetPlatform\\Pncui-Ind\\src\\api\\indicators\\dashboard.js","dependencies":[{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\src\\api\\indicators\\dashboard.js","mtime":1647917138723},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647917124586},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1647917124178}],"contextDependencies":[],"result":["import request from '@/utils/request';\n/*import data from './dashboard-data.json'\r\nimport {getYesterday} from '@eladmin/utils/data_format'*/\n\n/*const mock = {\r\n    \"periodDate\": true,\r\n    \"productBal\": true,\r\n    \"productCustCount\": true,\r\n    \"trendAnalysis\": true,\r\n    \"depositAnalysis\": true,\r\n    \"loanFiveClass\": true,\r\n    \"badnessLoan\": true,\r\n    \"orgDlbalOrder\": true,\r\n    \"todoCount\": true,\r\n    \"subscribeRpt\": false,\r\n    \"getDbpPath\" : false\r\n}*/\n\nvar url = 'v1/core/dashboard';\n/*\r\nexport function periodDate() {\r\n    if (mock[\"periodDate\"]) {\r\n        return new Promise(function (resolve, reject) {\r\n            resolve({code: 0, data: getYesterday()})\r\n        })\r\n    } else {\r\n        return request({\r\n            url: url + '/period-date',\r\n            method: 'get'\r\n        })\r\n    }\r\n}\r\n\r\nexport function productBal(date) {\r\n    if (mock[\"productBal\"]) {\r\n        return new Promise(function (resolve, reject) {\r\n            resolve({code: 0, data: data.productBal})\r\n        })\r\n    } else {\r\n        return request({\r\n            url: url + '/product-bal/' + date,\r\n            method: 'get'\r\n        })\r\n    }\r\n}\r\n\r\nexport function productCustCount(date) {\r\n    if (mock[\"productCustCount\"]) {\r\n        return new Promise(function (resolve, reject) {\r\n            resolve({code: 0, data: data.productCustCount})\r\n        })\r\n    } else {\r\n        return request({\r\n            url: url + '/product-cust-count/' + date,\r\n            method: 'get'\r\n        })\r\n    }\r\n}\r\n\r\nexport function trendAnalysis(date) {\r\n    if (mock[\"trendAnalysis\"]) {\r\n        return new Promise(function (resolve, reject) {\r\n            resolve({code: 0, data: data.trendAnalysis})\r\n        })\r\n    } else {\r\n        return request({\r\n            url: url + '/trend-analysis/' + date,\r\n            method: 'get'\r\n        })\r\n    }\r\n}\r\n\r\nexport function depositAnalysis(date) {\r\n    if (mock[\"depositAnalysis\"]) {\r\n        return new Promise(function (resolve, reject) {\r\n            resolve({code: 0, data: data.depositAnalysis})\r\n        })\r\n    } else {\r\n        return request({\r\n            url: url + '/deposit-analysis/' + date,\r\n            method: 'get'\r\n        })\r\n    }\r\n}\r\n\r\nexport function loanFiveClass(date) {\r\n    if (mock[\"loanFiveClass\"]) {\r\n        return new Promise(function (resolve, reject) {\r\n            resolve({code: 0, data: data.loanFiveClass})\r\n        })\r\n    } else {\r\n        return request({\r\n            url: url + '/loan-five-class/' + date,\r\n            method: 'get'\r\n        })\r\n    }\r\n}\r\n\r\nexport function badnessLoan(date) {\r\n    if (mock[\"badnessLoan\"]) {\r\n        return new Promise(function (resolve, reject) {\r\n            resolve({code: 0, data: data.badnessLoan})\r\n        })\r\n    } else {\r\n        return request({\r\n            url: url + '/badness-loan/' + date,\r\n            method: 'get'\r\n        })\r\n    }\r\n}\r\n\r\nexport function orgDlbalOrder(date) {\r\n    if (mock[\"orgDlbalOrder\"]) {\r\n        return new Promise(function (resolve, reject) {\r\n            resolve({code: 0, data: data.orgDlbalOrder})\r\n        })\r\n    } else {\r\n        return request({\r\n            url: url + '/org-dlbal-order/' + date,\r\n            method: 'get'\r\n        })\r\n    }\r\n}*/\n\n/**\r\n * 待办事项数量查询\r\n * @returns {Promise<unknown>|AxiosPromise}\r\n */\n\nexport function todoCount() {\n  return request({\n    url: 'workflow/myTask/waitApprove',\n    method: 'get'\n  });\n}\n/**\r\n * 待办事项数量查询\r\n * @returns {Promise<unknown>|AxiosPromise}\r\n */\n\nexport function subscribeRpt() {\n  return request({\n    url: url + '/subscribe/subscribeRpt',\n    method: 'get'\n  });\n}\n/*\r\nexport function getDbpPath() {\r\n    if (mock[\"getDbpPath\"]) {\r\n        return new Promise(function (resolve, reject) {\r\n            resolve({code: 0, data: {total: 0}})\r\n        })\r\n    } else {\r\n        return request({\r\n            url: url + '/dbp/getDbpPath',\r\n            method: 'get'\r\n        })\r\n    }\r\n}*/",null]}