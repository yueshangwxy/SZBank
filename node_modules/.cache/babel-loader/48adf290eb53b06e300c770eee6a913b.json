{"remainingRequest":"D:\\code\\DataAssetPlatform000\\Pncui-SZBank\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\DataAssetPlatform000\\Pncui-SZBank\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\code\\DataAssetPlatform000\\Pncui-SZBank\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DataAssetPlatform000\\Pncui-SZBank\\src\\views\\indicators\\portalHome\\manager\\addUserDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\DataAssetPlatform000\\Pncui-SZBank\\src\\views\\indicators\\portalHome\\manager\\addUserDialog.vue","mtime":1654852398638},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-SZBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-SZBank\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-SZBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-SZBank\\node_modules\\vue-loader\\lib\\index.js","mtime":1650418886580}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: \"addUser\",\n  props: {\n    rowId: {\n      type: String,\n      default: \"\"\n    },\n    addUserVisible: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      // 对话框标题\n      title: \"当前角色\",\n      name: \"\",\n      // 树状图\n      filterText: \"\",\n      treeData: [],\n      defaultProps: {\n        id: \"id\",\n        children: \"children\",\n        label: \"name\"\n      },\n      // 表格\n      tableData: [],\n      propList: [],\n      // 分页\n      pageSize: 10,\n      total: 10,\n      currentPage: 1,\n      // tag标签\n      dynamicTags: [],\n      // 节点id\n      nodeId: \"\",\n      rowSelectLock: false\n    };\n  },\n  watch: {\n    addUserVisible: function addUserVisible(val) {\n      var _this = this;\n\n      if (val) {\n        this.name = \"\";\n        this.filterText = \"\";\n        this.initList();\n        this.dynamicTags = []; // 查询已有菜单\n\n        this.$api.queryUserByRole({\n          roleId: this.rowId\n        }).then(function (res) {\n          _this.dynamicTags = res;\n          var names = res.map(function (item) {\n            return item.username;\n          });\n\n          _this.tableData.forEach(function (row) {\n            if (names.includes(row.username)) {\n              _this.$nextTick(function () {\n                _this.rowSelectLock = true;\n\n                _this.$refs.multipleTable.toggleRowSelection(row, true);\n\n                _this.rowSelectLock = false;\n              });\n            }\n          });\n        });\n      }\n    },\n    // 节点过滤\n    filterText: function filterText(val) {\n      this.$refs.tree.filter(val);\n    }\n  },\n  created: function created() {\n    var _this2 = this;\n\n    this.$api.getSysDeptList({}).then(function (res) {\n      _this2.treeData = res.content;\n    });\n    this.propList = [{\n      prop: \"username\",\n      label: \"用户名\"\n    }, {\n      prop: \"nickName\",\n      label: \"姓名\"\n    }, {\n      prop: \"email\",\n      label: \"邮箱\"\n    }, {\n      prop: \"deptName\",\n      label: \"部门\"\n    }];\n  },\n  methods: {\n    // 从第一页开始查询\n    initList: function initList() {\n      this.currentPage = 1;\n      this.queryList();\n    },\n    // 分页\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.currentPage = val;\n      this.queryList();\n    },\n    // 列表查询\n    queryList: function queryList() {\n      var _this3 = this;\n\n      var request = {\n        deptId: this.nodeId,\n        keyWord: this.name,\n        size: this.pageSize,\n        page: this.currentPage\n      };\n      this.$api.qryUserListPage(request).then(function (res) {\n        _this3.tableData = res.data.records;\n        _this3.total = res.data.total;\n\n        var names = _this3.dynamicTags.map(function (item) {\n          return item.username;\n        });\n\n        res.data.records.forEach(function (row) {\n          if (names.includes(row.username)) {\n            _this3.$nextTick(function () {\n              // this.rowSelectLock = true;\n              _this3.$refs.multipleTable.toggleRowSelection(row, true); // this.rowSelectLock = false;\n\n            });\n          } else {\n            _this3.$nextTick(function () {\n              _this3.$refs.multipleTable.toggleRowSelection(row, false);\n            });\n          }\n        });\n      });\n    },\n    // 关闭对话框\n    closeAddUser: function closeAddUser() {\n      this.$emit(\"closeAddUser\");\n    },\n    // 确定\n    confirmAddUser: function confirmAddUser() {\n      var _this4 = this;\n\n      var ids = this.dynamicTags.map(function (item) {\n        return item.id;\n      });\n      this.$api.saveUserRoles({\n        roleId: this.rowId,\n        userIds: ids\n      }).then(function (res) {\n        if (res.code == 200 || res.code == 0) {\n          _this4.$message.success(res.msg);\n\n          _this4.$emit(\"confirmAddUser\");\n        } else {\n          _this4.$message.error(res.msg);\n        }\n      });\n    },\n    // 树状图过滤\n    filterNode: function filterNode(value, data) {\n      if (!value) return true;\n      return data.name.indexOf(value.toString()) !== -1;\n    },\n    // 树状图节点点击\n    handleNodeClick: function handleNodeClick(node, data) {\n      console.log(node);\n      this.nodeId = node.id;\n      this.initList();\n    },\n    // 复选框\n    handleSelectionChange: function handleSelectionChange(val) {\n      var _this5 = this;\n\n      if (this.rowSelectLock) return; // 当前页选择的用户\n\n      var currentPageIds = val.map(function (item) {\n        return item.id;\n      }); // 当前页没有选择的用户\n\n      var currentPageNoIds = [];\n      this.tableData.forEach(function (item) {\n        if (currentPageIds.indexOf(item.id) < 0) currentPageNoIds.push(item.id);\n      }); // 当前选择的所有用户\n\n      var allSelectIds = this.dynamicTags.map(function (item) {\n        return item.id;\n      });\n      val.map(function (item) {\n        // 添加\n        if (allSelectIds.indexOf(item.id) < 0) {\n          _this5.dynamicTags.push(item);\n        }\n      });\n      allSelectIds.forEach(function (item, key) {\n        if (currentPageNoIds.indexOf(item) > -1) {\n          _this5.$delete(_this5.dynamicTags, key);\n        }\n      });\n    },\n    // tag标签关闭\n    handleClose: function handleClose(tagId, index) {\n      var _this6 = this;\n\n      this.$delete(this.dynamicTags, index);\n      this.tableData.forEach(function (row) {\n        if (tagId === row.id) {\n          _this6.$refs.multipleTable.toggleRowSelection(row, false);\n        }\n      });\n    }\n  }\n};\nexports.default = _default;",null]}