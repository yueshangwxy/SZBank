{"remainingRequest":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\DataAssetPlatform\\Pncui-Ind\\mock\\generator\\generator.js","dependencies":[{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\mock\\generator\\generator.js","mtime":1647486390421},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647917124586},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1647917124178}],"contextDependencies":[],"result":["module.exports = [{\n  url: '/api/generator/tables',\n  type: 'get',\n  response: function response() {\n    var data = [{\n      \"coding\": \"utf8_general_ci\",\n      \"createTime\": \"2022-03-17 11:00:02\",\n      \"engine\": \"InnoDB\",\n      \"remark\": \"系统用户\",\n      \"tableName\": \"sys_user\"\n    }, {\n      \"coding\": \"utf8_general_ci\",\n      \"createTime\": \"2022-03-17 11:00:02\",\n      \"engine\": \"InnoDB\",\n      \"remark\": \"七牛云文件存储\",\n      \"tableName\": \"tool_qiniu_content\"\n    }, {\n      \"coding\": \"utf8_general_ci\",\n      \"createTime\": \"2022-03-17 11:00:02\",\n      \"engine\": \"InnoDB\",\n      \"remark\": \"-\",\n      \"tableName\": \"sys_users_jobs\"\n    }, {\n      \"coding\": \"utf8_general_ci\",\n      \"createTime\": \"2022-03-17 11:00:02\",\n      \"engine\": \"InnoDB\",\n      \"remark\": \"定时任务\",\n      \"tableName\": \"sys_quartz_job\"\n    }, {\n      \"coding\": \"utf8_general_ci\",\n      \"createTime\": \"2022-03-17 11:00:02\",\n      \"engine\": \"InnoDB\",\n      \"remark\": \"用户角色关联\",\n      \"tableName\": \"sys_users_roles\"\n    }, {\n      \"coding\": \"utf8_general_ci\",\n      \"createTime\": \"2022-03-17 11:00:02\",\n      \"engine\": \"InnoDB\",\n      \"remark\": \"定时任务日志\",\n      \"tableName\": \"sys_quartz_log\"\n    }, {\n      \"coding\": \"utf8_general_ci\",\n      \"createTime\": \"2022-03-17 11:00:02\",\n      \"engine\": \"InnoDB\",\n      \"remark\": \"支付宝配置类\",\n      \"tableName\": \"tool_alipay_config\"\n    }, {\n      \"coding\": \"utf8_general_ci\",\n      \"createTime\": \"2022-03-17 11:00:02\",\n      \"engine\": \"InnoDB\",\n      \"remark\": \"角色表\",\n      \"tableName\": \"sys_role\"\n    }, {\n      \"coding\": \"utf8_general_ci\",\n      \"createTime\": \"2022-03-17 11:00:02\",\n      \"engine\": \"InnoDB\",\n      \"remark\": \"邮箱配置\",\n      \"tableName\": \"tool_email_config\"\n    }, {\n      \"coding\": \"utf8_general_ci\",\n      \"createTime\": \"2022-03-17 11:00:02\",\n      \"engine\": \"InnoDB\",\n      \"remark\": \"角色部门关联\",\n      \"tableName\": \"sys_roles_depts\"\n    }];\n    return {\n      content: data,\n      totalElements: 27\n    };\n  }\n}, {\n  url: '/api/generator/sys_user/:id',\n  type: 'post',\n  response: function response() {\n    var data = [];\n    return [{\n      \"name\": \"Entity\",\n      \"content\": \"/*\\n*  Copyright 2019-2020 Zheng Jie\\n*\\n*  Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n*  you may not use this file except in compliance with the License.\\n*  You may obtain a copy of the License at\\n*\\n*  http://www.apache.org/licenses/LICENSE-2.0\\n*\\n*  Unless required by applicable law or agreed to in writing, software\\n*  distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n*  See the License for the specific language governing permissions and\\n*  limitations under the License.\\n*/\\npackage com.lencho.webstore.domain;\\n\\nimport lombok.Data;\\nimport cn.hutool.core.bean.BeanUtil;\\nimport io.swagger.annotations.ApiModelProperty;\\nimport cn.hutool.core.bean.copier.CopyOptions;\\nimport javax.persistence.*;\\nimport javax.validation.constraints.*;\\nimport javax.persistence.Entity;\\nimport javax.persistence.Table;\\nimport org.hibernate.annotations.*;\\nimport java.sql.Timestamp;\\nimport java.io.Serializable;\\n\\n/**\\n* @website https://el-admin.vip\\n* @description /\\n* @author Lencho\\n* @date 2022-03-17\\n**/\\n@Entity\\n@Data\\n@Table(name=\\\"sys_user\\\")\\npublic class User implements Serializable {\\n\\n    @Id\\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\\n    @Column(name = \\\"user_id\\\")\\n    @ApiModelProperty(value = \\\"ID\\\")\\n    private Long userId;\\n\\n    @Column(name = \\\"dept_id\\\")\\n    @ApiModelProperty(value = \\\"部门名称\\\")\\n    private Long deptId;\\n\\n    @Column(name = \\\"username\\\",unique = true)\\n    @UpdateTimestamp\\n    @ApiModelProperty(value = \\\"ユーザ名\\\")\\n    private String username;\\n\\n    @Column(name = \\\"nick_name\\\",nullable = false)\\n    @NotBlank\\n    @CreationTimestamp\\n    @ApiModelProperty(value = \\\"暱稱\\\")\\n    private String nickName;\\n\\n    @Column(name = \\\"gender\\\",nullable = false)\\n    @NotBlank\\n    @ApiModelProperty(value = \\\"性别1\\\")\\n    private String gender;\\n\\n    @Column(name = \\\"phone\\\")\\n    @ApiModelProperty(value = \\\"电话\\\")\\n    private String phone;\\n\\n    @Column(name = \\\"email\\\",unique = true)\\n    @ApiModelProperty(value = \\\"邮箱\\\")\\n    private String email;\\n\\n    @Column(name = \\\"avatar_name\\\")\\n    @ApiModelProperty(value = \\\"别名\\\")\\n    private String avatarName;\\n\\n    @Column(name = \\\"avatar_path\\\")\\n    @ApiModelProperty(value = \\\"别名地址\\\")\\n    private String avatarPath;\\n\\n    @Column(name = \\\"password\\\",nullable = false)\\n    @NotBlank\\n    @ApiModelProperty(value = \\\"密码\\\")\\n    private String password;\\n\\n    @Column(name = \\\"is_admin\\\",nullable = false)\\n    @NotNull\\n    @ApiModelProperty(value = \\\"是否为admin\\\")\\n    private Boolean isAdmin;\\n\\n    @Column(name = \\\"enabled\\\",nullable = false)\\n    @NotNull\\n    @ApiModelProperty(value = \\\"状态：1 啟動、0 關閉\\\")\\n    private Long enabled;\\n\\n    @Column(name = \\\"create_by\\\")\\n    @ApiModelProperty(value = \\\"创建者\\\")\\n    private String createBy;\\n\\n    @Column(name = \\\"update_by\\\")\\n    @ApiModelProperty(value = \\\"更新着\\\")\\n    private String updateBy;\\n\\n    @Column(name = \\\"pwd_reset_time\\\",nullable = false)\\n    @NotNull\\n    @ApiModelProperty(value = \\\"修改密码的时间\\\")\\n    private Timestamp pwdResetTime;\\n\\n    @Column(name = \\\"create_time\\\",nullable = false)\\n    @NotNull\\n    @UpdateTimestamp\\n    @ApiModelProperty(value = \\\"创建日期\\\")\\n    private Timestamp createTime;\\n\\n    @Column(name = \\\"update_time\\\",nullable = false)\\n    @NotNull\\n    @UpdateTimestamp\\n    @ApiModelProperty(value = \\\"更新时间2\\\")\\n    private Timestamp updateTime;\\n\\n    public void copy(User source){\\n        BeanUtil.copyProperties(source,this, CopyOptions.create().setIgnoreNullValue(true));\\n    }\\n}\"\n    }, {\n      \"name\": \"Dto\",\n      \"content\": \"/*\\n*  Copyright 2019-2020 Zheng Jie\\n*\\n*  Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n*  you may not use this file except in compliance with the License.\\n*  You may obtain a copy of the License at\\n*\\n*  http://www.apache.org/licenses/LICENSE-2.0\\n*\\n*  Unless required by applicable law or agreed to in writing, software\\n*  distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n*  See the License for the specific language governing permissions and\\n*  limitations under the License.\\n*/\\npackage com.lencho.webstore.service.dto;\\n\\nimport lombok.Data;\\nimport java.sql.Timestamp;\\nimport java.io.Serializable;\\n\\n/**\\n* @website https://el-admin.vip\\n* @description /\\n* @author Lencho\\n* @date 2022-03-17\\n**/\\n@Data\\npublic class UserDto implements Serializable {\\n\\n    /** ID */\\n    private Long userId;\\n\\n    /** 部门名称 */\\n    private Long deptId;\\n\\n    /** ユーザ名 */\\n    private String username;\\n\\n    /** 暱稱 */\\n    private String nickName;\\n\\n    /** 性别1 */\\n    private String gender;\\n\\n    /** 电话 */\\n    private String phone;\\n\\n    /** 邮箱 */\\n    private String email;\\n\\n    /** 别名 */\\n    private String avatarName;\\n\\n    /** 别名地址 */\\n    private String avatarPath;\\n\\n    /** 密码 */\\n    private String password;\\n\\n    /** 是否为admin */\\n    private Boolean isAdmin;\\n\\n    /** 状态：1 啟動、0 關閉 */\\n    private Long enabled;\\n\\n    /** 创建者 */\\n    private String createBy;\\n\\n    /** 更新着 */\\n    private String updateBy;\\n\\n    /** 修改密码的时间 */\\n    private Timestamp pwdResetTime;\\n\\n    /** 创建日期 */\\n    private Timestamp createTime;\\n\\n    /** 更新时间2 */\\n    private Timestamp updateTime;\\n}\"\n    }, {\n      \"name\": \"Mapper\",\n      \"content\": \"/*\\n*  Copyright 2019-2020 Zheng Jie\\n*\\n*  Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n*  you may not use this file except in compliance with the License.\\n*  You may obtain a copy of the License at\\n*\\n*  http://www.apache.org/licenses/LICENSE-2.0\\n*\\n*  Unless required by applicable law or agreed to in writing, software\\n*  distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n*  See the License for the specific language governing permissions and\\n*  limitations under the License.\\n*/\\npackage com.lencho.webstore.service.mapstruct;\\n\\nimport me.zhengjie.base.BaseMapper;\\nimport com.lencho.webstore.domain.User;\\nimport com.lencho.webstore.service.dto.UserDto;\\nimport org.mapstruct.Mapper;\\nimport org.mapstruct.ReportingPolicy;\\n\\n/**\\n* @website https://el-admin.vip\\n* @author Lencho\\n* @date 2022-03-17\\n**/\\n@Mapper(componentModel = \\\"spring\\\", unmappedTargetPolicy = ReportingPolicy.IGNORE)\\npublic interface UserMapper extends BaseMapper<UserDto, User> {\\n\\n}\"\n    }, {\n      \"name\": \"Controller\",\n      \"content\": \"/*\\n*  Copyright 2019-2020 Zheng Jie\\n*\\n*  Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n*  you may not use this file except in compliance with the License.\\n*  You may obtain a copy of the License at\\n*\\n*  http://www.apache.org/licenses/LICENSE-2.0\\n*\\n*  Unless required by applicable law or agreed to in writing, software\\n*  distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n*  See the License for the specific language governing permissions and\\n*  limitations under the License.\\n*/\\npackage com.lencho.webstore.rest;\\n\\nimport me.zhengjie.annotation.Log;\\nimport com.lencho.webstore.domain.User;\\nimport com.lencho.webstore.service.UserService;\\nimport com.lencho.webstore.service.dto.UserQueryCriteria;\\nimport org.springframework.data.domain.Pageable;\\nimport lombok.RequiredArgsConstructor;\\nimport org.springframework.http.HttpStatus;\\nimport org.springframework.http.ResponseEntity;\\nimport org.springframework.security.access.prepost.PreAuthorize;\\nimport org.springframework.validation.annotation.Validated;\\nimport org.springframework.web.bind.annotation.*;\\nimport io.swagger.annotations.*;\\nimport java.io.IOException;\\nimport javax.servlet.http.HttpServletResponse;\\n\\n/**\\n* @website https://el-admin.vip\\n* @author Lencho\\n* @date 2022-03-17\\n**/\\n@RestController\\n@RequiredArgsConstructor\\n@Api(tags = \\\"用户管理管理\\\")\\n@RequestMapping(\\\"/api/user\\\")\\npublic class UserController {\\n\\n    private final UserService userService;\\n\\n    @Log(\\\"导出数据\\\")\\n    @ApiOperation(\\\"导出数据\\\")\\n    @GetMapping(value = \\\"/download\\\")\\n    @PreAuthorize(\\\"@el.check('user:list')\\\")\\n    public void exportUser(HttpServletResponse response, UserQueryCriteria criteria) throws IOException {\\n        userService.download(userService.queryAll(criteria), response);\\n    }\\n\\n    @GetMapping\\n    @Log(\\\"查询用户管理\\\")\\n    @ApiOperation(\\\"查询用户管理\\\")\\n    @PreAuthorize(\\\"@el.check('user:list')\\\")\\n    public ResponseEntity<Object> queryUser(UserQueryCriteria criteria, Pageable pageable){\\n        return new ResponseEntity<>(userService.queryAll(criteria,pageable),HttpStatus.OK);\\n    }\\n\\n    @PostMapping\\n    @Log(\\\"新增用户管理\\\")\\n    @ApiOperation(\\\"新增用户管理\\\")\\n    @PreAuthorize(\\\"@el.check('user:add')\\\")\\n    public ResponseEntity<Object> createUser(@Validated @RequestBody User resources){\\n        return new ResponseEntity<>(userService.create(resources),HttpStatus.CREATED);\\n    }\\n\\n    @PutMapping\\n    @Log(\\\"修改用户管理\\\")\\n    @ApiOperation(\\\"修改用户管理\\\")\\n    @PreAuthorize(\\\"@el.check('user:edit')\\\")\\n    public ResponseEntity<Object> updateUser(@Validated @RequestBody User resources){\\n        userService.update(resources);\\n        return new ResponseEntity<>(HttpStatus.NO_CONTENT);\\n    }\\n\\n    @DeleteMapping\\n    @Log(\\\"删除用户管理\\\")\\n    @ApiOperation(\\\"删除用户管理\\\")\\n    @PreAuthorize(\\\"@el.check('user:del')\\\")\\n    public ResponseEntity<Object> deleteUser(@RequestBody Long[] ids) {\\n        userService.deleteAll(ids);\\n        return new ResponseEntity<>(HttpStatus.OK);\\n    }\\n}\"\n    }, {\n      \"name\": \"QueryCriteria\",\n      \"content\": \"/*\\n*  Copyright 2019-2020 Zheng Jie\\n*\\n*  Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n*  you may not use this file except in compliance with the License.\\n*  You may obtain a copy of the License at\\n*\\n*  http://www.apache.org/licenses/LICENSE-2.0\\n*\\n*  Unless required by applicable law or agreed to in writing, software\\n*  distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n*  See the License for the specific language governing permissions and\\n*  limitations under the License.\\n*/\\npackage com.lencho.webstore.service.dto;\\n\\nimport lombok.Data;\\nimport java.sql.Timestamp;\\nimport java.util.List;\\nimport me.zhengjie.annotation.Query;\\n\\n/**\\n* @website https://el-admin.vip\\n* @author Lencho\\n* @date 2022-03-17\\n**/\\n@Data\\npublic class UserQueryCriteria{\\n\\n    /** 模糊 */\\n    @Query(type = Query.Type.INNER_LIKE)\\n    private String username;\\n\\n    /** 精确 */\\n    @Query\\n    private Boolean isAdmin;\\n\\n    /** 精确 */\\n    @Query\\n    private Long enabled;\\n\\n    /** 大于等于 */\\n    @Query(type = Query.Type.GREATER_THAN)\\n    private Timestamp createTime;\\n    /** BETWEEN */\\n    @Query(type = Query.Type.BETWEEN)\\n    private List<String> gender;\\n    /** BETWEEN */\\n    @Query(type = Query.Type.BETWEEN)\\n    private List<String> phone;\\n    /** BETWEEN */\\n    @Query(type = Query.Type.BETWEEN)\\n    private List<String> email;\\n    /** BETWEEN */\\n    @Query(type = Query.Type.BETWEEN)\\n    private List<String> avatarName;\\n    /** BETWEEN */\\n    @Query(type = Query.Type.BETWEEN)\\n    private List<String> avatarPath;\\n    /** BETWEEN */\\n    @Query(type = Query.Type.BETWEEN)\\n    private List<Timestamp> pwdResetTime;\\n    /** BETWEEN */\\n    @Query(type = Query.Type.BETWEEN)\\n    private List<Timestamp> updateTime;\\n}\"\n    }, {\n      \"name\": \"Service\",\n      \"content\": \"/*\\n*  Copyright 2019-2020 Zheng Jie\\n*\\n*  Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n*  you may not use this file except in compliance with the License.\\n*  You may obtain a copy of the License at\\n*\\n*  http://www.apache.org/licenses/LICENSE-2.0\\n*\\n*  Unless required by applicable law or agreed to in writing, software\\n*  distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n*  See the License for the specific language governing permissions and\\n*  limitations under the License.\\n*/\\npackage com.lencho.webstore.service;\\n\\nimport com.lencho.webstore.domain.User;\\nimport com.lencho.webstore.service.dto.UserDto;\\nimport com.lencho.webstore.service.dto.UserQueryCriteria;\\nimport org.springframework.data.domain.Pageable;\\nimport java.util.Map;\\nimport java.util.List;\\nimport java.io.IOException;\\nimport javax.servlet.http.HttpServletResponse;\\n\\n/**\\n* @website https://el-admin.vip\\n* @description 服务接口\\n* @author Lencho\\n* @date 2022-03-17\\n**/\\npublic interface UserService {\\n\\n    /**\\n    * 查询数据分页\\n    * @param criteria 条件\\n    * @param pageable 分页参数\\n    * @return Map<String,Object>\\n    */\\n    Map<String,Object> queryAll(UserQueryCriteria criteria, Pageable pageable);\\n\\n    /**\\n    * 查询所有数据不分页\\n    * @param criteria 条件参数\\n    * @return List<UserDto>\\n    */\\n    List<UserDto> queryAll(UserQueryCriteria criteria);\\n\\n    /**\\n     * 根据ID查询\\n     * @param userId ID\\n     * @return UserDto\\n     */\\n    UserDto findById(Long userId);\\n\\n    /**\\n    * 创建\\n    * @param resources /\\n    * @return UserDto\\n    */\\n    UserDto create(User resources);\\n\\n    /**\\n    * 编辑\\n    * @param resources /\\n    */\\n    void update(User resources);\\n\\n    /**\\n    * 多选删除\\n    * @param ids /\\n    */\\n    void deleteAll(Long[] ids);\\n\\n    /**\\n    * 导出数据\\n    * @param all 待导出的数据\\n    * @param response /\\n    * @throws IOException /\\n    */\\n    void download(List<UserDto> all, HttpServletResponse response) throws IOException;\\n}\"\n    }, {\n      \"name\": \"ServiceImpl\",\n      \"content\": \"/*\\n*  Copyright 2019-2020 Zheng Jie\\n*\\n*  Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n*  you may not use this file except in compliance with the License.\\n*  You may obtain a copy of the License at\\n*\\n*  http://www.apache.org/licenses/LICENSE-2.0\\n*\\n*  Unless required by applicable law or agreed to in writing, software\\n*  distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n*  See the License for the specific language governing permissions and\\n*  limitations under the License.\\n*/\\npackage com.lencho.webstore.service.impl;\\n\\nimport com.lencho.webstore.domain.User;\\nimport me.zhengjie.utils.ValidationUtil;\\nimport me.zhengjie.utils.FileUtil;\\nimport lombok.RequiredArgsConstructor;\\nimport com.lencho.webstore.repository.UserRepository;\\nimport com.lencho.webstore.service.UserService;\\nimport com.lencho.webstore.service.dto.UserDto;\\nimport com.lencho.webstore.service.dto.UserQueryCriteria;\\nimport com.lencho.webstore.service.mapstruct.UserMapper;\\nimport org.springframework.stereotype.Service;\\nimport org.springframework.transaction.annotation.Transactional;\\nimport org.springframework.data.domain.Page;\\nimport org.springframework.data.domain.Pageable;\\nimport me.zhengjie.utils.PageUtil;\\nimport me.zhengjie.utils.QueryHelp;\\nimport java.util.List;\\nimport java.util.Map;\\nimport java.io.IOException;\\nimport javax.servlet.http.HttpServletResponse;\\nimport java.util.ArrayList;\\nimport java.util.LinkedHashMap;\\n\\n/**\\n* @website https://el-admin.vip\\n* @description 服务实现\\n* @author Lencho\\n* @date 2022-03-17\\n**/\\n@Service\\n@RequiredArgsConstructor\\npublic class UserServiceImpl implements UserService {\\n\\n    private final UserRepository userRepository;\\n    private final UserMapper userMapper;\\n\\n    @Override\\n    public Map<String,Object> queryAll(UserQueryCriteria criteria, Pageable pageable){\\n        Page<User> page = userRepository.findAll((root, criteriaQuery, criteriaBuilder) -> QueryHelp.getPredicate(root,criteria,criteriaBuilder),pageable);\\n        return PageUtil.toPage(page.map(userMapper::toDto));\\n    }\\n\\n    @Override\\n    public List<UserDto> queryAll(UserQueryCriteria criteria){\\n        return userMapper.toDto(userRepository.findAll((root, criteriaQuery, criteriaBuilder) -> QueryHelp.getPredicate(root,criteria,criteriaBuilder)));\\n    }\\n\\n    @Override\\n    @Transactional\\n    public UserDto findById(Long userId) {\\n        User user = userRepository.findById(userId).orElseGet(User::new);\\n        ValidationUtil.isNull(user.getUserId(),\\\"User\\\",\\\"userId\\\",userId);\\n        return userMapper.toDto(user);\\n    }\\n\\n    @Override\\n    @Transactional(rollbackFor = Exception.class)\\n    public UserDto create(User resources) {\\n        if(userRepository.findByUsername(resources.getUsername()) != null){\\n            throw new EntityExistException(User.class,\\\"username\\\",resources.getUsername());\\n        }\\n        if(userRepository.findByEmail(resources.getEmail()) != null){\\n            throw new EntityExistException(User.class,\\\"email\\\",resources.getEmail());\\n        }\\n        return userMapper.toDto(userRepository.save(resources));\\n    }\\n\\n    @Override\\n    @Transactional(rollbackFor = Exception.class)\\n    public void update(User resources) {\\n        User user = userRepository.findById(resources.getUserId()).orElseGet(User::new);\\n        ValidationUtil.isNull( user.getUserId(),\\\"User\\\",\\\"id\\\",resources.getUserId());\\n        user1 = userRepository.findByUsername(resources.getUsername());\\n        if(user1 != null && !user1.getUserId().equals(user.getUserId())){\\n            throw new EntityExistException(User.class,\\\"username\\\",resources.getUsername());\\n        }\\n        user1 = userRepository.findByEmail(resources.getEmail());\\n        if(user1 != null && !user1.getUserId().equals(user.getUserId())){\\n            throw new EntityExistException(User.class,\\\"email\\\",resources.getEmail());\\n        }\\n        user.copy(resources);\\n        userRepository.save(user);\\n    }\\n\\n    @Override\\n    public void deleteAll(Long[] ids) {\\n        for (Long userId : ids) {\\n            userRepository.deleteById(userId);\\n        }\\n    }\\n\\n    @Override\\n    public void download(List<UserDto> all, HttpServletResponse response) throws IOException {\\n        List<Map<String, Object>> list = new ArrayList<>();\\n        for (UserDto user : all) {\\n            Map<String,Object> map = new LinkedHashMap<>();\\n            map.put(\\\"部门名称\\\", user.getDeptId());\\n            map.put(\\\"ユーザ名\\\", user.getUsername());\\n            map.put(\\\"暱稱\\\", user.getNickName());\\n            map.put(\\\"性别1\\\", user.getGender());\\n            map.put(\\\"电话\\\", user.getPhone());\\n            map.put(\\\"邮箱\\\", user.getEmail());\\n            map.put(\\\"别名\\\", user.getAvatarName());\\n            map.put(\\\"别名地址\\\", user.getAvatarPath());\\n            map.put(\\\"密码\\\", user.getPassword());\\n            map.put(\\\"是否为admin\\\", user.getIsAdmin());\\n            map.put(\\\"状态：1 啟動、0 關閉\\\", user.getEnabled());\\n            map.put(\\\"创建者\\\", user.getCreateBy());\\n            map.put(\\\"更新着\\\", user.getUpdateBy());\\n            map.put(\\\"修改密码的时间\\\", user.getPwdResetTime());\\n            map.put(\\\"创建日期\\\", user.getCreateTime());\\n            map.put(\\\"更新时间2\\\", user.getUpdateTime());\\n            list.add(map);\\n        }\\n        FileUtil.downloadExcel(list, response);\\n    }\\n}\"\n    }, {\n      \"name\": \"Repository\",\n      \"content\": \"/*\\n*  Copyright 2019-2020 Zheng Jie\\n*\\n*  Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n*  you may not use this file except in compliance with the License.\\n*  You may obtain a copy of the License at\\n*\\n*  http://www.apache.org/licenses/LICENSE-2.0\\n*\\n*  Unless required by applicable law or agreed to in writing, software\\n*  distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n*  See the License for the specific language governing permissions and\\n*  limitations under the License.\\n*/\\npackage com.lencho.webstore.repository;\\n\\nimport com.lencho.webstore.domain.User;\\nimport org.springframework.data.jpa.repository.JpaRepository;\\nimport org.springframework.data.jpa.repository.JpaSpecificationExecutor;\\n\\n/**\\n* @website https://el-admin.vip\\n* @author Lencho\\n* @date 2022-03-17\\n**/\\npublic interface UserRepository extends JpaRepository<User, Long>, JpaSpecificationExecutor<User> {\\n    /**\\n    * 根据 Username 查询\\n    * @param username /\\n    * @return /\\n    */\\n    User findByUsername(String username);\\n    /**\\n    * 根据 Email 查询\\n    * @param email /\\n    * @return /\\n    */\\n    User findByEmail(String email);\\n}\"\n    }, {\n      \"name\": \"index\",\n      \"index\": \"<template>\\n  <div class=\\\"app-container\\\">\\n    <!--工具栏-->\\n    <div class=\\\"head-container\\\">\\n      <div v-if=\\\"crud.props.searchToggle\\\">\\n        <!-- 搜索 -->\\n        <label class=\\\"el-form-item-label\\\">ユーザ名</label>\\n        <el-input v-model=\\\"query.username\\\" clearable placeholder=\\\"ユーザ名\\\" style=\\\"width: 185px;\\\" class=\\\"filter-item\\\" @keyup.enter.native=\\\"crud.toQuery\\\" />\\n        <label class=\\\"el-form-item-label\\\">是否为admin</label>\\n        <el-input v-model=\\\"query.isAdmin\\\" clearable placeholder=\\\"是否为admin\\\" style=\\\"width: 185px;\\\" class=\\\"filter-item\\\" @keyup.enter.native=\\\"crud.toQuery\\\" />\\n        <label class=\\\"el-form-item-label\\\">状态：1 啟動、0 關閉</label>\\n        <el-input v-model=\\\"query.enabled\\\" clearable placeholder=\\\"状态：1 啟動、0 關閉\\\" style=\\\"width: 185px;\\\" class=\\\"filter-item\\\" @keyup.enter.native=\\\"crud.toQuery\\\" />\\n        <label class=\\\"el-form-item-label\\\">创建日期</label>\\n        <el-input v-model=\\\"query.createTime\\\" clearable placeholder=\\\"创建日期\\\" style=\\\"width: 185px;\\\" class=\\\"filter-item\\\" @keyup.enter.native=\\\"crud.toQuery\\\" />\\n        <date-range-picker\\n          v-model=\\\"query.gender\\\"\\n          start-placeholder=\\\"genderStart\\\"\\n          end-placeholder=\\\"genderStart\\\"\\n          class=\\\"date-item\\\"\\n        />\\n        <date-range-picker\\n          v-model=\\\"query.phone\\\"\\n          start-placeholder=\\\"phoneStart\\\"\\n          end-placeholder=\\\"phoneStart\\\"\\n          class=\\\"date-item\\\"\\n        />\\n        <date-range-picker\\n          v-model=\\\"query.email\\\"\\n          start-placeholder=\\\"emailStart\\\"\\n          end-placeholder=\\\"emailStart\\\"\\n          class=\\\"date-item\\\"\\n        />\\n        <date-range-picker\\n          v-model=\\\"query.avatarName\\\"\\n          start-placeholder=\\\"avatarNameStart\\\"\\n          end-placeholder=\\\"avatarNameStart\\\"\\n          class=\\\"date-item\\\"\\n        />\\n        <date-range-picker\\n          v-model=\\\"query.avatarPath\\\"\\n          start-placeholder=\\\"avatarPathStart\\\"\\n          end-placeholder=\\\"avatarPathStart\\\"\\n          class=\\\"date-item\\\"\\n        />\\n        <date-range-picker\\n          v-model=\\\"query.pwdResetTime\\\"\\n          start-placeholder=\\\"pwdResetTimeStart\\\"\\n          end-placeholder=\\\"pwdResetTimeStart\\\"\\n          class=\\\"date-item\\\"\\n        />\\n        <date-range-picker\\n          v-model=\\\"query.updateTime\\\"\\n          start-placeholder=\\\"updateTimeStart\\\"\\n          end-placeholder=\\\"updateTimeStart\\\"\\n          class=\\\"date-item\\\"\\n        />\\n        <rrOperation :crud=\\\"crud\\\" />\\n      </div>\\n      <!--如果想在工具栏加入更多按钮，可以使用插槽方式， slot = 'left' or 'right'-->\\n      <crudOperation :permission=\\\"permission\\\" />\\n      <!--表单组件-->\\n      <el-dialog :close-on-click-modal=\\\"false\\\" :before-close=\\\"crud.cancelCU\\\" :visible.sync=\\\"crud.status.cu > 0\\\" :title=\\\"crud.status.title\\\" width=\\\"500px\\\">\\n        <el-form ref=\\\"form\\\" :model=\\\"form\\\" :rules=\\\"rules\\\" size=\\\"small\\\" label-width=\\\"80px\\\">\\n          <el-form-item label=\\\"ユーザ名\\\">\\n            <el-input v-model=\\\"form.username\\\" :rows=\\\"3\\\" type=\\\"textarea\\\" style=\\\"width: 370px;\\\" />\\n          </el-form-item>\\n          <el-form-item label=\\\"暱稱\\\" prop=\\\"nickName\\\">\\n            <el-select v-model=\\\"form.nickName\\\" filterable placeholder=\\\"请选择\\\">\\n              <el-option\\n                v-for=\\\"item in dict.dept_status\\\"\\n                :key=\\\"item.id\\\"\\n                :label=\\\"item.label\\\"\\n                :value=\\\"item.value\\\" />\\n            </el-select>\\n          </el-form-item>\\n          <el-form-item label=\\\"性别1\\\" prop=\\\"gender\\\">\\n            <el-date-picker v-model=\\\"form.gender\\\" type=\\\"datetime\\\" style=\\\"width: 370px;\\\" />\\n          </el-form-item>\\n          <el-form-item label=\\\"电话\\\">\\n            <el-input v-model=\\\"form.phone\\\" style=\\\"width: 370px;\\\" />\\n          </el-form-item>\\n          <el-form-item label=\\\"邮箱\\\">\\n            <el-input v-model=\\\"form.email\\\" style=\\\"width: 370px;\\\" />\\n          </el-form-item>\\n          <el-form-item label=\\\"密码\\\" prop=\\\"password\\\">\\n            <el-date-picker v-model=\\\"form.password\\\" type=\\\"datetime\\\" style=\\\"width: 370px;\\\" />\\n          </el-form-item>\\n          <el-form-item label=\\\"是否为admin\\\" prop=\\\"isAdmin\\\">\\n            <el-select v-model=\\\"form.isAdmin\\\" filterable placeholder=\\\"请选择\\\">\\n              <el-option\\n                v-for=\\\"item in dict.user_status\\\"\\n                :key=\\\"item.id\\\"\\n                :label=\\\"item.label\\\"\\n                :value=\\\"item.value\\\" />\\n            </el-select>\\n          </el-form-item>\\n          <el-form-item label=\\\"状态：1 啟動、0 關閉\\\" prop=\\\"enabled\\\">\\n            <el-select v-model=\\\"form.enabled\\\" filterable placeholder=\\\"请选择\\\">\\n              <el-option\\n                v-for=\\\"item in dict.user_status\\\"\\n                :key=\\\"item.id\\\"\\n                :label=\\\"item.label\\\"\\n                :value=\\\"item.value\\\" />\\n            </el-select>\\n          </el-form-item>\\n          <el-form-item label=\\\"修改密码的时间\\\" prop=\\\"pwdResetTime\\\">\\n            <el-date-picker v-model=\\\"form.pwdResetTime\\\" type=\\\"datetime\\\" style=\\\"width: 370px;\\\" />\\n          </el-form-item>\\n          <el-form-item label=\\\"创建日期\\\" prop=\\\"createTime\\\">\\n            <el-date-picker v-model=\\\"form.createTime\\\" type=\\\"datetime\\\" style=\\\"width: 370px;\\\" />\\n          </el-form-item>\\n          <el-form-item label=\\\"更新时间2\\\" prop=\\\"updateTime\\\">\\n            <el-date-picker v-model=\\\"form.updateTime\\\" type=\\\"datetime\\\" style=\\\"width: 370px;\\\" />\\n          </el-form-item>\\n        </el-form>\\n        <div slot=\\\"footer\\\" class=\\\"dialog-footer\\\">\\n          <el-button type=\\\"text\\\" @click=\\\"crud.cancelCU\\\">取消</el-button>\\n          <el-button :loading=\\\"crud.status.cu === 2\\\" type=\\\"primary\\\" @click=\\\"crud.submitCU\\\">确认</el-button>\\n        </div>\\n      </el-dialog>\\n      <!--表格渲染-->\\n      <el-table ref=\\\"table\\\" v-loading=\\\"crud.loading\\\" :data=\\\"crud.data\\\" size=\\\"small\\\" style=\\\"width: 100%;\\\" @selection-change=\\\"crud.selectionChangeHandler\\\">\\n        <el-table-column type=\\\"selection\\\" width=\\\"55\\\" />\\n        <el-table-column prop=\\\"userId\\\" label=\\\"ID\\\" />\\n        <el-table-column prop=\\\"deptId\\\" label=\\\"部门名称\\\" />\\n        <el-table-column prop=\\\"username\\\" label=\\\"ユーザ名\\\">\\n          <template slot-scope=\\\"scope\\\">\\n            {{ dict.label.user_status[scope.row.username] }}\\n          </template>\\n        </el-table-column>\\n        <el-table-column prop=\\\"nickName\\\" label=\\\"暱稱\\\">\\n          <template slot-scope=\\\"scope\\\">\\n            {{ dict.label.dept_status[scope.row.nickName] }}\\n          </template>\\n        </el-table-column>\\n        <el-table-column prop=\\\"gender\\\" label=\\\"性别1\\\" />\\n        <el-table-column prop=\\\"phone\\\" label=\\\"电话\\\" />\\n        <el-table-column prop=\\\"email\\\" label=\\\"邮箱\\\" />\\n        <el-table-column prop=\\\"avatarName\\\" label=\\\"别名\\\" />\\n        <el-table-column prop=\\\"avatarPath\\\" label=\\\"别名地址\\\" />\\n        <el-table-column prop=\\\"password\\\" label=\\\"密码\\\" />\\n        <el-table-column prop=\\\"isAdmin\\\" label=\\\"是否为admin\\\">\\n          <template slot-scope=\\\"scope\\\">\\n            {{ dict.label.user_status[scope.row.isAdmin] }}\\n          </template>\\n        </el-table-column>\\n        <el-table-column v-if=\\\"checkPer(['admin','user:edit','user:del'])\\\" label=\\\"操作\\\" width=\\\"150px\\\" align=\\\"center\\\">\\n          <template slot-scope=\\\"scope\\\">\\n            <udOperation\\n              :data=\\\"scope.row\\\"\\n              :permission=\\\"permission\\\"\\n            />\\n          </template>\\n        </el-table-column>\\n      </el-table>\\n      <!--分页组件-->\\n      <pagination />\\n    </div>\\n  </div>\\n</template>\\n\\n<script>\\nimport crudUser from '@/api/user'\\nimport CRUD, { presenter, header, form, crud } from '@crud/crud'\\nimport rrOperation from '@crud/RR.operation'\\nimport crudOperation from '@crud/CRUD.operation'\\nimport udOperation from '@crud/UD.operation'\\nimport pagination from '@crud/Pagination'\\n\\nconst defaultForm = { userId: null, deptId: null, username: null, nickName: null, gender: null, phone: null, email: null, avatarName: null, avatarPath: null, password: null, isAdmin: null, enabled: null, createBy: null, updateBy: null, pwdResetTime: null, createTime: null, updateTime: null }\\nexport default {\\n  name: 'User',\\n  components: { pagination, crudOperation, rrOperation, udOperation },\\n  mixins: [presenter(), header(), form(defaultForm), crud()],\\n  dicts: ['user_status', 'dept_status', 'user_status', 'user_status'],\\n  cruds() {\\n    return CRUD({ title: '用户管理', url: 'api/user', idField: 'userId', sort: 'userId,desc', crudMethod: { ...crudUser }})\\n  },\\n  data() {\\n    return {\\n      permission: {\\n        add: ['admin', 'user:add'],\\n        edit: ['admin', 'user:edit'],\\n        del: ['admin', 'user:del']\\n      },\\n      rules: {\\n        nickName: [\\n          { required: true, message: '暱稱不能为空', trigger: 'blur' }\\n        ],\\n        gender: [\\n          { required: true, message: '性别1不能为空', trigger: 'blur' }\\n        ],\\n        password: [\\n          { required: true, message: '密码不能为空', trigger: 'blur' }\\n        ],\\n        isAdmin: [\\n          { required: true, message: '是否为admin不能为空', trigger: 'blur' }\\n        ],\\n        enabled: [\\n          { required: true, message: '状态：1 啟動、0 關閉不能为空', trigger: 'blur' }\\n        ],\\n        pwdResetTime: [\\n          { required: true, message: '修改密码的时间不能为空', trigger: 'blur' }\\n        ],\\n        createTime: [\\n          { required: true, message: '创建日期不能为空', trigger: 'blur' }\\n        ],\\n        updateTime: [\\n          { required: true, message: '更新时间2不能为空', trigger: 'blur' }\\n        ]\\n      },\\n      queryTypeOptions: [\\n        { key: 'username', display_name: 'ユーザ名' },\\n        { key: 'isAdmin', display_name: '是否为admin' },\\n        { key: 'enabled', display_name: '状态：1 啟動、0 關閉' },\\n        { key: 'createTime', display_name: '创建日期' }\\n      ]\\n    }\\n  },\\n  methods: {\\n    // 钩子：在获取表格数据之前执行，false 则代表不获取数据\\n    [CRUD.HOOK.beforeRefresh]() {\\n      return true\\n    }\\n  }\\n}\\n</script>\\n\\n<style scoped>\\n\\n</style>\\n\",\n      \"content\": \"<template>\\n  <div class=\\\"app-container\\\">\\n    <!--工具栏-->\\n    <div class=\\\"head-container\\\">\\n      <div v-if=\\\"crud.props.searchToggle\\\">\\n        <!-- 搜索 -->\\n        <label class=\\\"el-form-item-label\\\">ユーザ名</label>\\n        <el-input v-model=\\\"query.username\\\" clearable placeholder=\\\"ユーザ名\\\" style=\\\"width: 185px;\\\" class=\\\"filter-item\\\" @keyup.enter.native=\\\"crud.toQuery\\\" />\\n        <label class=\\\"el-form-item-label\\\">是否为admin</label>\\n        <el-input v-model=\\\"query.isAdmin\\\" clearable placeholder=\\\"是否为admin\\\" style=\\\"width: 185px;\\\" class=\\\"filter-item\\\" @keyup.enter.native=\\\"crud.toQuery\\\" />\\n        <label class=\\\"el-form-item-label\\\">状态：1 啟動、0 關閉</label>\\n        <el-input v-model=\\\"query.enabled\\\" clearable placeholder=\\\"状态：1 啟動、0 關閉\\\" style=\\\"width: 185px;\\\" class=\\\"filter-item\\\" @keyup.enter.native=\\\"crud.toQuery\\\" />\\n        <label class=\\\"el-form-item-label\\\">创建日期</label>\\n        <el-input v-model=\\\"query.createTime\\\" clearable placeholder=\\\"创建日期\\\" style=\\\"width: 185px;\\\" class=\\\"filter-item\\\" @keyup.enter.native=\\\"crud.toQuery\\\" />\\n        <date-range-picker\\n          v-model=\\\"query.gender\\\"\\n          start-placeholder=\\\"genderStart\\\"\\n          end-placeholder=\\\"genderStart\\\"\\n          class=\\\"date-item\\\"\\n        />\\n        <date-range-picker\\n          v-model=\\\"query.phone\\\"\\n          start-placeholder=\\\"phoneStart\\\"\\n          end-placeholder=\\\"phoneStart\\\"\\n          class=\\\"date-item\\\"\\n        />\\n        <date-range-picker\\n          v-model=\\\"query.email\\\"\\n          start-placeholder=\\\"emailStart\\\"\\n          end-placeholder=\\\"emailStart\\\"\\n          class=\\\"date-item\\\"\\n        />\\n        <date-range-picker\\n          v-model=\\\"query.avatarName\\\"\\n          start-placeholder=\\\"avatarNameStart\\\"\\n          end-placeholder=\\\"avatarNameStart\\\"\\n          class=\\\"date-item\\\"\\n        />\\n        <date-range-picker\\n          v-model=\\\"query.avatarPath\\\"\\n          start-placeholder=\\\"avatarPathStart\\\"\\n          end-placeholder=\\\"avatarPathStart\\\"\\n          class=\\\"date-item\\\"\\n        />\\n        <date-range-picker\\n          v-model=\\\"query.pwdResetTime\\\"\\n          start-placeholder=\\\"pwdResetTimeStart\\\"\\n          end-placeholder=\\\"pwdResetTimeStart\\\"\\n          class=\\\"date-item\\\"\\n        />\\n        <date-range-picker\\n          v-model=\\\"query.updateTime\\\"\\n          start-placeholder=\\\"updateTimeStart\\\"\\n          end-placeholder=\\\"updateTimeStart\\\"\\n          class=\\\"date-item\\\"\\n        />\\n        <rrOperation :crud=\\\"crud\\\" />\\n      </div>\\n      <!--如果想在工具栏加入更多按钮，可以使用插槽方式， slot = 'left' or 'right'-->\\n      <crudOperation :permission=\\\"permission\\\" />\\n      <!--表单组件-->\\n      <el-dialog :close-on-click-modal=\\\"false\\\" :before-close=\\\"crud.cancelCU\\\" :visible.sync=\\\"crud.status.cu > 0\\\" :title=\\\"crud.status.title\\\" width=\\\"500px\\\">\\n        <el-form ref=\\\"form\\\" :model=\\\"form\\\" :rules=\\\"rules\\\" size=\\\"small\\\" label-width=\\\"80px\\\">\\n          <el-form-item label=\\\"ユーザ名\\\">\\n            <el-input v-model=\\\"form.username\\\" :rows=\\\"3\\\" type=\\\"textarea\\\" style=\\\"width: 370px;\\\" />\\n          </el-form-item>\\n          <el-form-item label=\\\"暱稱\\\" prop=\\\"nickName\\\">\\n            <el-select v-model=\\\"form.nickName\\\" filterable placeholder=\\\"请选择\\\">\\n              <el-option\\n                v-for=\\\"item in dict.dept_status\\\"\\n                :key=\\\"item.id\\\"\\n                :label=\\\"item.label\\\"\\n                :value=\\\"item.value\\\" />\\n            </el-select>\\n          </el-form-item>\\n          <el-form-item label=\\\"性别1\\\" prop=\\\"gender\\\">\\n            <el-date-picker v-model=\\\"form.gender\\\" type=\\\"datetime\\\" style=\\\"width: 370px;\\\" />\\n          </el-form-item>\\n          <el-form-item label=\\\"电话\\\">\\n            <el-input v-model=\\\"form.phone\\\" style=\\\"width: 370px;\\\" />\\n          </el-form-item>\\n          <el-form-item label=\\\"邮箱\\\">\\n            <el-input v-model=\\\"form.email\\\" style=\\\"width: 370px;\\\" />\\n          </el-form-item>\\n          <el-form-item label=\\\"密码\\\" prop=\\\"password\\\">\\n            <el-date-picker v-model=\\\"form.password\\\" type=\\\"datetime\\\" style=\\\"width: 370px;\\\" />\\n          </el-form-item>\\n          <el-form-item label=\\\"是否为admin\\\" prop=\\\"isAdmin\\\">\\n            <el-select v-model=\\\"form.isAdmin\\\" filterable placeholder=\\\"请选择\\\">\\n              <el-option\\n                v-for=\\\"item in dict.user_status\\\"\\n                :key=\\\"item.id\\\"\\n                :label=\\\"item.label\\\"\\n                :value=\\\"item.value\\\" />\\n            </el-select>\\n          </el-form-item>\\n          <el-form-item label=\\\"状态：1 啟動、0 關閉\\\" prop=\\\"enabled\\\">\\n            <el-select v-model=\\\"form.enabled\\\" filterable placeholder=\\\"请选择\\\">\\n              <el-option\\n                v-for=\\\"item in dict.user_status\\\"\\n                :key=\\\"item.id\\\"\\n                :label=\\\"item.label\\\"\\n                :value=\\\"item.value\\\" />\\n            </el-select>\\n          </el-form-item>\\n          <el-form-item label=\\\"修改密码的时间\\\" prop=\\\"pwdResetTime\\\">\\n            <el-date-picker v-model=\\\"form.pwdResetTime\\\" type=\\\"datetime\\\" style=\\\"width: 370px;\\\" />\\n          </el-form-item>\\n          <el-form-item label=\\\"创建日期\\\" prop=\\\"createTime\\\">\\n            <el-date-picker v-model=\\\"form.createTime\\\" type=\\\"datetime\\\" style=\\\"width: 370px;\\\" />\\n          </el-form-item>\\n          <el-form-item label=\\\"更新时间2\\\" prop=\\\"updateTime\\\">\\n            <el-date-picker v-model=\\\"form.updateTime\\\" type=\\\"datetime\\\" style=\\\"width: 370px;\\\" />\\n          </el-form-item>\\n        </el-form>\\n        <div slot=\\\"footer\\\" class=\\\"dialog-footer\\\">\\n          <el-button type=\\\"text\\\" @click=\\\"crud.cancelCU\\\">取消</el-button>\\n          <el-button :loading=\\\"crud.status.cu === 2\\\" type=\\\"primary\\\" @click=\\\"crud.submitCU\\\">确认</el-button>\\n        </div>\\n      </el-dialog>\\n      <!--表格渲染-->\\n      <el-table ref=\\\"table\\\" v-loading=\\\"crud.loading\\\" :data=\\\"crud.data\\\" size=\\\"small\\\" style=\\\"width: 100%;\\\" @selection-change=\\\"crud.selectionChangeHandler\\\">\\n        <el-table-column type=\\\"selection\\\" width=\\\"55\\\" />\\n        <el-table-column prop=\\\"userId\\\" label=\\\"ID\\\" />\\n        <el-table-column prop=\\\"deptId\\\" label=\\\"部门名称\\\" />\\n        <el-table-column prop=\\\"username\\\" label=\\\"ユーザ名\\\">\\n          <template slot-scope=\\\"scope\\\">\\n            {{ dict.label.user_status[scope.row.username] }}\\n          </template>\\n        </el-table-column>\\n        <el-table-column prop=\\\"nickName\\\" label=\\\"暱稱\\\">\\n          <template slot-scope=\\\"scope\\\">\\n            {{ dict.label.dept_status[scope.row.nickName] }}\\n          </template>\\n        </el-table-column>\\n        <el-table-column prop=\\\"gender\\\" label=\\\"性别1\\\" />\\n        <el-table-column prop=\\\"phone\\\" label=\\\"电话\\\" />\\n        <el-table-column prop=\\\"email\\\" label=\\\"邮箱\\\" />\\n        <el-table-column prop=\\\"avatarName\\\" label=\\\"别名\\\" />\\n        <el-table-column prop=\\\"avatarPath\\\" label=\\\"别名地址\\\" />\\n        <el-table-column prop=\\\"password\\\" label=\\\"密码\\\" />\\n        <el-table-column prop=\\\"isAdmin\\\" label=\\\"是否为admin\\\">\\n          <template slot-scope=\\\"scope\\\">\\n            {{ dict.label.user_status[scope.row.isAdmin] }}\\n          </template>\\n        </el-table-column>\\n        <el-table-column v-if=\\\"checkPer(['admin','user:edit','user:del'])\\\" label=\\\"操作\\\" width=\\\"150px\\\" align=\\\"center\\\">\\n          <template slot-scope=\\\"scope\\\">\\n            <udOperation\\n              :data=\\\"scope.row\\\"\\n              :permission=\\\"permission\\\"\\n            />\\n          </template>\\n        </el-table-column>\\n      </el-table>\\n      <!--分页组件-->\\n      <pagination />\\n    </div>\\n  </div>\\n</template>\\n\\n<script>\\nimport crudUser from '@/api/user'\\nimport CRUD, { presenter, header, form, crud } from '@crud/crud'\\nimport rrOperation from '@crud/RR.operation'\\nimport crudOperation from '@crud/CRUD.operation'\\nimport udOperation from '@crud/UD.operation'\\nimport pagination from '@crud/Pagination'\\n\\nconst defaultForm = { userId: null, deptId: null, username: null, nickName: null, gender: null, phone: null, email: null, avatarName: null, avatarPath: null, password: null, isAdmin: null, enabled: null, createBy: null, updateBy: null, pwdResetTime: null, createTime: null, updateTime: null }\\nexport default {\\n  name: 'User',\\n  components: { pagination, crudOperation, rrOperation, udOperation },\\n  mixins: [presenter(), header(), form(defaultForm), crud()],\\n  dicts: ['user_status', 'dept_status', 'user_status', 'user_status'],\\n  cruds() {\\n    return CRUD({ title: '用户管理', url: 'api/user', idField: 'userId', sort: 'userId,desc', crudMethod: { ...crudUser }})\\n  },\\n  data() {\\n    return {\\n      permission: {\\n        add: ['admin', 'user:add'],\\n        edit: ['admin', 'user:edit'],\\n        del: ['admin', 'user:del']\\n      },\\n      rules: {\\n        nickName: [\\n          { required: true, message: '暱稱不能为空', trigger: 'blur' }\\n        ],\\n        gender: [\\n          { required: true, message: '性别1不能为空', trigger: 'blur' }\\n        ],\\n        password: [\\n          { required: true, message: '密码不能为空', trigger: 'blur' }\\n        ],\\n        isAdmin: [\\n          { required: true, message: '是否为admin不能为空', trigger: 'blur' }\\n        ],\\n        enabled: [\\n          { required: true, message: '状态：1 啟動、0 關閉不能为空', trigger: 'blur' }\\n        ],\\n        pwdResetTime: [\\n          { required: true, message: '修改密码的时间不能为空', trigger: 'blur' }\\n        ],\\n        createTime: [\\n          { required: true, message: '创建日期不能为空', trigger: 'blur' }\\n        ],\\n        updateTime: [\\n          { required: true, message: '更新时间2不能为空', trigger: 'blur' }\\n        ]\\n      },\\n      queryTypeOptions: [\\n        { key: 'username', display_name: 'ユーザ名' },\\n        { key: 'isAdmin', display_name: '是否为admin' },\\n        { key: 'enabled', display_name: '状态：1 啟動、0 關閉' },\\n        { key: 'createTime', display_name: '创建日期' }\\n      ]\\n    }\\n  },\\n  methods: {\\n    // 钩子：在获取表格数据之前执行，false 则代表不获取数据\\n    [CRUD.HOOK.beforeRefresh]() {\\n      return true\\n    }\\n  }\\n}\\n</script>\\n\\n<style scoped>\\n\\n</style>\\n\"\n    }, {\n      \"name\": \"api\",\n      \"content\": \"import request from '@/utils/request'\\n\\nexport function add(data) {\\n  return request({\\n    url: 'api/user',\\n    method: 'post',\\n    data\\n  })\\n}\\n\\nexport function del(ids) {\\n  return request({\\n    url: 'api/user/',\\n    method: 'delete',\\n    data: ids\\n  })\\n}\\n\\nexport function edit(data) {\\n  return request({\\n    url: 'api/user',\\n    method: 'put',\\n    data\\n  })\\n}\\n\\nexport default { add, edit, del }\\n\",\n      \"api\": \"import request from '@/utils/request'\\n\\nexport function add(data) {\\n  return request({\\n    url: 'api/user',\\n    method: 'post',\\n    data\\n  })\\n}\\n\\nexport function del(ids) {\\n  return request({\\n    url: 'api/user/',\\n    method: 'delete',\\n    data: ids\\n  })\\n}\\n\\nexport function edit(data) {\\n  return request({\\n    url: 'api/user',\\n    method: 'put',\\n    data\\n  })\\n}\\n\\nexport default { add, edit, del }\\n\"\n    }];\n  }\n}, {\n  url: '/api/genConfig/sys_user',\n  type: 'get',\n  response: function response() {\n    var data = [];\n    return {\n      \"apiAlias\": \"用户管理\",\n      \"apiPath\": \"control/\",\n      \"author\": \"Lencho\",\n      \"cover\": false,\n      \"id\": 14,\n      \"moduleName\": \"Job-user\",\n      \"pack\": \"com.lencho.webstore\",\n      \"path\": \"control\",\n      \"prefix\": \"sys_\",\n      \"tableName\": \"sys_user\"\n    };\n  }\n}, {\n  url: '/api/generator/columns',\n  type: 'get',\n  response: function response() {\n    var data = [{\n      \"columnName\": \"user_id\",\n      \"columnType\": \"bigint\",\n      \"dateAnnotation\": \"\",\n      \"dictName\": \"\",\n      \"extra\": \"auto_increment\",\n      \"formShow\": false,\n      \"formType\": \"\",\n      \"id\": 170,\n      \"keyType\": \"PRI\",\n      \"listShow\": true,\n      \"notNull\": false,\n      \"queryType\": \"\",\n      \"remark\": \"ID\",\n      \"tableName\": \"sys_user\"\n    }, {\n      \"columnName\": \"dept_id\",\n      \"columnType\": \"bigint\",\n      \"dateAnnotation\": \"\",\n      \"dictName\": \"\",\n      \"extra\": \"\",\n      \"formShow\": false,\n      \"formType\": \"\",\n      \"id\": 171,\n      \"keyType\": \"MUL\",\n      \"listShow\": true,\n      \"notNull\": false,\n      \"queryType\": \"\",\n      \"remark\": \"部门名称\",\n      \"tableName\": \"sys_user\"\n    }, {\n      \"columnName\": \"username\",\n      \"columnType\": \"varchar\",\n      \"dateAnnotation\": \"UpdateTimestamp\",\n      \"dictName\": \"user_status\",\n      \"extra\": \"\",\n      \"formShow\": true,\n      \"formType\": \"Textarea\",\n      \"id\": 172,\n      \"keyType\": \"UNI\",\n      \"listShow\": true,\n      \"notNull\": false,\n      \"queryType\": \"Like\",\n      \"remark\": \"ユーザ名\",\n      \"tableName\": \"sys_user\"\n    }, {\n      \"columnName\": \"nick_name\",\n      \"columnType\": \"varchar\",\n      \"dateAnnotation\": \"CreationTimestamp\",\n      \"dictName\": \"dept_status\",\n      \"extra\": \"\",\n      \"formShow\": true,\n      \"formType\": \"Select\",\n      \"id\": 173,\n      \"keyType\": \"\",\n      \"listShow\": true,\n      \"notNull\": true,\n      \"queryType\": \"\",\n      \"remark\": \"暱稱\",\n      \"tableName\": \"sys_user\"\n    }, {\n      \"columnName\": \"gender\",\n      \"columnType\": \"varchar\",\n      \"dateAnnotation\": \"\",\n      \"dictName\": \"\",\n      \"extra\": \"\",\n      \"formShow\": true,\n      \"formType\": \"Date\",\n      \"id\": 174,\n      \"keyType\": \"\",\n      \"listShow\": true,\n      \"notNull\": true,\n      \"queryType\": \"BetWeen\",\n      \"remark\": \"性别1\",\n      \"tableName\": \"sys_user\"\n    }, {\n      \"columnName\": \"phone\",\n      \"columnType\": \"varchar\",\n      \"dateAnnotation\": \"\",\n      \"dictName\": \"\",\n      \"extra\": \"\",\n      \"formShow\": true,\n      \"formType\": \"Input\",\n      \"id\": 175,\n      \"keyType\": \"\",\n      \"listShow\": true,\n      \"notNull\": false,\n      \"queryType\": \"BetWeen\",\n      \"remark\": \"电话\",\n      \"tableName\": \"sys_user\"\n    }, {\n      \"columnName\": \"email\",\n      \"columnType\": \"varchar\",\n      \"dateAnnotation\": \"\",\n      \"dictName\": \"\",\n      \"extra\": \"\",\n      \"formShow\": true,\n      \"formType\": \"Input\",\n      \"id\": 176,\n      \"keyType\": \"UNI\",\n      \"listShow\": true,\n      \"notNull\": false,\n      \"queryType\": \"BetWeen\",\n      \"remark\": \"邮箱\",\n      \"tableName\": \"sys_user\"\n    }, {\n      \"columnName\": \"avatar_name\",\n      \"columnType\": \"varchar\",\n      \"dateAnnotation\": \"\",\n      \"dictName\": \"\",\n      \"extra\": \"\",\n      \"formShow\": false,\n      \"formType\": \"Input\",\n      \"id\": 177,\n      \"keyType\": \"MUL\",\n      \"listShow\": true,\n      \"notNull\": false,\n      \"queryType\": \"BetWeen\",\n      \"remark\": \"别名\",\n      \"tableName\": \"sys_user\"\n    }, {\n      \"columnName\": \"avatar_path\",\n      \"columnType\": \"varchar\",\n      \"dateAnnotation\": \"\",\n      \"dictName\": \"\",\n      \"extra\": \"\",\n      \"formShow\": false,\n      \"formType\": \"Date\",\n      \"id\": 178,\n      \"keyType\": \"\",\n      \"listShow\": true,\n      \"notNull\": false,\n      \"queryType\": \"BetWeen\",\n      \"remark\": \"别名地址\",\n      \"tableName\": \"sys_user\"\n    }, {\n      \"columnName\": \"password\",\n      \"columnType\": \"varchar\",\n      \"dateAnnotation\": \"\",\n      \"dictName\": \"\",\n      \"extra\": \"\",\n      \"formShow\": true,\n      \"formType\": \"Date\",\n      \"id\": 179,\n      \"keyType\": \"\",\n      \"listShow\": true,\n      \"notNull\": true,\n      \"queryType\": \"\",\n      \"remark\": \"密码\",\n      \"tableName\": \"sys_user\"\n    }, {\n      \"columnName\": \"is_admin\",\n      \"columnType\": \"bit\",\n      \"dateAnnotation\": \"\",\n      \"dictName\": \"user_status\",\n      \"extra\": \"\",\n      \"formShow\": true,\n      \"formType\": \"Select\",\n      \"id\": 180,\n      \"keyType\": \"\",\n      \"listShow\": true,\n      \"notNull\": true,\n      \"queryType\": \"=\",\n      \"remark\": \"是否为admin\",\n      \"tableName\": \"sys_user\"\n    }, {\n      \"columnName\": \"enabled\",\n      \"columnType\": \"bigint\",\n      \"dateAnnotation\": \"\",\n      \"dictName\": \"user_status\",\n      \"extra\": \"\",\n      \"formShow\": true,\n      \"formType\": \"Select\",\n      \"id\": 181,\n      \"keyType\": \"MUL\",\n      \"listShow\": false,\n      \"notNull\": true,\n      \"queryType\": \"=\",\n      \"remark\": \"状态：1 啟動、0 關閉\",\n      \"tableName\": \"sys_user\"\n    }, {\n      \"columnName\": \"create_by\",\n      \"columnType\": \"varchar\",\n      \"dateAnnotation\": \"\",\n      \"dictName\": \"\",\n      \"extra\": \"\",\n      \"formShow\": false,\n      \"formType\": \"Date\",\n      \"id\": 182,\n      \"keyType\": \"\",\n      \"listShow\": false,\n      \"notNull\": false,\n      \"queryType\": \"\",\n      \"remark\": \"创建者\",\n      \"tableName\": \"sys_user\"\n    }, {\n      \"columnName\": \"update_by\",\n      \"columnType\": \"varchar\",\n      \"dateAnnotation\": \"\",\n      \"dictName\": \"\",\n      \"extra\": \"\",\n      \"formShow\": false,\n      \"formType\": \"Date\",\n      \"id\": 183,\n      \"keyType\": \"\",\n      \"listShow\": false,\n      \"notNull\": false,\n      \"queryType\": \"\",\n      \"remark\": \"更新着\",\n      \"tableName\": \"sys_user\"\n    }, {\n      \"columnName\": \"pwd_reset_time\",\n      \"columnType\": \"datetime\",\n      \"dateAnnotation\": \"\",\n      \"dictName\": \"\",\n      \"extra\": \"\",\n      \"formShow\": true,\n      \"formType\": \"Date\",\n      \"id\": 184,\n      \"keyType\": \"\",\n      \"listShow\": false,\n      \"notNull\": true,\n      \"queryType\": \"BetWeen\",\n      \"remark\": \"修改密码的时间\",\n      \"tableName\": \"sys_user\"\n    }, {\n      \"columnName\": \"create_time\",\n      \"columnType\": \"datetime\",\n      \"dateAnnotation\": \"UpdateTimestamp\",\n      \"dictName\": \"\",\n      \"extra\": \"\",\n      \"formShow\": true,\n      \"formType\": \"Date\",\n      \"id\": 185,\n      \"keyType\": \"\",\n      \"listShow\": false,\n      \"notNull\": true,\n      \"queryType\": \">=\",\n      \"remark\": \"创建日期\",\n      \"tableName\": \"sys_user\"\n    }, {\n      \"columnName\": \"update_time\",\n      \"columnType\": \"datetime\",\n      \"dateAnnotation\": \"UpdateTimestamp\",\n      \"dictName\": \"\",\n      \"extra\": \"\",\n      \"formShow\": true,\n      \"formType\": \"Date\",\n      \"id\": 186,\n      \"keyType\": \"\",\n      \"listShow\": false,\n      \"notNull\": true,\n      \"queryType\": \"BetWeen\",\n      \"remark\": \"更新时间2\",\n      \"tableName\": \"sys_user\"\n    }];\n    return {\n      content: data,\n      totalElements: 17\n    };\n  }\n}];",null]}