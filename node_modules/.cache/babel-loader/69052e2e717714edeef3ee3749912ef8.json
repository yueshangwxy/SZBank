{"remainingRequest":"D:\\SZBank\\node_modules\\babel-loader\\lib\\index.js!D:\\SZBank\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\SZBank\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\SZBank\\src\\views\\indicators\\assetSearch\\assetSearch.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\SZBank\\src\\views\\indicators\\assetSearch\\assetSearch.vue","mtime":1713696798430},{"path":"D:\\SZBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\SZBank\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733},{"path":"D:\\SZBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\SZBank\\node_modules\\vue-loader\\lib\\index.js","mtime":1650418886580}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/SZBank/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"D:/SZBank/node_modules/@babel/runtime/helpers/defineProperty\"));\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es7.array.includes\");\n\nrequire(\"core-js/modules/es6.string.includes\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  data: function data() {\n    return {\n      // 首页传来的关键字\n      keywords: \"\",\n      tabList: [{\n        label: \"全部表\",\n        name: \"all\"\n      }, {\n        label: \"我的表\",\n        name: \"mine\"\n      }],\n      activeTab: \"all\",\n      // 树形控件\n      filterText: \"\",\n      defaultProps: {\n        id: \"contentsId\",\n        children: \"children\",\n        label: \"name\"\n      },\n      index: 2,\n      treeData: [],\n      treeDataAll: [],\n      treeDataMine: [],\n      // 目录列表\n      catalogueList: [],\n      // 资产类型\n      assetType: \"all\",\n      // 一级目录\n      firstType: \"all\",\n      firstList: [],\n      // 二级目录\n      secondType: \"all\",\n      secondList: [],\n      // 三级目录\n      thirdType: \"all\",\n      thirdList: [],\n      // 精准筛选\n      // 属主部门\n      deptCode: \"\",\n      table: {\n        project: \"\"\n      },\n      api: {\n        application: \"\"\n      },\n      target: {\n        targetName: \"\",\n        targetCode: \"\",\n        targetType: \"\",\n        classifyOne: \"\"\n      },\n      label: {\n        classifyName: \"\",\n        fromCode: \"\"\n      },\n      // 列表部分\n      tableData: [],\n      // 收藏\n      save: true,\n      // 分页\n      currentPage: 1,\n      pageSize: 9,\n      total: 50,\n      // 数据预览\n      dataPreVis: false,\n      preDataList: [],\n      preDataProp: [],\n      // 申请权限\n      authorityVis: false,\n      // 加入购物车参数\n      request: {\n        tableId: \"\",\n        beginTime: \"\",\n        endTime: \"\"\n      },\n      // 直接申请\n      directApplyVis: false,\n      daterange: \"\",\n      pickerOptions: {\n        disabledDate: function disabledDate(time) {\n          var oneDay = 60 * 60 * 24 * 1000;\n          return time.getTime() < Date.now() - oneDay;\n        }\n      },\n      radio: \"2\",\n      // 提示弹窗\n      tipDialog: false,\n      nodeData: [],\n      // 应用列表\n      appList: [],\n      // 指标类型列表\n      targetTypeList: [],\n      // 一级分类列表\n      classifyOneList: [],\n      // 部门树\n      deptTreeList: [],\n      // 标签下拉框 标签分类 标签来源\n      classifyNameList: [],\n      fromCodeList: [],\n      dataErrorMsg: \"\"\n    };\n  },\n  computed: {\n    expandedKeys: function expandedKeys() {\n      return [this.firstType, this.secondType, this.thirdType];\n    }\n  },\n  watch: {\n    $route: function $route(to, from) {\n      if (from.name.indexOf(\"详情\") < 0) {\n        this.getRouteData();\n      }\n    },\n    save: function save(val) {// console.log(val);\n    },\n    // 节点过滤\n    filterText: function filterText(val) {\n      this.$refs.tree.filter(val);\n    },\n    // 树状图tab\n    activeTab: function activeTab(val) {\n      if (val === \"all\") {\n        this.treeData = this.treeDataAll;\n        this.currentPage = 1;\n        this.getListByKeywords();\n      } else {\n        this.treeData = this.treeDataMine;\n        this.currentPage = 1;\n        this.getSelfTablePage();\n      }\n    },\n    // 目录联动\n    // 资产类型\n    assetType: function assetType(val) {\n      // this.firstType = \"all\";\n      if (val === \"all\") {\n        this.thirdList = []; // this.firstType = \"all\";\n\n        this.treeData = this.treeDataAll;\n      } else if (val === \"table\") {\n        // this.firstType = \"all\";\n        this.activeTab = \"all\";\n        this.treeData = this.treeDataAll;\n      } else if (val === \"api\") {\n        // this.firstType = \"all\";\n        this.treeData = this.treeDataAll;\n      } else if (val === \"target\") {\n        // this.firstType = \"all\";\n        this.treeData = this.treeDataAll;\n      } else if (val === \"label\") {\n        // this.firstType = \"all\";\n        this.treeData = this.treeDataAll;\n      }\n\n      this.queryList();\n    },\n    // 一级\n    firstType: function firstType(val) {\n      this.secondType = \"all\";\n      var data;\n      data = this.firstList.filter(function (item) {\n        return item.contentsId == val;\n      });\n\n      if (data.length < 1) {\n        this.secondList = [];\n      } else {\n        this.secondList = JSON.parse(JSON.stringify(data[0].children));\n\n        if (this.secondList.length > 0) {\n          this.secondList.unshift({\n            contentsId: \"all\",\n            name: \"全部\",\n            children: []\n          });\n\n          if (this.$route.query.secondDir && val === this.$route.query.firstDir) {\n            this.secondType = this.$route.query.secondDir;\n          } else {\n            this.secondType = \"all\";\n          }\n        }\n      }\n\n      this.expandedAllTree();\n      this.queryList();\n      this.$refs.tree.setCurrentKey(val);\n    },\n    // 二级\n    secondType: function secondType(val) {\n      this.thirdType = \"all\";\n      var data;\n      data = this.secondList.filter(function (item) {\n        return item.contentsId == val;\n      });\n\n      if (data.length < 1) {\n        this.thirdList = [];\n      } else {\n        this.thirdList = JSON.parse(JSON.stringify(data[0].children));\n\n        if (this.thirdList.length > 0) {\n          this.thirdList.unshift({\n            contentsId: \"all\",\n            name: \"全部\",\n            children: []\n          });\n\n          if (this.$route.query.thirdDir && val === this.$route.query.secondDir) {\n            this.thirdType = this.$route.query.thirdDir;\n          } else {\n            this.thirdType = \"all\";\n          }\n        }\n      }\n\n      this.expandedAllTree();\n      this.queryList();\n      this.$refs.tree.setCurrentKey(val);\n    },\n    // 三级\n    thirdType: function thirdType(val) {\n      this.queryList();\n      this.$refs.tree.setCurrentKey(val);\n    },\n    // 时间选择\n    daterange: function daterange(val) {\n      if (val) {\n        this.request.beginTime = this.formatDate(val[0]);\n        this.request.endTime = this.formatDate(val[1]);\n      } else {\n        this.request.beginTime = \"\";\n        this.request.endTime = \"\";\n      }\n    }\n  },\n  beforeRouteLeave: function beforeRouteLeave(to, from, next) {\n    if (to.path === \"/detailsView/table\" || to.path === \"/detailsView/api\" || to.path === \"/detailsView/label\" || to.path === \"/detailsView/target\") {\n      this.$store.commit(\"SET_KEEPALIVE\", true);\n    } else {\n      this.$store.commit(\"SET_KEEPALIVE\", false);\n    } // let obj = {\n    //   table: 1,\n    //   api: 2,\n    //   target: 3,\n    //   label: 4,\n    // };\n    // this.$route.query.assetType = obj[this.assetType];\n    // this.$route.query.index = obj[this.assetType];\n    // this.$route.query.firstDir = this.firstType;\n    // this.$route.query.secondDir = this.secondType;\n    // this.$route.query.thirdDir = this.thirdType;\n    // console.log(this.$route);\n\n\n    next();\n  },\n  created: function created() {\n    var _this = this;\n\n    this.$store.commit(\"SET_KEEPALIVE\", true); // 树状图初始数据\n\n    this.$api.getAllCatalogueList({}).then(function (res) {\n      _this.treeData = res.data;\n      _this.treeDataAll = res.data;\n    }); // 我的表目录树\n\n    this.$api.getAuthTree({}).then(function (res) {\n      _this.treeDataMine = res.data;\n    }); // 全部目录\n\n    this.$api.getAllCatalogueList({}).then(function (res) {\n      _this.firstList = res.data;\n\n      _this.firstList.unshift({\n        contentsId: \"all\",\n        name: \"全部\",\n        children: []\n      }); // 首页跳转\n\n\n      _this.getRouteData();\n    }); // 查询所有应用   appList\n    // 查询指标类型, 一级分类\n    // 查询部门树\n\n    this.$api.qryOpenApp({}).then(function (res) {\n      _this.appList = res.data;\n    });\n    this.$api.getTargetSelect({}).then(function (res) {\n      _this.targetTypeList = res.data.targetTypeList;\n      _this.classifyOneList = res.data.classifyOneList;\n    });\n    this.$api.getDeptTree({}).then(function (res) {\n      _this.deptTreeList = [res.data];\n    }); // 标签下拉框   标签分类  标签来源\n\n    this.$api.getLabelSelect({}).then(function (res) {\n      _this.classifyNameList = res.data.classifyNameList;\n      _this.fromCodeList = res.data.fromCodeList;\n    });\n  },\n  mounted: function mounted() {\n    if (window.history && window.history.pushState) {\n      history.pushState(null, null, document.URL); //这里有没有都无所谓，最好是有以防万一\n\n      window.addEventListener(\"popstate\", this.goBack, false); // 回退时执行goback方法\n    }\n  },\n  methods: (0, _defineProperty2.default)({\n    linefeed: function linefeed(h, _ref) {\n      var column = _ref.column,\n          $index = _ref.$index;\n      var realWidth = 0;\n      var span = document.createElement(\"span\");\n      span.innerText = column.label;\n\n      if (!column.label) {\n        document.body.appendChild(span);\n        realWidth = 100;\n        column.minWidth = realWidth; // 可能还有边距/边框等值，需要根据实际情况加上\n\n        document.body.removeChild(span);\n\n        if (column.label.indexOf(',') > -1) {\n          return h(\"div\", {}, [h(\"div\", {}, column.label.split(',')[0]), h(\"div\", {}, column.label.split(',')[1])]);\n        } else {\n          return h(\"span\", column.label);\n        }\n      } else {\n        document.body.appendChild(span);\n        realWidth = span.getBoundingClientRect().width + 30;\n        column.minWidth = realWidth; // 可能还有边距/边框等值，需要根据实际情况加上\n\n        document.body.removeChild(span);\n\n        if (column.label.indexOf(',') > -1) {\n          return h(\"div\", {}, [h(\"div\", {}, column.label.split(',')[0]), h(\"div\", {}, column.label.split(',')[1])]);\n        } else {\n          return h(\"span\", column.label);\n        }\n      }\n    },\n    // 回退到当前页\n    goBack: function goBack() {// if (location.href.indexOf(\"/searchPage\") > -1) {\n      //   location.reload();\n      // } else {\n      // this.$router.replace();\n      // }\n    },\n    getAssetTypeInfo: function getAssetTypeInfo(assetType) {\n      if (assetType === \"table\") {\n        return {\n          tagColor: \"success\",\n          tagName: \"表\",\n          codeName: \"tableName\"\n        };\n      } else if (assetType === \"target\") {\n        return {\n          tagColor: \"warning\",\n          tagName: \"指标\",\n          codeName: \"targetName\"\n        };\n      } else if (assetType === \"api\") {\n        return {\n          tagColor: \"\",\n          tagName: \"API\",\n          codeName: \"indexName\"\n        };\n      } else if (assetType === \"label\") {\n        return {\n          tagColor: \"danger\",\n          tagName: \"标签\",\n          codeName: \"labelName\"\n        };\n      }\n    },\n    transInvalidTime: function transInvalidTime(time) {\n      if (time && time.includes(\"9999\")) {\n        return \"永久\";\n      } else {\n        return time;\n      }\n    },\n    expandedAllTree: function expandedAllTree() {\n      for (var i = 0; i < this.$refs.tree.store._getAllNodes().length; i++) {\n        if (this.$refs.tree.store._getAllNodes()[i].id !== 1) {\n          this.$refs.tree.store._getAllNodes()[i].expanded = false;\n        }\n      }\n    },\n    getRouteData: function getRouteData() {\n      if (this.$route.query.assetType) {\n        if (this.$route.query.assetType == 1) {\n          this.assetType = \"table\";\n        } else if (this.$route.query.assetType == 2) {\n          this.assetType = \"api\";\n        } else if (this.$route.query.assetType == 3) {\n          this.assetType = \"target\";\n        } else if (this.$route.query.assetType == 4) {\n          this.assetType = \"label\";\n        }\n\n        delete this.$route.query.type;\n      } // 从首页搜索\n\n\n      if (this.$route.query.from == \"home\") {\n        this.currentPage = 1;\n        var index = this.$route.query.index;\n\n        if (index != undefined) {\n          this.assetType = \"all\";\n          this.firstType = this.$route.query.firstDir;\n          this.secondType = this.$route.query.secondDir;\n          this.thirdType = this.$route.query.thirdDir;\n        }\n      } // 初始化列表\n\n\n      if (this.assetType === \"table\" && this.activeTab === \"mine\") {\n        this.getSelfTablePage();\n      } else {\n        // 其他搜索按钮点击\n        this.getListByKeywords();\n      }\n    },\n    // 搜索按钮点击\n    queryList: function queryList() {\n      // 我的表搜索按钮点击\n      this.currentPage = 1;\n\n      if (this.assetType === \"table\" && this.activeTab === \"mine\") {\n        this.getSelfTablePage();\n      } else {\n        // 其他搜索按钮点击\n        this.getListByKeywords();\n      }\n    },\n    // 资产类型切换\n    handleClick: function handleClick(tab, event) {\n      this.table = {};\n      this.api = {};\n      this.target = {};\n      this.label = {};\n      this.deptCode = \"\";\n    },\n    // 节点过滤\n    filterNode: function filterNode(value, data) {\n      if (!value) return true;\n      return data.name.indexOf(value.toString()) !== -1;\n    },\n    // 节点点击   --- 树状图节点点击调接口重新查询列表\n    handleNodeClick: function handleNodeClick(data, node) {\n      var _this2 = this;\n\n      console.log(node); // 最后一级节点点击\n\n      if (!data.children || data.children.length == 0) {\n        var p = new Promise(function (resolve, reject) {\n          _this2.firstType = node.parent.parent.data.contentsId;\n          resolve();\n        });\n        p.then(function () {\n          _this2.secondType = node.parent.data.contentsId;\n        }).then(function () {\n          _this2.thirdType = data.contentsId;\n        }).then(function () {\n          _this2.queryList();\n        });\n      } else if (node.expanded) {\n        if (data.level == 1) {\n          this.firstType = data.contentsId;\n          this.secondType = \"all\";\n          this.thirdType = \"all\";\n        } else if (data.level == 2) {\n          this.secondType = data.contentsId;\n          this.thirdType = \"all\";\n        }\n\n        this.queryList();\n      }\n    },\n    // 我的表查询\n    getSelfTablePage: function getSelfTablePage() {\n      var _this3 = this;\n\n      this.keywords = sessionStorage.getItem(\"searchKeyWords\") ? sessionStorage.getItem(\"searchKeyWords\") : \"\";\n      var request = {\n        contentsOne: this.firstType,\n        contentsTwo: this.secondType,\n        contentsThree: this.thirdType,\n        keywords: this.keywords,\n        deptCode: this.deptCode,\n        project: this.table.project,\n        page: this.currentPage,\n        size: this.pageSize\n      };\n      this.$api.getSelfTablePage(request).then(function (res) {\n        _this3.total = res.data.total;\n        _this3.tableData = res.data.records;\n      });\n    },\n    // 列表查询\n    getListByKeywords: function getListByKeywords() {\n      var _this4 = this;\n\n      this.keywords = sessionStorage.getItem(\"searchKeyWords\") ? sessionStorage.getItem(\"searchKeyWords\") : \"\";\n      var request = {\n        keywords: this.keywords,\n        page: this.currentPage,\n        size: this.pageSize,\n        assetType: this.assetType,\n        contentsOne: this.firstType,\n        contentsTwo: this.secondType,\n        contentsThree: this.thirdType,\n        table: this.table,\n        api: this.api,\n        target: this.target,\n        label: this.label,\n        deptCode: this.deptCode\n      };\n      this.$api.getListByKeywords(request).then(function (res) {\n        _this4.total = res.total;\n\n        if (_this4.assetType === \"table\") {\n          _this4.tableData = res.tableList;\n        } else if (_this4.assetType === \"api\") {\n          _this4.tableData = res.apiList;\n        } else if (_this4.assetType === \"target\") {\n          _this4.tableData = res.targetList;\n        } else if (_this4.assetType === \"label\") {\n          _this4.tableData = res.labelList;\n        } else {\n          _this4.tableData = res.obj;\n        }\n      });\n    },\n    // 分页\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.currentPage = val;\n\n      if (this.assetType === \"table\" && this.activeTab === \"mine\") {\n        this.getSelfTablePage();\n      } else {\n        this.getListByKeywords();\n      }\n    },\n    // 我的购物车\n    jumpShopCar: function jumpShopCar() {\n      this.$router.push({\n        name: \"myShopCar\"\n      });\n    },\n    // 我的收藏\n    jumpCollection: function jumpCollection() {\n      this.$router.push({\n        name: \"myCollection\" // path: \"asset/myCollection/index\",\n\n      });\n    },\n    // 详情查看\n    viewDetails: function viewDetails(item) {\n      delete this.$route.query.assetType;\n      this.$router.push({\n        path: \"/detailsView/\" + item.assetType,\n        query: {\n          id: item.id\n        }\n      });\n    },\n    // 数据预览\n    previewData: function previewData(item) {\n      var _this5 = this;\n\n      this.preDataProp = [];\n      this.preDataList = [];\n      this.dataPreVis = true;\n      this.dataErrorMsg = \"\";\n      this.$api.previewTableData({\n        name: item.tableName,\n        project: item.project\n      }).then(function (res) {\n        if (res.code == 200 || res.code == 0) {\n          _this5.preDataProp = res.data.columns;\n          _this5.preDataList = res.data.dataList;\n\n          _this5.$nextTick(function () {\n            _this5.$refs.dataTable.doLayout();\n          });\n        } else {\n          // this.$message.error(res.msg);\n          _this5.dataErrorMsg = res.msg;\n        }\n      });\n    },\n    // 添加收藏\n    addFavorite: function addFavorite(item) {\n      var _this6 = this;\n\n      this.$api.addFavorite({\n        assetId: item.id,\n        assetType: item.assetType\n      }).then(function (res) {\n        if (res.code == 200 || res.code == 0) {\n          _this6.$message.success(res.msg);\n\n          if (_this6.assetType === \"table\" && _this6.activeTab === \"mine\") {\n            _this6.getSelfTablePage();\n          } else {\n            _this6.getListByKeywords();\n          }\n        } else {\n          _this6.$message.error(res.msg);\n        }\n      });\n    },\n    // 删除收藏\n    delFavorite: function delFavorite(item) {\n      var _this7 = this;\n\n      this.$api.delFavorite({\n        assetId: item.id,\n        assetType: item.assetType\n      }).then(function (res) {\n        if (res.code == 200 || res.code == 0) {\n          _this7.$message.success(res.msg);\n\n          if (_this7.assetType === \"table\" && _this7.activeTab === \"mine\") {\n            _this7.getSelfTablePage();\n          } else {\n            _this7.getListByKeywords();\n          }\n        } else {\n          _this7.$message.error(res.msg);\n        }\n      });\n    },\n    // 申请访问\n    applyForAccess: function applyForAccess(item) {\n      var _this8 = this;\n\n      this.$api.applyForAccess({\n        apiId: item.id\n      }).then(function (res) {\n        if (res.code == 0 || res.code == 200) {\n          _this8.$message.success(res.msg);\n\n          _this8.getListByKeywords();\n        } else {\n          _this8.$message.error(res.msg);\n        }\n      });\n    },\n    // 申请权限\n    applyForAuthority: function applyForAuthority(item) {\n      this.directApplyVis = true;\n      this.daterange = \"\";\n      this.request.tableId = item.id;\n    },\n    // 加入购物车\n    addShopCar: function addShopCar() {\n      var _this9 = this;\n\n      this.$api.addShopCar(this.request).then(function (res) {\n        _this9.authorityVis = false;\n\n        if (res.code == 999) {\n          _this9.$message.warning(res.msg);\n        } else if (res.code == 200 || res.code == 0) {\n          _this9.$message.success(res.msg);\n        }\n      });\n    },\n    // 直接申请\n    directApply: function directApply() {\n      var _this10 = this;\n\n      this.authorityVis = false; // 直接申请权限接口\n\n      var list = [this.request];\n      this.$api.applyForAuthority({\n        list: list\n      }).then(function (res) {\n        if (res.code == 200 || res.code == 0) {\n          _this10.$message.success(res.msg);\n\n          if (_this10.assetType === \"table\" && _this10.activeTab === \"mine\") {\n            _this10.getSelfTablePage();\n          } else {\n            _this10.getListByKeywords();\n          }\n        } else {\n          _this10.$message.error(res.msg);\n        }\n      });\n    },\n    // 生效日期弹窗确定\n    confirmApply: function confirmApply() {\n      // 关闭当前弹窗\n      if (this.radio === \"2\") {\n        this.request.beginTime = \"\";\n        this.request.endTime = \"\";\n        this.directApplyVis = false; // 打开申请权限方式弹窗\n\n        this.authorityVis = true;\n      } else {\n        if (this.daterange.length < 1) {\n          this.$message.error(\"请选择时间\");\n        } else {\n          this.directApplyVis = false; // 打开申请权限方式弹窗\n\n          this.authorityVis = true;\n        }\n      }\n    },\n    // 日期格式转换\n    formatDate: function formatDate(date) {\n      var y = date.getFullYear();\n      var m = date.getMonth() + 1;\n      m = m < 10 ? \"0\" + m : m;\n      var d = date.getDate();\n      d = d < 10 ? \"0\" + d : d;\n      var h = date.getHours();\n      h = h < 10 ? \"0\" + h : h;\n      var minute = date.getMinutes();\n      minute = minute < 10 ? \"0\" + minute : minute;\n      var second = date.getSeconds();\n      second = second < 10 ? \"0\" + second : second;\n      return y + \"-\" + m + \"-\" + d; // return y + '-' + m + '-' + d+' '+h+':'+minute+':'+second;\n    }\n  }, \"transInvalidTime\", function transInvalidTime(time) {\n    var invalidTime = time ? time.indexOf(\"9999\") > -1 ? \"永久\" : time : \"\";\n    return invalidTime;\n  })\n};\nexports.default = _default;",null]}