{"remainingRequest":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js!D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\indicator\\Pncui-Indicator\\src\\views\\indicators\\indicator\\base\\dimensionPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\src\\views\\indicators\\indicator\\base\\dimensionPage.vue","mtime":1646633727697},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      dimensionDialog: false,\n      title: '',\n      dimInfo: [],\n      multipleSelection: [],\n      indDimRelations: []\n    };\n  },\n  methods: {\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    // 做默认选中的处理\n    selectRow: function selectRow() {\n      var _this = this;\n\n      this.$nextTick(function () {\n        var _loop = function _loop(i) {\n          _this.$nextTick(function () {\n            var _this2 = this;\n\n            this.dimInfo.forEach(function (row) {\n              if (_this2.indDimRelations[i].dimCode === row.dimCode) {\n                _this2.$refs.multipleTable.toggleRowSelection(row, true);\n              }\n            });\n          });\n        };\n\n        for (var i = 0; i < _this.indDimRelations.length; i++) {\n          _loop(i);\n        }\n      });\n    },\n    // 确定按钮\n    dimClickHandle: function dimClickHandle() {\n      var val = ''; // 页面显示\n\n      var indDimRelations = []; // 数据库维度信息\n\n      for (var i = 0; i < this.multipleSelection.length; i++) {\n        // 拼接字符串用于页面显示\n        val = this.multipleSelection[i].colCode + ',' + val; // 封装维度对象数组保存到数据库\n\n        var newValue = {\n          dimSeq: i + 1,\n          tableColumn: 'dimension' + i,\n          dimCode: this.multipleSelection[i].dimCode,\n          dimColumn: this.multipleSelection[i].colCode,\n          dimName: this.multipleSelection[i].dimDesc\n        };\n        indDimRelations.push(newValue);\n      } // 给父组件传递参数\n\n\n      this.$emit('func', val.substr(0, val.length - 1), indDimRelations);\n      this.dimensionDialog = false;\n    }\n  }\n};",null]}