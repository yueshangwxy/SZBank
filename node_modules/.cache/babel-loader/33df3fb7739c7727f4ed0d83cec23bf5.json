{"remainingRequest":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\src\\views\\indicators\\indicator\\base\\baseDevelop.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\src\\views\\indicators\\indicator\\base\\baseDevelop.vue","mtime":1644369310601},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\work\\code2\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport crudIndIndicatorInfo, { getAtom, getAtomDimenston, saveBaseRule as _saveBaseRule, updateStatuesByIeCode } from \"../../../../api/indicators/indIndicatorInfo\";\nimport dimensionPage from \"./dimensionPage\";\nimport limitRulePage from \"./limitRulePage\";\nexport default {\n  components: {\n    dimensionPage: dimensionPage,\n    limitRulePage: limitRulePage\n  },\n  dicts: ['EXPRESSION'],\n  data: function data() {\n    return {\n      rules: {\n        'indBaseRule.bizCode': [{\n          required: true,\n          message: '原子指标不能为空',\n          trigger: 'blur'\n        }],\n        'indBaseRule.measureColumn': [{\n          required: true,\n          message: '度量不能为空',\n          trigger: 'blur'\n        }]\n      },\n      loading: false,\n      baseDevelopDialog: false,\n      title: '',\n      form: {\n        ieCode: null,\n        indBaseRule: {\n          calcRule: null,\n          // 加工规则\n          dataSource: null,\n          // 数据源\n          expression: 'sum',\n          // 取数表达式\n          dataTable: null,\n          // 取数表名-即原子指标中的存储表名\n          measureColumn: null,\n          // 度量\n          bizCode: null // 原子指标\n\n        },\n        indDimRelations: [],\n        // 指标维度关系\n        indBaseRuleFilters: [],\n        // 指标附加规则\n        dimVals: null,\n        // 维度选择页面传来的显示维度\n        limitRule: null // 限制规则\n\n      },\n      atom: [],\n      // 原子指标\n      measureInfo: [],\n      // 度量信息\n      dimInfo: [] // 原子指标维度信息\n\n    };\n  },\n  methods: {\n    /* 基础指标开发的method----start */\n    // 原子指标修改后触发事件\n    atomChangeHandle: function atomChangeHandle(val) {\n      var _this2 = this;\n\n      this.atom.some(function (item) {\n        if (item.bizCode == val) {\n          // 1.自动注入取数表名\n          _this2.form.indBaseRule.dataTable = item.bizTabCode; // 2.根据原子指标编号查询原子指标维度信息表;生成维度信息\n\n          var dimParam = {\n            bizCode: item.bizCode,\n            dimType: 'D'\n          };\n          getAtomDimenston(dimParam).then(function (data) {\n            _this2.dimInfo = data.data;\n          }); // 3.根据原子指标编号查询原子指标维度信息表;生成度量信息\n\n          var meaParam = {\n            bizCode: item.bizCode,\n            dimType: 'M'\n          };\n          getAtomDimenston(meaParam).then(function (data) {\n            _this2.measureInfo = data.data;\n          }); // 清空\n\n          _this2.form.indBaseRule.measureColumn = null;\n          _this2.form.dimVals = null;\n          _this2.form.limitRule = null;\n        }\n      });\n    },\n    // 统计维度点击选择时触发\n    dimClickHandle: function dimClickHandle() {\n      // 将维度信息传递过去并将结果返回\n      var _this = this.$refs.dimensionPage;\n      _this.title = '统计维度';\n      _this.dimInfo = this.dimInfo;\n      _this.indDimRelations = this.form.indDimRelations; // 默认选中的值\n\n      _this.selectRow(); // 做默认选中的处理\n\n\n      _this.dimensionDialog = true;\n    },\n    // 接收统计维度子组件传来的信息\n    getDimensionPage: function getDimensionPage(data1, data2) {\n      this.form.dimVals = data1;\n      this.form.indDimRelations = data2;\n    },\n    // 限制规则点击选择时触发\n    limitRuleClickHandle: function limitRuleClickHandle() {\n      // 将维度信息传递过去选择后将结果返回\n      var _this = this.$refs.limitRulePage;\n      _this.title = '限制规则';\n      _this.dimInfo = this.dimInfo;\n      _this.tableData = [];\n      _this.tableName = this.form.indBaseRule.dataTable; // 表名,查询值列表的参数\n\n      _this.indBaseRuleFilters = this.form.indBaseRuleFilters; // 默认选中的值\n\n      _this.selectRow(); // 做默认选中的处理\n\n\n      _this.limitRuleDialog = true;\n    },\n    // 接收限制规则子组件传来的信息\n    getLimitPage: function getLimitPage(data1, data2) {\n      this.form.limitRule = data1;\n      this.form.indBaseRuleFilters = data2;\n    },\n    // 取消按钮\n    cancel: function cancel() {\n      this.baseDevelopDialog = false;\n    },\n    // 保存\n    saveBaseRule: function saveBaseRule() {\n      var _this3 = this;\n\n      if (this.form.indBaseRule.bizCode == null || this.form.indBaseRule.bizCode.trim() == '') {\n        this.$message.error({\n          message: '原子指标不能为空'\n        });\n        return false;\n      }\n\n      if (this.form.indBaseRule.measureColumn == null || this.form.indBaseRule.measureColumn.trim() == '') {\n        this.$message.error({\n          message: '度量不能为空'\n        });\n        return false;\n      } // form表单作为参数\n\n\n      _saveBaseRule(this.form).then(function (data) {\n        if (data.code === 0) {\n          _this3.$message.success({\n            message: '保存成功!'\n          });\n\n          _this3.cancel();\n\n          _this3.$emit('func', 'hi');\n        } else {\n          _this3.$message.error({\n            message: data.msg\n          });\n        }\n      });\n    },\n    // 上线\n    upLine: function upLine() {\n      var _this4 = this;\n\n      _saveBaseRule(this.form).then(function (data) {\n        if (data.code === 0) {\n          var indIndicatorInfo = {\n            'ieCode': _this4.form.ieCode,\n            'status': 4\n          };\n          updateStatuesByIeCode(indIndicatorInfo).then(function (data) {\n            if (data.code === 0) {\n              _this4.$message.success({\n                message: '操作成功!'\n              });\n\n              _this4.cancel();\n\n              _this4.$emit('func', 'hi');\n            } else {\n              _this4.$message.error({\n                message: data.msg\n              });\n            }\n          });\n        } else {\n          _this4.$message.error({\n            message: data.msg\n          });\n        }\n      });\n    }\n    /* 基础指标开发的method----end */\n\n  }\n};",null]}