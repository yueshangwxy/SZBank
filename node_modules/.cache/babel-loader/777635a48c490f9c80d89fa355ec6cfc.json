{"remainingRequest":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\src\\views\\indicators\\home\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\src\\views\\indicators\\home\\index.vue","mtime":1651843698744},{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650772030926},{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1650772030306},{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650772030926},{"path":"C:\\Users\\rdren\\Desktop\\workspace\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1650772056629}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"C:/Users/rdren/Desktop/workspace/DataAssetPlatform/Pncui-Ind/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"C:/Users/rdren/Desktop/workspace/DataAssetPlatform/Pncui-Ind/node_modules/@babel/runtime/helpers/typeof\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.weak-map\");\n\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"C:/Users/rdren/Desktop/workspace/DataAssetPlatform/Pncui-Ind/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"C:/Users/rdren/Desktop/workspace/DataAssetPlatform/Pncui-Ind/node_modules/@babel/runtime/helpers/defineProperty\"));\n\nvar _vuex = require(\"vuex\");\n\nvar _avatar = _interopRequireDefault(require(\"@eladmin/assets/images/avatar.png\"));\n\nvar _RoleSelect = _interopRequireDefault(require(\"@eladmin/components/RoleSelect\"));\n\nvar _ThemeSelect = _interopRequireDefault(require(\"@portal/components/ThemeSelect\"));\n\nvar _Logo = _interopRequireDefault(require(\"@portal/layout/components/Sidebar/Logo\"));\n\nvar echarts = _interopRequireWildcard(require(\"echarts\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n// var deptList = [\n//   {\n//     id: 1,\n//     deptName: \"客户发展部\",\n//     count: 1620,\n//   },\n//   {\n//     id: 2,\n//     deptName: \"公司部\",\n//     count: 1620,\n//   },\n//   {\n//     id: 3,\n//     deptName: \"科技金融部\",\n//     count: 1620,\n//   },\n//   {\n//     id: 4,\n//     deptName: \"网金部\",\n//     count: 1620,\n//   },\n//   {\n//     id: 5,\n//     deptName: \"客户发展部\",\n//     count: 1620,\n//   },\n//   {\n//     id: 6,\n//     deptName: \"客户发展部\",\n//     count: 1620,\n//   },\n//   {\n//     id: 7,\n//     deptName: \"客户发展部\",\n//     count: 1620,\n//   },\n//   {\n//     id: 8,\n//     deptName: \"客户发展部\",\n//     count: 1620,\n//   },\n//   {\n//     id: 9,\n//     deptName: \"客户发展部\",\n//     count: 1620,\n//   },\n//   {\n//     id: 10,\n//     deptName: \"客户发展部\",\n//     count: 1620,\n//   },\n//   {\n//     id: 11,\n//     deptName: \"客户发展部\",\n//     count: 1620,\n//   },\n//   {\n//     id: 12,\n//     deptName: \"客户发展部\",\n//     count: 1620,\n//   },\n//   {\n//     id: 13,\n//     deptName: \"客户发展部\",\n//     count: 1620,\n//   },\n// ];\nvar companyList = [{\n  id: 1,\n  name: \"对公贷款\"\n}, {\n  id: 2,\n  name: \"理财\"\n}, {\n  id: 3,\n  name: \"对公客户\"\n}, {\n  id: 4,\n  name: \"进出口类\"\n}, {\n  id: 5,\n  name: \"对公存款\"\n}, {\n  id: 6,\n  name: \"信用证\"\n}, {\n  id: 7,\n  name: \"保函\"\n}, {\n  id: 8,\n  name: \"银行本汇票\"\n}, {\n  id: 9,\n  name: \"商业汇票\"\n}, {\n  id: 10,\n  name: \"代发代扣\"\n}, {\n  id: 11,\n  name: \"代收代付\"\n}];\nvar numberList = [{\n  id: 1,\n  name: \"个人客户\"\n}, {\n  id: 2,\n  name: \"个人存款\"\n}, {\n  id: 3,\n  name: \"个人贷款\"\n}, {\n  id: 4,\n  name: \"网贷\"\n}, {\n  id: 5,\n  name: \"借记卡\"\n}, {\n  id: 6,\n  name: \"信用卡\"\n}, {\n  id: 7,\n  name: \"理财\"\n}, {\n  id: 8,\n  name: \"基金\"\n}, {\n  id: 9,\n  name: \"统一支付\"\n}, {\n  id: 10,\n  name: \"电子渠道\"\n}, {\n  id: 11,\n  name: \"线下渠道\"\n}, {\n  id: 12,\n  name: \"代发代扣\"\n}];\nvar retailList = [{\n  id: 1,\n  name: \"个人存款\"\n}, {\n  id: 2,\n  name: \"个人贷款\"\n}, {\n  id: 3,\n  name: \"网贷\"\n}, {\n  id: 4,\n  name: \"存折\"\n}, {\n  id: 5,\n  name: \"借记卡\"\n}, {\n  id: 6,\n  name: \"信用卡\"\n}, {\n  id: 7,\n  name: \"个人客户\"\n}, {\n  id: 8,\n  name: \"理财\"\n}, {\n  id: 9,\n  name: \"基金\"\n}, {\n  id: 10,\n  name: \"保险\"\n}, {\n  id: 11,\n  name: \"信托\"\n}, {\n  id: 12,\n  name: \"贵金属\"\n}, {\n  id: 13,\n  name: \"资管\"\n}, {\n  id: 14,\n  name: \"统一支付\"\n}, {\n  id: 15,\n  name: \"电子渠道\"\n}, {\n  id: 16,\n  name: \"线下渠道\"\n}, {\n  id: 17,\n  name: \"代发代扣\"\n}, {\n  id: 18,\n  name: \"代收代付\"\n}];\nvar financeList = [{\n  id: 1,\n  name: \"同业客户\"\n}, {\n  id: 2,\n  name: \"存放同业\"\n}, {\n  id: 3,\n  name: \"理财资管\"\n}, {\n  id: 4,\n  name: \"同业融资\"\n}, {\n  id: 5,\n  name: \"同业投资\"\n}, {\n  id: 6,\n  name: \"同业资管\"\n}];\nvar publicList = [{\n  id: 1,\n  name: \"机构目录\"\n}, {\n  id: 2,\n  name: \"员工目录\"\n}, {\n  id: 3,\n  name: \"员工目录\"\n}, {\n  id: 4,\n  name: \"科目目录\"\n}, {\n  id: 5,\n  name: \"同业投资\"\n}]; // 三级目录列表\n\nvar thirdList = [{\n  id: 1,\n  name: \"业务表数据资产\"\n}, {\n  id: 2,\n  name: \"明细表数据资产\"\n}, {\n  id: 3,\n  name: \"汇总表数据资产\"\n}, {\n  id: 4,\n  name: \"业务个性数据资产\"\n}, {\n  id: 5,\n  name: \"原始指标\"\n}, {\n  id: 6,\n  name: \"衍生指标\"\n}, {\n  id: 7,\n  name: \"衍生指标\"\n}, {\n  id: 8,\n  name: \"个人客户标签\"\n}, {\n  id: 9,\n  name: \"对公客户标签\"\n}, {\n  id: 10,\n  name: \"同业客户标签\"\n}]; // var scaleList = [\n//   {\n//     id: 1,\n//     name: \"结算账户数\",\n//     count: 2102734,\n//   },\n//   {\n//     id: 2,\n//     name: \"当月开户数\",\n//     count: 1026,\n//   },\n//   {\n//     id: 3,\n//     name: \"当月销户数\",\n//     count: 507,\n//   },\n// ];\n// var assetList = [\n//   {\n//     id: 1,\n//     name: \"表资产\",\n//     count: 23,\n//   },\n//   {\n//     id: 2,\n//     name: \"API资产\",\n//     count: 23,\n//   },\n//   {\n//     id: 3,\n//     name: \"指标资产\",\n//     count: 23,\n//   },\n//   {\n//     id: 4,\n//     name: \"标签资产\",\n//     count: 23,\n//   },\n// ];\n\nvar _default = {\n  name: \"home\",\n  components: {\n    RoleSelect: _RoleSelect.default,\n    ThemeSelect: _ThemeSelect.default,\n    Logo: _Logo.default\n  },\n  data: function data() {\n    return {\n      Avatar: _avatar.default,\n      dialogVisible: false,\n      searchValue: \"\",\n      // 搜索内容\n      // 左侧\n      companyList: companyList,\n      // 公司银行二级目录\n      numberList: numberList,\n      // 数字银行二级目录\n      retailList: retailList,\n      // 零售银行二级目录\n      financeList: financeList,\n      // 金融市场二级目录\n      publicList: publicList,\n      // 公共类二级目录\n      companyThirdList: [],\n      // 三级目录\n      numberThirdList: [],\n      // 三级目录\n      retailThirdList: [],\n      // 三级目录\n      financeThirdList: [],\n      // 三级目录\n      publicThirdList: [],\n      // 三级目录\n      companySecond: false,\n      // 是否展开公司银行更多二级目录\n      numberSecond: false,\n      // 是否展开数字银行更多二级目录\n      retailSecond: false,\n      // 是否展开零售银行更多二级目录\n      financeSecond: false,\n      // 是否展开金融市场更多二级目录\n      publicSecond: false,\n      // 是否展开公共类更多二级目录\n      companyIndex: -1,\n      // 当前点击公司二级目录\n      numberIndex: -1,\n      // 当前点击公司二级目录\n      retailIndex: -1,\n      // 当前点击公司二级目录\n      financeIndex: -1,\n      // 当前点击公司二级目录\n      publicIndex: -1,\n      // 当前点击公司二级目录\n      companyFirstDir: \"\",\n      companySecondDir: \"\",\n      numberFirstDir: \"\",\n      numberSecondDir: \"\",\n      retailFirstDir: \"\",\n      retailSecondDir: \"\",\n      financeFirstDir: \"\",\n      financeSecondDir: \"\",\n      publicFirstDir: \"\",\n      publicSecondDir: \"\",\n      // 资产\n      assetsList: [],\n      // 部门\n      deptList: [],\n      // 部门列表\n      // 部门滚动展示\n      currentProgressId: \"\",\n      scrollResultWidth: 0,\n      //transform滚动的距离\n      signleWidth: 166,\n      //单个流程的宽度\n      activeName: 0,\n      currentClickNumber: 0,\n      noScrollRight: true,\n      // 资产分类\n      pieData: [],\n      // 业务趋势\n      lineData: [],\n      // 机构规模排行\n      barData: [],\n      // 分类账户数\n      scaleList: [],\n      // 我的收藏\n      assetList: [],\n      // 查询资产数据增长情况多折线图数据\n      monthList: [],\n      trendStatisticLegendColorList: [],\n      trendStatisticDeptList: [],\n      trendStatisticSeriesData: [],\n      netGoldDeptList: [],\n      retailDeptList: [],\n      companyDeptList: [],\n      mutualGoldList: [],\n      screenWidth: document.body.clientWidth,\n      screenHeight: document.body.clientHeight\n    };\n  },\n  mounted: function mounted() {\n    var that = this;\n\n    window.onresize = function () {\n      window.screenWidth = document.body.clientWidth;\n      window.screenHeight = document.body.clientHeight;\n      that.screenWidth = window.screenWidth;\n      that.screenHeight = window.screenHeight;\n      console.log(that.screenWidth, that.screenHeight);\n    };\n  },\n  watch: {\n    // 窗口宽度发生变化则刷新页面   更新echarts\n    screenWidth: function screenWidth(oldVal, newVal) {\n      if (newVal != this.screenWidth) {\n        window.location.reload();\n      }\n    }\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread({}, (0, _vuex.mapGetters)([\"sidebar\", \"device\", \"user\", \"baseApi\"])), (0, _vuex.mapState)({\n    showBreadcrumb: function showBreadcrumb(state) {\n      return state.settings.showBreadcrumb;\n    }\n  })), {}, {\n    showLogo: function showLogo() {\n      return this.$store.state.settings.sidebarLogo;\n    },\n    show: {\n      get: function get() {\n        return this.$store.state.settings.showSettings;\n      },\n      set: function set(val) {\n        this.$store.dispatch(\"settings/changeSetting\", {\n          key: \"showSettings\",\n          value: val\n        });\n      }\n    }\n  }),\n  created: function created() {\n    var _this = this;\n\n    // 加载数据\n    // 查询资产数量\n    this.queryAssetsCount(); // 查询部门笔数\n\n    this.queryDeptCount(); // 查询资产分类饼图数据\n    //    this.queryPieData();  add by cjs 20220504\n    // 查询业务趋势折线图数据\n\n    this.queryLineData(); // // 查询分类账户数\n    // this.queryAccountCount();\n    // // 查询机构规模排行柱状图数据\n    // this.queryBarData();\n    // 根据部门id查询机构规模排行数据\n    // this.queryOrganizationScaleRanking();\n    // 查询资产数据增长情况多折线图数据\n\n    this.queryLinesData(); // mock接口报错\n    // 查询我的各个资产收藏\n\n    this.queryCollection();\n    this.$nextTick(function () {\n      setTimeout(function () {\n        _this.initgoRightArrow(); // 加载图表\n        //        this.getPieData();\n        //       this.getLineData();\n\n\n        _this.getBarData(); // this.getLineListData();\n\n      }, 100);\n    });\n  },\n  methods: {\n    inputChange: function inputChange(value) {\n      this.searchValue = value;\n      localStorage.setItem(\"searchKeyWords\", value);\n    },\n    globalSearch: function globalSearch() {\n      this.$router.push({\n        path: \"/searchPage/index\",\n        query: {\n          data: this.searchValue,\n          from: \"home\"\n        }\n      });\n    },\n    open: function open() {\n      var _this2 = this;\n\n      this.$confirm(\"确定注销并退出系统吗？\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(function () {\n        _this2.logout();\n      });\n    },\n    logout: function logout() {\n      this.$store.dispatch(\"LogOut\").then(function () {\n        location.reload();\n      });\n    },\n    // 数字实现三位分割显示\n    numberFormat: function numberFormat(value) {\n      if (!value) return \"0\";\n      var intPart = Number(value).toFixed(0); // 获取整数部分\n\n      var intPartFormat = intPart.toString().replace(/(\\d)(?=(?:\\d{3})+$)/g, \"$1,\"); // 将整数部分逢三一断\n\n      var floatPart = \".00\"; // 预定义小数部分\n\n      var value2Array = value.toString().split(\".\"); // =2表示数据有小数位\n\n      if (value2Array.length === 2) {\n        floatPart = value2Array[1].toString(); // 拿到小数部分\n\n        if (floatPart.length === 1) {\n          // 补0\n          return intPartFormat + \".\" + floatPart + \"0\";\n        } else {\n          return intPartFormat + \".\" + floatPart;\n        }\n      } else {\n        return intPartFormat;\n      }\n    },\n    // 选择二级目录 公司银行 数字银行 零售银行 金融市场 公共类\n    selectCompanySecond: function selectCompanySecond(index, item, value) {\n      this.companyIndex = index;\n      this.companySecond = true;\n      this.companyFirstDir = value;\n      this.companySecondDir = (index + 1).toString();\n      console.log(item);\n      this.queryThirdDir1();\n    },\n    selectNumberSecond: function selectNumberSecond(index, item, value) {\n      this.numberIndex = index;\n      this.numberSecond = true;\n      this.numberFirstDir = value;\n      this.numberSecondDir = (index + 1).toString();\n      console.log(item);\n      this.queryThirdDir2();\n    },\n    selectRetailSecond: function selectRetailSecond(index, item, value) {\n      this.retailIndex = index;\n      this.retailSecond = true;\n      this.retailFirstDir = value;\n      this.retailSecondDir = (index + 1).toString();\n      console.log(item);\n      this.queryThirdDir3();\n    },\n    selectFinanceSecond: function selectFinanceSecond(index, item, value) {\n      this.financeIndex = index;\n      this.financeSecond = true;\n      this.financeFirstDir = value;\n      this.financeSecondDir = (index + 1).toString();\n      console.log(item);\n      this.queryThirdDir4();\n    },\n    selectPublicSecond: function selectPublicSecond(index, item, value) {\n      this.publicIndex = index;\n      this.publicSecond = true;\n      this.publicFirstDir = value;\n      this.publicSecondDir = (index + 1).toString();\n      console.log(item);\n      this.queryThirdDir5();\n    },\n    // 选择三级目录到检索页\n    // 0~3 表数据资产 4~6 指标数据资产 7~9 标签数据资产\n    selectCompanyThird: function selectCompanyThird(index, item) {\n      this.$router.push({\n        path: \"/searchPage/index\",\n        query: {\n          data: item.name,\n          index: index,\n          firstDir: this.companyFirstDir,\n          secondDir: this.companySecondDir,\n          from: \"home\"\n        }\n      });\n    },\n    selectNumberThird: function selectNumberThird(index, item) {\n      this.$router.push({\n        path: \"/searchPage/index\",\n        query: {\n          data: item.name,\n          index: index,\n          firstDir: this.numberFirstDir,\n          secondDir: this.numberSecondDir,\n          from: \"home\"\n        }\n      });\n    },\n    selectRetailThird: function selectRetailThird(index, item) {\n      this.$router.push({\n        path: \"/searchPage/index\",\n        query: {\n          data: item.name,\n          index: index,\n          firstDir: this.retailFirstDir,\n          secondDir: this.retailSecondDir,\n          from: \"home\"\n        }\n      });\n    },\n    selectFinanceThird: function selectFinanceThird(index, item) {\n      this.$router.push({\n        path: \"/searchPage/index\",\n        query: {\n          data: item.name,\n          index: index,\n          firstDir: this.financeFirstDir,\n          secondDir: this.financeSecondDir,\n          from: \"home\"\n        }\n      });\n    },\n    selectPublicThird: function selectPublicThird(index, item) {\n      this.$router.push({\n        path: \"/searchPage/index\",\n        query: {\n          data: item.name,\n          index: index,\n          firstDir: this.publicFirstDir,\n          secondDir: this.publicSecondDir,\n          from: \"home\"\n        }\n      });\n    },\n    // 查询三级目录\n    queryThirdDir1: function queryThirdDir1() {\n      var _this3 = this;\n\n      this.$api.queryThirdDir({}).then(function (res) {\n        console.log(res.data, \"thirdList\");\n        _this3.companyThirdList = res.data;\n      });\n    },\n    queryThirdDir2: function queryThirdDir2() {\n      var _this4 = this;\n\n      this.$api.queryThirdDir({}).then(function (res) {\n        console.log(res.data, \"thirdList\");\n        _this4.numberThirdList = res.data;\n      });\n    },\n    queryThirdDir3: function queryThirdDir3() {\n      var _this5 = this;\n\n      this.$api.queryThirdDir({}).then(function (res) {\n        console.log(res.data, \"thirdList\");\n        _this5.retailThirdList = res.data;\n      });\n    },\n    queryThirdDir4: function queryThirdDir4() {\n      var _this6 = this;\n\n      this.$api.queryThirdDir({}).then(function (res) {\n        console.log(res.data, \"thirdList\");\n        _this6.financeThirdList = res.data;\n      });\n    },\n    queryThirdDir5: function queryThirdDir5() {\n      var _this7 = this;\n\n      this.$api.queryThirdDir({}).then(function (res) {\n        console.log(res.data, \"thirdList\");\n        _this7.publicThirdList = res.data;\n      });\n    },\n    // 查询资产数量\n    queryAssetsCount: function queryAssetsCount() {\n      var _this8 = this;\n\n      this.$api.queryAssetsCount().then(function (res) {\n        console.log(res.data, \"assetsList\");\n        _this8.assetsList = res.data;\n\n        _this8.getPieData();\n      });\n    },\n    // 查询部门笔数\n    queryDeptCount: function queryDeptCount() {\n      var _this9 = this;\n\n      this.$api.queryDeptCount().then(function (res) {\n        console.log(res, \"deptList\");\n        _this9.deptList = res;\n\n        _this9.queryOrganizationScaleRanking(res[0].id);\n      });\n    },\n    // 查询资产分类饼图数据\n    queryPieData: function queryPieData() {\n      var _this10 = this;\n\n      this.$api.queryPieData().then(function (res) {\n        console.log(res.data, \"pieData\");\n        _this10.pieData = res.data;\n      });\n    },\n    // 查询业务趋势折线图数据\n    queryLineData: function queryLineData() {\n      var _this11 = this;\n\n      this.$api.queryLineData().then(function (res) {\n        console.log(res, \"lineData\");\n        _this11.lineData = res;\n\n        _this11.getLineData();\n      });\n    },\n    // // 查询分类账户数\n    // queryAccountCount() {\n    //   this.$api.queryAccountCount().then((res) => {\n    //     console.log(res.data, \"scaleList\");\n    //     this.scaleList = res.data;\n    //   });\n    // },\n    // // 查询机构规模排行柱状图数据\n    // queryBarData() {\n    //   this.$api.queryBarData().then((res) => {\n    //     console.log(res.data, \"barData\");\n    //     this.barData = res.data;\n    //   });\n    // },\n    // 点击部门查询查询机构规模排行数据\n    getOrganizationDcaleRankingData: function getOrganizationDcaleRankingData(item) {\n      this.queryOrganizationScaleRanking(item.id);\n    },\n    // 根据部门id查询机构规模排行数据\n    queryOrganizationScaleRanking: function queryOrganizationScaleRanking(val) {\n      var _this12 = this;\n\n      this.$api.queryOrganizationScaleRanking(val).then(function (res) {\n        console.log(res.data, \"barData\");\n        _this12.scaleList = res.accountCount;\n        _this12.barData = res.barData;\n      });\n    },\n    // 查询资产数据增长情况多折线图数据\n    queryLinesData: function () {\n      var _queryLinesData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this13 = this;\n\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$api.queryLinesData();\n\n              case 2:\n                res = _context.sent;\n                this.monthList = res.data.monthRange;\n                this.trendStatisticDeptList = Object.keys(res.data.series);\n                this.trendStatisticLegendColorList.push();\n                this.trendStatisticDeptList.forEach(function (dept) {\n                  _this13.trendStatisticSeriesData.push({\n                    name: dept,\n                    type: \"line\",\n                    data: res.data.series[dept]\n                  });\n\n                  var r = Math.floor(Math.random() * 256);\n                  var g = Math.floor(Math.random() * 256);\n                  var b = Math.floor(Math.random() * 256);\n\n                  _this13.trendStatisticLegendColorList.push(\"rgba(\".concat(r, \",\").concat(g, \",\").concat(b, \",1)\"));\n                });\n                this.getLineListData();\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function queryLinesData() {\n        return _queryLinesData.apply(this, arguments);\n      }\n\n      return queryLinesData;\n    }(),\n    // 查询我的各个资产收藏\n    queryCollection: function queryCollection() {\n      var _this14 = this;\n\n      this.$api.queryCollection().then(function (res) {\n        console.log(res.data, \"assetList\");\n        _this14.assetList = res.data;\n      });\n    },\n    // 到检索页\n    goTo: function goTo(value) {\n      this.$router.push({\n        path: \"/searchPage/index\",\n        query: {\n          data: value\n        }\n      });\n    },\n    //初始化判断是否可以向右滚动\n    initgoRightArrow: function initgoRightArrow() {\n      var currentScrollWidth = this.$refs[\"fixedBox\"].clientWidth;\n      var canNumber = Math.floor(currentScrollWidth / this.signleWidth); //可以放下的个数\n      //如果最后一个流程图标已经展示出来，则停止滚动\n\n      if (this.currentClickNumber + canNumber >= this.deptList.length) {\n        this.noScrollRight = false;\n        return;\n      }\n    },\n    //点击上一个\n    fnPrev: function fnPrev() {\n      //如果右点击的次数大于0，才可以左滚\n      if (this.currentClickNumber > 0) {\n        this.currentClickNumber -= 1;\n        this.noScrollRight = true;\n        this.fnScrollWidth(\"reduce\");\n      } else {\n        return false;\n      }\n    },\n    //点击下一个\n    fnNext: function fnNext() {\n      var currentScrollWidth = this.$refs[\"fixedBox\"].clientWidth;\n      var canNumber = Math.floor(currentScrollWidth / this.signleWidth); //可以放下的个数\n      //如果最后一个流程图标已经展示出来，则停止滚动\n\n      if (this.currentClickNumber + canNumber >= this.deptList.length) {\n        return;\n      } //说明放不下有滚动条\n\n\n      if (this.deptList.length > canNumber) {\n        this.currentClickNumber += 1;\n\n        if (this.currentClickNumber + canNumber >= this.deptList.length) {\n          this.noScrollRight = false;\n        }\n\n        this.fnScrollWidth(\"add\");\n      }\n    },\n    //translate的宽度\n    fnScrollWidth: function fnScrollWidth(type) {\n      var result = 0;\n\n      if (type === \"reduce\") {\n        result = 166;\n      } else if (type === \"add\") {\n        result = -166;\n      } else {\n        result = 0;\n      }\n\n      this.scrollResultWidth += result;\n      console.log(2, this.scrollResultWidth);\n    },\n    // 资产分类 环状饼图\n    getPieData: function getPieData() {\n      var chartDom = document.getElementById(\"asset-classification\");\n      var myChart = echarts.init(chartDom);\n      var option;\n      var dataList = [{\n        value: Number(this.assetsList.table),\n        name: \"表资产\"\n      }, {\n        value: Number(this.assetsList.api),\n        name: \"API资产\"\n      }, {\n        value: Number(this.assetsList.target),\n        name: \"指标资产\"\n      }, {\n        value: Number(this.assetsList.label),\n        name: \"标签资产\"\n      }];\n      option = {\n        color: [\"rgba(138.74380000000002, 219.3, 52.63199999999999, 1)\", \"rgba(66.55499999999999, 188.20274999999998, 221.85, 1)\", \"rgba(229.5, 177.48000000000002, 45.9, 1)\", \"rgba(57.375, 129.09375, 229.5, 1)\"],\n        tooltip: {\n          trigger: \"item\"\n        },\n        legend: {\n          top: \"15%\",\n          left: \"60%\",\n          orient: \"Vertical\"\n        },\n        series: [{\n          name: \"\",\n          type: \"pie\",\n          radius: [\"60%\", \"80%\"],\n          center: [\"30%\", \"50%\"],\n          avoidLabelOverlap: false,\n          label: {\n            show: false,\n            position: \"center\"\n          },\n          emphasis: {\n            label: {\n              show: true,\n              fontSize: \"12\",\n              // fontWeight: \"bold\",\n              color: \"rgba(56, 81, 105, 1)\",\n              formatter: \"{c|{c}}笔\\n{b|{b}}\",\n              rich: {\n                b: {\n                  color: \"rgba(128, 128, 128, 1)\",\n                  fontSize: \"12\"\n                },\n                c: {\n                  color: \"rgba(56, 81, 105, 1)\",\n                  fontSize: \"16\"\n                }\n              }\n            }\n          },\n          labelLine: {\n            show: false\n          },\n          data: dataList\n        }]\n      };\n      option && myChart.setOption(option);\n    },\n    // 业务趋势 折线图\n    getLineData: function getLineData() {\n      console.log(this.lineData, \"this.lineData\");\n      var monthList = this.lineData.month;\n      var tablePerList = this.lineData.percent.table;\n      var apiPerList = this.lineData.percent.api;\n      var targetPerList = this.lineData.percent.target;\n      var labelPerList = this.lineData.percent.label;\n      var chartDom = document.getElementById(\"business-trends\");\n      var myChart = echarts.init(chartDom);\n      var option;\n      option = {\n        color: [\"rgba(138.74380000000002, 219.3, 52.63199999999999, 1)\", \"rgba(66.55499999999999, 188.20274999999998, 221.85, 1)\", \"rgba(229.5, 177.48000000000002, 45.9, 1)\", \"rgba(57.375, 129.09375, 229.5, 1)\"],\n        grid: {\n          left: \"10%\",\n          right: \"5%\",\n          top: \"5%\",\n          bottom: \"15%\"\n        },\n        xAxis: {\n          type: \"category\",\n          boundaryGap: false,\n          // data: [\"10月\", \"11月\", \"12月\", \"1月\", \"2月\", \"3月\", \"4月\"],\n          data: monthList\n        },\n        yAxis: {\n          type: \"value\",\n          name: \"%\",\n          axisLabel: {\n            formatter: \"{value}%\"\n          }\n        },\n        series: [{\n          data: tablePerList,\n          type: \"line\",\n          areaStyle: {\n            color: {\n              type: \"linear\",\n              x: 0,\n              y: 0,\n              x2: 0,\n              y2: 1,\n              colorStops: [{\n                offset: 0,\n                color: \"rgba(138.74380000000002, 219.3, 52.63199999999999, 1)\" // 0% 处的颜色\n\n              }, {\n                offset: 1,\n                color: \"rgba(242.8977, 247.35, 239.9295, 1)\" // 100% 处的颜色\n\n              }],\n              global: false // 缺省为 false\n\n            }\n          }\n        }, {\n          data: apiPerList,\n          type: \"line\",\n          areaStyle: {\n            color: {\n              type: \"linear\",\n              x: 0,\n              y: 0,\n              x2: 0,\n              y2: 1,\n              colorStops: [{\n                offset: 0,\n                color: \"rgba(66.55499999999999, 188.20274999999998, 221.85, 1)\" // 0% 处的颜色\n\n              }, {\n                offset: 1,\n                color: \"rgba(242.8977, 247.35, 239.9295, 1)\" // 100% 处的颜色\n\n              }],\n              global: false // 缺省为 false\n\n            }\n          }\n        }, {\n          data: targetPerList,\n          type: \"line\",\n          areaStyle: {\n            color: {\n              type: \"linear\",\n              x: 0,\n              y: 0,\n              x2: 0,\n              y2: 1,\n              colorStops: [{\n                offset: 0,\n                color: \"rgba(229.5, 177.48000000000002, 45.9, 1)\" // 0% 处的颜色\n\n              }, {\n                offset: 1,\n                color: \"rgba(242.8977, 247.35, 239.9295, 1)\" // 100% 处的颜色\n\n              }],\n              global: false // 缺省为 false\n\n            }\n          }\n        }, {\n          data: labelPerList,\n          type: \"line\",\n          areaStyle: {\n            color: {\n              type: \"linear\",\n              x: 0,\n              y: 0,\n              x2: 0,\n              y2: 1,\n              colorStops: [{\n                offset: 0,\n                color: \"rgba(57.375, 129.09375, 229.5, 1)\" // 0% 处的颜色\n\n              }, {\n                offset: 1,\n                color: \"rgba(242.8977, 247.35, 239.9295, 1)\" // 100% 处的颜色\n\n              }],\n              global: false // 缺省为 false\n\n            }\n          }\n        }]\n      };\n      option && myChart.setOption(option);\n    },\n    // 机构规模排行 柱状图\n    getBarData: function getBarData() {\n      console.log(this.barData, \"this.barData\");\n      var nameList = this.barData.map(function (item) {\n        return item.name;\n      });\n      var countList = this.barData.map(function (item) {\n        return item.count;\n      });\n      var chartDom = document.getElementById(\"organization-scale-ranking\");\n      var myChart = echarts.init(chartDom);\n      var option; // var height = myChart.getHeight();\n      // var opt = myChart.getOption();\n      // console.log(myChart)\n      // var grid = opt.grid;\n      // var top = grid.top;\n      // var bottom = grid.bottom;\n      // top = height*parseFloat(top)/100;\n      // bottom = height*parseFloat(bottom)/100;\n      // var y = height-bottom-top;\n\n      option = {\n        // title: {\n        //   text: \"World Population\",\n        // },\n        color: [\"rgba(139, 201, 73, 1)\"],\n        tooltip: {\n          show: true,\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"shadow\"\n          }\n        },\n        legend: {\n          show: false\n        },\n        grid: {\n          top: \"3%\",\n          left: \"3%\",\n          right: \"24%\",\n          bottom: \"3%\",\n          containLabel: true\n        },\n        xAxis: {\n          type: \"value\",\n          boundaryGap: [0, 0.01],\n          axisLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          },\n          splitLine: {\n            show: false\n          },\n          axisLabel: {\n            show: false\n          }\n        },\n        yAxis: {\n          type: \"category\",\n          // data: [\"外币\", \"外汇\", \"NRA\", \"专用\", \"临时\", \"一般\", \"基本\"],\n          data: nameList,\n          axisLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          },\n          splitLine: {\n            show: false\n          }\n        },\n        series: [{\n          type: \"bar\",\n          // barWidth: '20',\n          // data: [18203, 23489, 29034, 104970, 131744, 630230, 812412],\n          data: countList,\n          label: {\n            show: true,\n            position: \"right\",\n            offset: [0, 0]\n          } // backgroundStyle  4.7版本开始支持，目前版本4.2.1\n          // showBackground: true,\n          // backgroundStyle: {\n          //   color: \"rgba(242.8977, 247.35, 239.9295, 1)\",\n          // },\n\n        }]\n      };\n      option && myChart.setOption(option);\n    },\n    // 资产数据增长情况 折线图\n    getLineListData: function getLineListData() {\n      // console.log(this.monthList, \"this.monthList\");\n      // console.log(this.netGoldDeptList, \"this.netGoldDeptList\");\n      // console.log(this.retailDeptList, \"this.retailDeptList\");\n      // console.log(this.companyDeptList, \"this.companyDeptList\");\n      // console.log(this.mutualGoldList, \"this.mutualGoldList\");\n      var chartDom = document.getElementById(\"data-asset-growth\");\n      var myChart = echarts.init(chartDom);\n      var option;\n      option = {\n        // color: [\n        //   \"rgba(91, 143, 249, 1)\",\n        //   \"rgba(90, 216, 166, 1)\",\n        //   \"rgba(251, 151, 71, 1)\",\n        //   \"rgba(222, 88, 69, 1)\",\n        // ],\n        color: this.trendStatisticLegendColorList,\n        tooltip: {\n          show: true,\n          trigger: \"axis\" // axisPointer: {\n          //   type: \"shadow\",\n          // },\n\n        },\n        legend: {\n          show: true,\n          legend: {\n            // data: [\"网金部\", \"零售部\", \"公司部\", \"互金\"],\n            data: this.trendStatisticDeptList\n          }\n        },\n        grid: {\n          top: \"18%\",\n          left: \"0%\",\n          right: \"0%\",\n          bottom: \"0%\",\n          containLabel: true\n        },\n        xAxis: {\n          type: \"category\",\n          boundaryGap: false,\n          // data: [\n          //   \"1月\",\n          //   \"2月\",\n          //   \"3月\",\n          //   \"4月\",\n          //   \"5月\",\n          //   \"6月\",\n          //   \"7月\",\n          //   \"8月\",\n          //   \"9月\",\n          //   \"10月\",\n          // ],\n          data: this.monthList\n        },\n        yAxis: {\n          type: \"value\",\n          axisLabel: {\n            // formatter: \"{value}%\",\n            formatter: \"{value}\"\n          }\n        },\n        // series: [\n        //   {\n        //     name: \"网金部\",\n        //     type: \"line\",\n        //     data: [53, 60, 50, 30, 28, 32, 33, 52, 50, 49],\n        //     // data: this.netGoldDeptList,\n        //   },\n        //   {\n        //     name: \"零售部\",\n        //     type: \"line\",\n        //     data: [38, 40, 42, 54, 50, 42, 30, 10, 8, 6],\n        //     // data: this.retailDeptList,\n        //   },\n        //   {\n        //     name: \"公司部\",\n        //     type: \"line\",\n        //     data: [24, 21, 25, 26, 26, 24, 30, 31, 26, 25],\n        //     // data: this.companyDeptList,\n        //   },\n        //   {\n        //     name: \"互金\",\n        //     type: \"line\",\n        //     data: [null, 11, 13, 15, 18, 20, 22, 22, 29, 32],\n        //     // data: this.mutualGoldList,\n        //   },\n        // ],\n        series: this.trendStatisticSeriesData\n      };\n      option && myChart.setOption(option);\n    }\n  }\n};\nexports.default = _default;",null]}