{"remainingRequest":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DataAssetPlatform000\\Pncui-Ind\\src\\components\\operation.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\src\\components\\operation.vue","mtime":1652778333955},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1650418886580}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default2 = {\n  props: {\n    tabList: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    tableData: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    pageSize: {\n      type: Number,\n      default: 10\n    },\n    currentPage: {\n      type: Number,\n      default: 1\n    },\n    total: {\n      type: Number,\n      default: 50\n    }\n  },\n  data: function data() {\n    return {\n      activeTab: 'publish',\n      // 树形控件\n      filterText: '',\n      defaultProps: {\n        id: 'contentsId',\n        children: 'children',\n        label: 'name'\n      },\n      treeData: [],\n      publishTree: [],\n      unpublishedTree: [],\n      // 目录列表\n      catalogueList: [],\n      // 一级目录\n      firstType: 'all',\n      firstList: [],\n      // 二级目录\n      secondType: 'all',\n      secondList: [],\n      // 四级目录\n      thirdType: 'all',\n      thirdList: [],\n      // 精准筛选\n      // 表\n      belongSys: '',\n      tableName: '',\n      project: '',\n      // api\n      application: '',\n      apiDept: '',\n      // 指标\n      targetCode: '',\n      targetName: '',\n      targetType: '',\n      businessDept: '',\n      classifyOne: '',\n      // 标签\n      labelName: '',\n      objectCode: '',\n      fromCode: '',\n      branchOrInsideCode: '',\n      // 列表部分\n      // 收藏\n      save: true,\n      // 路由\n      routerName: '',\n      // 应用列表\n      appList: [],\n      // 指标类型\n      targetTypeList: [],\n      // 一级分类\n      classifyOneList: [],\n      // 部门树\n      deptTreeList: []\n    };\n  },\n  watch: {\n    save: function save(val) {\n      console.log(val);\n    },\n    // 节点过滤\n    filterText: function filterText(val) {\n      this.$refs.tree.filter(val);\n    },\n    // 树状图tab\n    activeTab: function activeTab(val) {\n      if (val === 'publish') {\n        this.treeData = this.publishTree;\n        this.queryFromFirstPage();\n      } else {\n        this.treeData = this.unpublishedTree;\n        this.queryFromFirstPage();\n      }\n    },\n    // 目录联动\n    // 一级\n    firstType: function firstType(val) {\n      if (val === 'all') {\n        this.secondType = 'all';\n      }\n\n      var data;\n      data = this.firstList.filter(function (item) {\n        return item.contentsId == val;\n      });\n\n      if (data.length < 1) {\n        this.secondList = [];\n      } else {\n        this.secondList = JSON.parse(JSON.stringify(data[0].children));\n\n        if (this.secondList.length > 0) {\n          this.secondList.unshift({\n            contentsId: 'all',\n            name: '全部',\n            children: []\n          });\n        }\n      }\n    },\n    // 二级\n    secondType: function secondType(val) {\n      if (val === 'all') {\n        this.thirdType = 'all';\n      }\n\n      console.log(val);\n      var data;\n      data = this.secondList.filter(function (item) {\n        return item.contentsId == val;\n      });\n      console.log(data, 333);\n\n      if (data.length < 1) {\n        this.thirdList = [];\n      } else {\n        this.thirdList = JSON.parse(JSON.stringify(data[0].children));\n\n        if (this.thirdList.length > 0) {\n          this.thirdList.unshift({\n            contentsId: 'all',\n            name: '全部',\n            children: []\n          });\n        }\n      }\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    // 已发布\n    this.$api.getCatalogueList({\n      state: 'publish'\n    }).then(function (res) {\n      _this.publishTree = res;\n      _this.treeData = res;\n    }); // 未发布\n\n    this.$api.getCatalogueList({\n      state: 'unpublished'\n    }).then(function (res) {\n      _this.unpublishedTree = res;\n    }); // 全部目录\n\n    this.$api.getAllCatalogueList({}).then(function (res) {\n      console.log(res, 'chushihua');\n      _this.firstList = res;\n\n      _this.firstList.unshift({\n        contentsId: 'all',\n        name: '全部',\n        children: []\n      });\n    }); // 查询所有应用   appList\n    // 查询指标类型, 一级分类，二级分类      \n    // 查询部门树\n\n    this.$api.getApplication({}).then(function (res) {\n      _this.appList = res.data;\n    });\n    this.$api.getTargetSelect({}).then(function (res) {\n      _this.targetTypeList = res.data.targetTypeList;\n    });\n    this.$api.getClassifyList({}).then(function (res) {\n      _this.classifyOneList = res.classifyOne;\n    });\n    this.$api.getDeptTree({}).then(function (res) {\n      _this.deptTreeList = res.data;\n    });\n    this.routerName = this.$route.name;\n  },\n  mounted: function mounted() {},\n  methods: {\n    // 树状图tab\n    handleClick: function handleClick(tab, event) {\n      this.$emit('handleClick', tab, event);\n    },\n    // 节点过滤\n    filterNode: function filterNode(value, data) {\n      if (!value) return true;\n      return data.name.indexOf(value.toString()) !== -1;\n    },\n    // 节点点击   --- 树状图节点点击调接口重新查询列表\n    handleNodeClick: function handleNodeClick(data, node) {\n      // 最后一级节点点击\n      if (!data.children || data.children.length == 0) {\n        this.thirdType = data.contentsId;\n        this.secondType = node.parent.data.contentsId;\n        this.firstType = node.parent.parent.data.contentsId;\n        this.queryFromFirstPage();\n      } else {\n        console.log('非最后一级');\n      }\n    },\n    // 从第一页开始查询\n    queryFromFirstPage: function queryFromFirstPage() {\n      this.currentPage = 1;\n      this.queryList();\n    },\n    // 列表查询  搜索\n    queryList: function queryList() {\n      // 表\n      var request = {};\n\n      if (this.routerName === '表运营') {\n        request = {\n          page: String(this.currentPage),\n          size: String(this.pageSize),\n          tableName: this.tableName,\n          assetsState: this.activeTab,\n          project: this.project,\n          belongSys: this.belongSys,\n          contentsOne: this.firstType,\n          contentsTwo: this.secondType,\n          contentsThree: this.thirdType\n        };\n\n        if (this.firstType === 'all') {\n          request.contentsOne = '';\n        }\n\n        if (this.secondType === 'all') {\n          request.contentsTwo = '';\n        }\n\n        if (this.thirdType === 'all') {\n          request.contentsThree = '';\n        }\n      } else if (this.routerName === 'API运营') {\n        request = {\n          page: String(this.currentPage),\n          size: String(this.pageSize),\n          driverType: '',\n          assetsState: this.activeTab,\n          contacts: '',\n          application: this.application,\n          contentsOne: this.firstType,\n          contentsTwo: this.secondType,\n          contentsThree: this.thirdType\n        };\n\n        if (this.firstType === 'all') {\n          request.contentsOne = '';\n        }\n\n        if (this.secondType === 'all') {\n          request.contentsTwo = '';\n        }\n\n        if (this.thirdType === 'all') {\n          request.contentsThree = '';\n        }\n      } else if (this.routerName === '指标运营') {\n        request = {\n          page: String(this.currentPage),\n          size: String(this.pageSize),\n          assetsState: this.activeTab,\n          targetName: this.tableName,\n          targetCode: this.targetCode,\n          classifyOne: this.classifyOne,\n          targetType: this.targetType,\n          businessDept: this.businessDept,\n          contentsOne: this.firstType,\n          contentsTwo: this.secondType,\n          contentsThree: this.thirdType\n        };\n\n        if (this.firstType === 'all') {\n          request.contentsOne = '';\n        }\n\n        if (this.secondType === 'all') {\n          request.contentsTwo = '';\n        }\n\n        if (this.thirdType === 'all') {\n          request.contentsThree = '';\n        }\n      } else if (this.routerName === '标签运营') {\n        request = {\n          page: String(this.currentPage),\n          size: String(this.pageSize),\n          branchOrInsideCode: this.branchOrInsideCode,\n          assetsState: this.activeTab,\n          objectCode: this.objectCode,\n          classifyName: '',\n          fromCode: this.fromCode,\n          labelName: this.labelName,\n          description: '',\n          contentsOne: this.firstType,\n          contentsTwo: this.secondType,\n          contentsThree: this.thirdType\n        };\n\n        if (this.firstType === 'all') {\n          request.contentsOne = '';\n        }\n\n        if (this.secondType === 'all') {\n          request.contentsTwo = '';\n        }\n\n        if (this.thirdType === 'all') {\n          request.contentsThree = '';\n        }\n      }\n\n      this.$emit('queryList', request);\n      console.log('搜索');\n    },\n    // 分页\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.currentPage = val;\n      this.queryList();\n    },\n    // 修改\n    modify: function modify(item) {\n      console.log(item, '修改');\n      this.$router.push({\n        path: '/detailsMod/' + item.assetType,\n        query: {\n          id: item.id\n        }\n      });\n    },\n    // 下线\n    offline: function offline(item) {\n      var request = {\n        id: item.id,\n        assetsState: item.assetsState === 'publish' ? 'unpublished' : 'publish'\n      };\n      this.$emit('offline', request);\n    },\n    // 添加收藏\n    addFavorite: function addFavorite(item) {\n      var _this2 = this;\n\n      this.$api.addFavorite({\n        assetId: item.id,\n        assetType: item.assetType\n      }).then(function (res) {\n        _this2.$message.success('添加收藏成功!');\n\n        _this2.queryList();\n      });\n    },\n    // 删除收藏\n    delFavorite: function delFavorite(item) {\n      var _this3 = this;\n\n      this.$api.delFavorite({\n        assetId: item.id,\n        assetType: item.assetType\n      }).then(function (res) {\n        _this3.$message.success('取消收藏成功!');\n\n        _this3.queryList();\n      });\n    }\n  }\n};\nexports.default = _default2;",null]}