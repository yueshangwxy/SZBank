{"remainingRequest":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DataAssetPlatform000\\Pncui-Ind\\src\\views\\indicators\\portalHome\\manager\\roleManager.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\src\\views\\indicators\\portalHome\\manager\\roleManager.vue","mtime":1654848715707},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1650418886580}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/code/DataAssetPlatform000/Pncui-Ind/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"D:/code/DataAssetPlatform000/Pncui-Ind/node_modules/@babel/runtime/helpers/defineProperty\"));\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _addUserDialog = _interopRequireDefault(require(\"./addUserDialog.vue\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar _default = {\n  name: \"roleManager\",\n  components: {\n    AddUserDialog: _addUserDialog.default\n  },\n  data: function data() {\n    return {\n      name: \"\",\n      date: \"\",\n      dateValue: [],\n      // 表格\n      tableData: [],\n      propList: [{\n        prop: \"name\",\n        label: \"名称\",\n        align: \"center\"\n      }, // {\n      //   prop: \"tenantName\",\n      //   label: \"所属租户\",\n      //   align: \"center\",\n      // },\n      {\n        prop: \"remark\",\n        label: \"描述\"\n      }, {\n        prop: \"crtDate\",\n        type: \"dateTime\",\n        label: \"创建日期\"\n      }],\n      // 分页\n      pageSize: 10,\n      total: 10,\n      currentPage: 1,\n      // 角色新增弹窗\n      addOrEditTitle: \"\",\n      addRoleVisible: false,\n      // tenantList: [],\n      ruleForm: {\n        // tenant: '',\n        name: \"\",\n        remark: \"\"\n      },\n      rules: {\n        tenantName: [{\n          required: true,\n          message: \"请选择租户\",\n          trigger: \"change\"\n        }],\n        name: [{\n          required: true,\n          message: \"请输入名称\",\n          trigger: \"blur\"\n        }]\n      },\n      // 单条数据删除popover框\n      singleDelVis: false,\n      // 新增用户弹窗\n      addUserVisible: false,\n      // 批量删除提示框\n      batchDeleteVisible: false,\n      // 当前选中行\n      selectRows: [],\n      // 当前操作行id\n      rowId: \"\"\n    };\n  },\n  watch: {\n    date: function date(val) {\n      if (val) {\n        var startTime = this.$formatDate(val[0]);\n        var endTime = this.$formatDate(val[1]);\n        this.dateValue = [startTime, endTime];\n      } else {\n        this.dateValue = [];\n      }\n    }\n  },\n  mounted: function mounted() {},\n  computed: {},\n  created: function created() {\n    this.queryList();\n  },\n  methods: {\n    // 重置\n    reset: function reset() {\n      this.name = \"\";\n      this.date = \"\";\n    },\n    // 从第一页开始搜索\n    initList: function initList() {\n      this.currentPage = 1;\n      this.queryList();\n    },\n    // 列表查询\n    queryList: function queryList() {\n      var _this = this;\n\n      // name(输入名称或者描述搜索) crtDate(时间控制) size(分页条数)  page(页码)\n      var request = {\n        name: this.name,\n        crtDateBeg: this.dateValue[0] || '',\n        crtDateEnd: this.dateValue[1] || '',\n        size: this.pageSize,\n        page: this.currentPage\n      };\n      this.$api.qryRoleListPage(request).then(function (res) {\n        if (res.data && res.data.records) {\n          _this.tableData = res.data.records;\n          _this.total = res.data.total;\n        }\n      });\n    },\n    // 复选框选中\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.selectRows = val;\n    },\n    // 角色新增\n    addRole: function addRole() {\n      var _this2 = this;\n\n      this.addOrEditTitle = \"新增角色\";\n      this.addRoleVisible = true;\n      this.$nextTick(function () {\n        _this2.$refs[\"ruleForm\"].resetFields();\n      });\n    },\n    // 新增/编辑角色弹窗确定\n    confirmAddRole: function confirmAddRole() {\n      var _this3 = this;\n\n      this.$refs[\"ruleForm\"].validate(function (valid) {\n        if (valid) {\n          if (_this3.addOrEditTitle === \"新增角色\") {\n            _this3.$api.createRole({\n              name: _this3.ruleForm.name,\n              remark: _this3.ruleForm.remark\n            }).then(function (res) {\n              if (res.code == 200 || res.code == 0) {\n                _this3.$message.success(res.msg);\n\n                _this3.addRoleVisible = false;\n\n                _this3.queryList();\n              } else {\n                _this3.$message.error(res.msg);\n              }\n            });\n          } else if (_this3.addOrEditTitle === \"编辑角色\") {\n            _this3.$api.updateRole({\n              id: _this3.rowId,\n              name: _this3.ruleForm.name,\n              remark: _this3.ruleForm.remark\n            }).then(function (res) {\n              if (res.code == 200 || res.code == 0) {\n                _this3.$message.success(res.msg);\n\n                _this3.addRoleVisible = false;\n                _this3.ruleForm = {};\n\n                _this3.queryList();\n              } else {\n                _this3.$message.error(res.msg);\n              }\n            });\n          }\n        } else {\n          return false;\n        }\n      });\n    },\n    // 新增用户弹窗  -- 打开\n    addUser: function addUser(row) {\n      this.rowId = row.id;\n      this.ruleForm = {};\n      this.addUserVisible = true;\n    },\n    // 新增用户弹窗  -- 确定\n    confirmAddUser: function confirmAddUser() {\n      this.addUserVisible = false;\n    },\n    // 新增用户弹窗  -- 关闭\n    closeAddUser: function closeAddUser() {\n      this.addUserVisible = false;\n    },\n    // 修改\n    modify: function modify(row) {\n      var _this4 = this;\n\n      this.rowId = row.id;\n      this.addOrEditTitle = \"编辑角色\";\n      this.addRoleVisible = true;\n      this.$nextTick(function () {\n        _this4.ruleForm = _objectSpread({}, row);\n\n        _this4.$refs[\"ruleForm\"].resetFields();\n      });\n    },\n    // 关闭popover\n    handleClose: function handleClose(index) {\n      this.$refs[\"popover-\".concat(index)].doClose();\n    },\n    // 批量删除\n    batchDelete: function batchDelete() {\n      this.batchDeleteVisible = true;\n    },\n    formatDateTime: function formatDateTime(dateTime) {\n      if (dateTime) {\n        var now = new Date(dateTime);\n        var year = now.getFullYear();\n        var month = now.getMonth() + 1;\n        var date = now.getDate();\n        return year + \"-\" + month + \"-\" + date + \" \";\n      }\n    },\n    // 批量删除提示框确定\n    confirmDelete: function confirmDelete() {\n      var _this5 = this;\n\n      // 调接口  当前选中数据this.selectRows\n      var temp = [];\n      this.selectRows.forEach(function (item) {\n        temp.push(item.id);\n      });\n      var request = {\n        ids: temp\n      };\n      this.$api.deleteRole(request).then(function (res) {\n        if (res.code == 200 || res.code == 0) {\n          _this5.batchDeleteVisible = false;\n\n          _this5.$message.success(res.msg);\n\n          _this5.queryList();\n        } else {\n          _this5.$message.error(res.msg);\n        }\n      });\n    },\n    // 删除  --- 单行\n    delRow: function delRow(row, index) {\n      var _this6 = this;\n\n      // this.rowId = row.id;\n      var request = {\n        id: row.id\n      }; // 调接口删除\n\n      this.$api.deleteRole(request).then(function (res) {\n        if (res.code == 200 || res.code == 0) {\n          _this6.handleClose(index);\n\n          _this6.$message.success(res.msg);\n\n          _this6.queryList();\n        } else {\n          _this6.$message.error(res.msg);\n        }\n      });\n    },\n    //  分页\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.currentPage = val;\n      this.queryList();\n    }\n  }\n};\nexports.default = _default;",null]}