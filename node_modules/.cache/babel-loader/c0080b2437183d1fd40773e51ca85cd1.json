{"remainingRequest":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js!F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\code\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\code\\indicator\\Pncui-Indicator\\src\\views\\indicators\\dimension\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\code\\indicator\\Pncui-Indicator\\src\\views\\indicators\\dimension\\index.vue","mtime":1644212170972},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"F:/code/indicator/Pncui-Indicator/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _objectSpread from \"F:/code/indicator/Pncui-Indicator/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _methods;\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import crudIndDimension from '../../../api/indicators/indDimension'\nimport crudIndClassification, { getClassifications } from '@/api/indicators/indClassification';\nimport crudIndDimInfo, { getDimInfos } from '@/api/indicators/indDimInfo';\nimport crudIndDimValue, { getDimValues } from '@/api/indicators/indDimValue';\nimport CRUD, { presenter, header, form, crud } from '@crud/crud';\nimport rrOperation from '@crud/RR.operation';\nimport crudOperation from '@crud/CRUD.operation';\nimport udOperation from '@crud/UD.operation';\nimport pagination from '@crud/Pagination';\nimport { getValueListByTableAndColumn } from '@/api/indicators/indDimension';\nimport { getTableListById } from '@datasource/api/datasources/indDataTable';\nimport { getColumnListByDataSourceIdAndTableName } from '@datasource/api/datasources/indDataColumn';\nimport dimData from \"../dimension/dimData\";\nimport dimCategory from \"../category/dimCategory\";\nimport { isSuperAdmin, getTenants } from '@/api/indUserApply/indTenant';\nimport { validateStrLenHalfHundred, validateStrLenHundred } from \"@/utils/validator\"; // crud交由presenter持有\n\nvar defaultCrud = CRUD({\n  title: '维度值管理',\n  url: crudIndDimValue.url,\n  sort: 'id,desc',\n  crudMethod: _objectSpread({}, crudIndDimValue.method)\n});\nvar defaultForm = {\n  id: null,\n  dimInfoId: null,\n  lastLevelDimValueId: null,\n  dimValueName: null,\n  dimValueLevel: null,\n  crtUserCode: null,\n  crtOrgCode: null,\n  crtDate: null,\n  updUserCode: null,\n  updOrgCode: null,\n  updDate: null\n};\nexport default {\n  name: 'IndClassification',\n  components: {\n    pagination: pagination,\n    crudOperation: crudOperation,\n    rrOperation: rrOperation,\n    udOperation: udOperation,\n    dimData: dimData,\n    dimCategory: dimCategory\n  },\n  mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\n  dicts: ['DIMENSION_CATEGORY', 'DIMENSION', 'LAST_LEVEL_DIMENSION_VALUE'],\n  data: function data() {\n    return {\n      table: {\n        columns: {\n          id: 'hidden',\n          datasourceId: 'hidden',\n          nameColumn: 'hidden',\n          nameColumnDesc: 'hidden',\n          codeColumn: 'hidden',\n          codeColumnDesc: 'hidden',\n          alias: 'hidden',\n          pkFlag: 'hidden',\n          filterColumn: 'hidden',\n          filterValue: 'hidden'\n        }\n      },\n      tableData: [],\n      tableInfo: [],\n      tableDB: [],\n      DictDB: [],\n      selectData: [],\n      screenData: [],\n      showDimInfo: false,\n      permission: {\n        add: ['admin', 'indDimension:add'],\n        edit: ['admin', 'indDimension:edit'],\n        del: ['admin', 'indDimension:del'],\n        showAllDimCode: ['admin', 'indDimension:showAllDimCode'],\n        details: ['admin', 'indDimension:details']\n      },\n      rules: {\n        dimCode: [{\n          required: true,\n          message: '维度编号不能为空',\n          trigger: 'blur'\n        }],\n        dimName: [{\n          required: true,\n          message: '维度名称不能为空',\n          trigger: 'blur'\n        }],\n        tableName: [{\n          required: true,\n          message: '维表表名称不能为空',\n          trigger: 'blur'\n        }],\n        codeColumn: [{\n          required: true,\n          message: '代码字段不能为空',\n          trigger: 'blur'\n        }],\n        codeColumnDesc: [{\n          required: true,\n          message: '代码字段描述不能为空',\n          trigger: 'blur'\n        }],\n        nameColumn: [{\n          required: true,\n          message: '显示字段不能为空',\n          trigger: 'blur'\n        }],\n        nameColumnDesc: [{\n          required: true,\n          message: '显示字段描述不能为空',\n          trigger: 'blur'\n        }]\n      },\n      showIndDimensionAdd: false,\n      category: {\n        id: null,\n        categoryName: null,\n        //分类名称\n        tenant: null\n      },\n      dimension: {\n        id: null,\n        classificationId: null,\n        // 所属分类\n        categoryName: null,\n        // 指标维度名称\n        remarks: null,\n        // 备注\n        tenant: null //租户 法人\n\n      },\n      dimensionRules: {\n        categoryName: [{\n          max: 50,\n          message: '指标维度名称长度不能超过50字',\n          trigger: ['blur', 'change']\n        }, {\n          required: true,\n          message: '指标维度名称不能为空',\n          trigger: 'blur'\n        }, {\n          validator: validateStrLenHundred,\n          trigger: 'blur'\n        }],\n        classificationId: [{\n          required: true,\n          message: '请选择所属分类',\n          trigger: 'change'\n        }],\n        remarks: [{\n          max: 200,\n          message: '备注长度不能超过200字',\n          trigger: ['blur', 'change']\n        }, {\n          validator: validateStrLenHundred,\n          trigger: 'blur'\n        }],\n        tenant: [{\n          required: true,\n          message: '所属租户不能为空',\n          trigger: 'blur'\n        }]\n      },\n      showIndDimensionValueAdd: false,\n      dimensionValue: {\n        id: null,\n        dimInfoId: null,\n        // 所属维度\n        lastLevelDimValueId: null,\n        // 上级维度值\n        categoryName: null,\n        // 指标维度值\n        dimLevel: null // 维度树层级\n\n      },\n      dimensionValueRules: {\n        categoryName: [{\n          max: 50,\n          message: '指标维度值长度不能超过50字',\n          trigger: ['blur', 'change']\n        }, {\n          required: true,\n          message: '指标维度值不能为空',\n          trigger: 'blur'\n        }, {\n          validator: validateStrLenHalfHundred,\n          trigger: 'blur'\n        }]\n      },\n      categoryRules: {\n        categoryName: [{\n          max: 50,\n          message: '指标维度分类名称长度不能超过50字',\n          trigger: ['blur', 'change']\n        }, {\n          required: true,\n          message: '指标维度分类名称不能为空',\n          trigger: 'blur'\n        }],\n        tenant: [{\n          required: true,\n          message: '所属租户不能为空',\n          trigger: 'blur'\n        }]\n      },\n      indDimensionDialog: '指标维度名称-新增',\n      indDimensionValueDialog: '指标维度值-新增',\n      indDimensionCateDialog: '指标维度分类-新增',\n      showIndDimensionCateAdd: false,\n      classificationArr: [],\n      dimInfoArr: [],\n      dimValueArr: [],\n      lastLevelDimValueFlag: false,\n      dimLevel: null,\n      dimTreeInfoChildren: null,\n      dimTreeValueName: null,\n      //层级树 维度值名称\n      dimTreeValueInfoId: null,\n      //层级树 维度值的维度id\n      dimTreeValueLastLevelId: null,\n      ////层级树 维度值 上级维度值id\n      dimTreeValueId: null,\n      ////层级树 维度值id\n      dimTreeValueChildren: null,\n      buttonTreeData: null,\n      //点击\n      superAdminFlag: false,\n      tenantArr: []\n    };\n  },\n  created: function created() {\n    this.superAdminFlag = isSuperAdmin(); // this.$nextTick(() => {\n    //   getAllSource().then(data => {\n    //   // console.log(\"=====getAllSource====>>>>\",data)\n    //     if (data.code === 0) {\n    //       this.tableDB = data.data\n    //     } else {\n    //       this.$message.error({\n    //         message: '获取数据失败'\n    //       })\n    //     }\n    //   })\n    //   getTableListById('all').then(data => {\n    //     if (data.code === 0) {\n    //       this.DictDB = data.data\n    //     } else {\n    //       this.$message.error({\n    //         message: '获取数据失败'\n    //       })\n    //     }\n    //   })\n    // })\n\n    this.initTreeData();\n    this.crud.optShow.del = false;\n    this.crud.optShow.add = false;\n    this.resetQuery();\n  },\n  methods: (_methods = {\n    resetQuery: function resetQuery() {\n      this.crud.resetQuery(false);\n      this.crud.refresh();\n    },\n    initTreeData: function initTreeData() {\n      var _this2 = this;\n\n      //获取所有维度分类树\n      getClassifications({\n        size: 100,\n        page: 0\n      }).then(function (data) {\n        _this2.$refs.dimCategory.treeData[0].children = data.data.records;\n        _this2.classificationArr = data.data.records;\n      });\n      getDimInfos({\n        size: 100,\n        page: 0\n      }).then(function (data) {\n        _this2.dimInfoArr = data.data.records;\n      });\n      getDimValues({\n        size: 100,\n        page: 0\n      }).then(function (data) {\n        _this2.dimValueArr = data.data.records;\n      });\n      getTenants().then(function (data) {\n        if (data != null && data.code == '0000') {\n          _this2.tenantArr = data.data;\n        }\n      });\n    }\n  }, _defineProperty(_methods, CRUD.HOOK.beforeRefresh, function () {\n    return true;\n  }), _defineProperty(_methods, CRUD.HOOK.beforeToAdd, function () {\n    var _this3 = this;\n\n    this.tableData = [];\n    this.tableInfo = [];\n    this.form.datasourceId = 'local';\n    getTableListById(this.form.datasourceId).then(function (data) {\n      if (data.code === 0) {\n        _this3.tableData = data.data;\n      } else {\n        _this3.clearFrom();\n      }\n    });\n  }), _defineProperty(_methods, CRUD.HOOK.beforeToEdit, function () {\n    var _this4 = this;\n\n    getTableListById(this.form.datasourceId).then(function (data) {\n      // console.log(\"====getTables====>>>>>\",data)\n      if (data.code === 0) {\n        _this4.tableData = data.data;\n      } else {\n        _this4.tableData = [];\n      }\n    });\n    getColumnListByDataSourceIdAndTableName(this.form.datasourceId, this.form.tableName).then(function (data) {\n      // console.log(\"========getColumns====>>>>\",data)\n      if (data.code === 0) {\n        if (data.data.length === 0) {\n          _this4.$message.error({\n            message: '表' + _this4.form.tableName + '不存在'\n          });\n        }\n\n        _this4.tableInfo = data.data;\n      } else {\n        _this4.tableInfo = [];\n      }\n    });\n\n    if (this.form.filterColumn !== null && this.form.filterColumn !== '') {\n      var temp = this.form.filterValue;\n      var tempArray = [];\n\n      if (temp !== null && temp !== '' && temp.indexOf(',') !== -1) {\n        tempArray = temp.split(',');\n      } else if (temp !== null && temp !== '') {\n        tempArray.push(temp);\n      }\n\n      this.form.filterValue = tempArray;\n      getValueListByTableAndColumn(this.form.tableName, this.form.filterColumn, this.form.datasourceId).then(function (data) {\n        if (data.code === 0) {\n          _this4.screenData = data.data;\n        } else {\n          _this4.$message.error({\n            message: '表' + _this4.form.tableName + '或列' + _this4.form.filterColumn + '不存在'\n          });\n        }\n      });\n    }\n  }), _defineProperty(_methods, CRUD.HOOK.beforeSubmit, function () {\n    if (this.form.filterValue !== null && this.form.filterValue !== '') {\n      this.form.filterValue = String(this.form.filterValue);\n    }\n  }), _defineProperty(_methods, \"getTableInfo\", function getTableInfo() {\n    var _this5 = this;\n\n    this.form.nameColumn = '';\n    this.form.nameColumnDesc = '';\n    this.form.codeColumn = '';\n    this.form.codeColumnDesc = '';\n    this.form.filterColumn = '';\n    this.form.filterValue = '';\n    getColumnListByDataSourceIdAndTableName(this.form.datasourceId, this.form.tableName).then(function (data) {\n      // console.log(\"========getColumns====>>>>\",data)\n      if (data.code === 0) {\n        if (data.data.length === 0) {\n          _this5.$message.error({\n            message: '表' + _this5.form.tableName + '不存在'\n          });\n        }\n\n        _this5.tableInfo = data.data;\n      } else {\n        _this5.tableInfo = [];\n      }\n    });\n  }), _defineProperty(_methods, \"getListData\", function getListData() {\n    var _this6 = this;\n\n    this.form.filterValue = '';\n\n    if (this.form.filterColumn !== null && this.form.filterColumn !== '') {\n      getValueListByTableAndColumn(this.form.tableName, this.form.filterColumn, this.form.datasourceId).then(function (data) {\n        if (data.code === 0) {\n          _this6.screenData = data.data;\n        } else {\n          _this6.$message.error({\n            message: '表' + _this6.form.tableName + '或列' + _this6.form.filterColumn + '不存在'\n          });\n        }\n      });\n    }\n  }), _defineProperty(_methods, \"setColumnDesc\", function setColumnDesc() {\n    var _this7 = this;\n\n    this.tableInfo.forEach(function (row) {\n      if (_this7.form.nameColumn === row.columnName) {\n        _this7.form.nameColumnDesc = row.columnDesc;\n      }\n    });\n  }), _defineProperty(_methods, \"setCodeDesc\", function setCodeDesc() {\n    var _this8 = this;\n\n    this.tableInfo.forEach(function (row) {\n      if (_this8.form.codeColumn === row.columnName) {\n        _this8.form.codeColumnDesc = row.columnDesc;\n      }\n    });\n  }), _defineProperty(_methods, \"getTableByDB\", function getTableByDB() {\n    var _this9 = this;\n\n    this.clearFrom();\n    getTableListById(this.form.datasourceId).then(function (data) {\n      if (data.code === 0) {\n        _this9.tableData = data.data;\n      } else {\n        _this9.clearFrom();\n      }\n    });\n  }), _defineProperty(_methods, \"clearFrom\", function clearFrom() {\n    this.form.nameColumn = '';\n    this.form.nameColumnDesc = '';\n    this.form.tableName = '';\n    this.form.codeColumn = '';\n    this.form.codeColumnDesc = '';\n    this.form.filterColumn = '';\n    this.form.filterValue = '';\n    this.tableData = [];\n    this.tableInfo = [];\n  }), _defineProperty(_methods, \"formatId\", function formatId(row) {\n    var name = '';\n    this.tableDB.forEach(function (row1) {\n      if (row1.id === row.datasourceId) {\n        name = row1.datasourceName;\n      }\n    });\n    return name;\n  }), _defineProperty(_methods, \"formatTableName\", function formatTableName(row) {\n    var name = '';\n    this.DictDB.forEach(function (row1) {\n      if (row1.tableName === row.tableName) {\n        name = row1.tableDesc;\n      }\n    });\n    return name;\n  }), _defineProperty(_methods, \"handleInfo\", function handleInfo(row) {\n    this.form.id = row.id;\n    this.form.dimCode = row.dimCode;\n    this.form.datasourceId = row.datasourceId;\n    this.form.dimName = row.dimName;\n    this.form.tableName = row.tableName;\n    this.form.codeColumn = row.codeColumn;\n    this.form.codeColumnDesc = row.codeColumnDesc;\n    this.form.nameColumn = row.nameColumn;\n    this.form.nameColumnDesc = row.nameColumnDesc;\n    this.form.pid = row.pid;\n    this.form.dimLevel = row.dimLevel;\n    this.form.filterColumn = row.filterColumn;\n    this.form.filterValue = row.filterValue;\n    this.form.alias = row.alias;\n    this.form.pkFlag = row.pkFlag;\n    this.form.crtUserCode = row.crtUserCode;\n    this.form.crtOrgCode = row.crtOrgCode;\n    this.form.crtDate = this.parseTime(row.crtDate);\n    this.form.updUserCode = row.updUserCode;\n    this.form.updOrgCode = row.updOrgCode;\n    this.form.updDate = this.parseTime(row.updDate);\n    this.showDimInfo = true;\n  }), _defineProperty(_methods, \"showAllDimCode\", function showAllDimCode(data) {\n    console.log(\"========showAllDimCode====>>>>\", data);\n    var _this = this.$refs.dimData;\n    _this.query.tableName = data.tableName;\n    _this.query.columnDimCode = data.dimCode;\n    _this.query.columnDimName = data.dimName;\n    _this.query.columnCodeColumn = data.codeColumn;\n    _this.query.columnNameColumn = data.nameColumn;\n    _this.query.columnDimLevel = data.dimLevel;\n    _this.query.columnFilterColumn = data.filterColumn;\n    _this.query.columnPid = data.pid;\n    _this.tCode = data.codeColumnDesc;\n    _this.tName = data.nameColumnDesc;\n    var temp = String(data.filterValue);\n    _this.query.queryFilter = temp;\n\n    if (temp !== null && temp !== '' && temp.indexOf(',') !== -1) {\n      _this.filterValue = temp.split(',');\n    } else {\n      _this.filterValue.push(temp);\n    }\n\n    _this.searchDimData();\n\n    _this.showAllDim = true;\n  }), _defineProperty(_methods, \"handleCategoryClick\", function handleCategoryClick(data) {\n    console.log(\"handleCategoryClick =========== \" + data);\n    this.dimLevel = data.dimLevel;\n    this.buttonTreeData = data;\n\n    if (data.dimLevel == 0) {\n      this.query.dimInfoId = null;\n      this.query.treeLevel = data.dimLevel;\n      defaultCrud.toQuery();\n    } else if (data.dimLevel == 1) {\n      this.dimension.classificationId = data.id;\n    } else if (data.dimLevel == 2) {\n      //用来配置维度值\n      this.dimensionValue.dimInfoId = data.id;\n      this.dimensionValue.id = null;\n      this.dimTreeInfoChildren = data.children; //用来修改维度赋值\n\n      this.dimension.categoryName = data.categoryName;\n      this.dimension.id = data.id;\n      this.dimension.classificationId = data.classificationId;\n      this.dimension.remarks = data.remarks;\n    } else if (data.dimLevel == 3 || data.dimLevel == 4 || data.dimLevel == 5) {\n      this.dimTreeValueName = data.categoryName;\n      this.dimTreeValueInfoId = data.dimInfoId;\n      this.dimTreeValueLastLevelId = data.lastLevelDimValueId;\n      this.dimTreeValueId = data.id;\n      this.dimTreeValueChildren = data.children;\n      /*\r\n      this.lastLevelDimValueFlag = data.dimLevel == 3;\r\n      this.dimensionValue.categoryName = data.categoryName\r\n      this.dimensionValue.id = data.id\r\n      this.dimensionValue.dimInfoId = data.dimInfoId\r\n      this.dimensionValue.lastLevelDimValueId = data.lastLevelDimValueId\r\n      this.dimensionValue.dimLevel = data.dimLevel\r\n      */\n    }\n\n    if (data.dimLevel == 1 || data.dimLevel == 2 || data.dimLevel == 5) {\n      this.query.treeLevel = data.dimLevel;\n      this.query.treeId = data.id;\n      this.query.dimInfoId = data.id;\n      defaultCrud.toQuery();\n    } else if (data.dimLevel == 3 || data.dimLevel == 4) {\n      this.query.treeLevel = data.dimLevel;\n      this.query.treeId = data.id;\n      this.query.dimInfoId = data.id;\n      defaultCrud.toQuery();\n    }\n  }), _defineProperty(_methods, \"closeIndDimensionAddDialog\", function closeIndDimensionAddDialog() {\n    this.showIndDimensionAdd = false;\n  }), _defineProperty(_methods, \"commitDim\", function commitDim() {\n    var _this10 = this;\n\n    this.crud.findVM('form').$refs['form'].validate(function (valid) {\n      if (!valid) {\n        return;\n      }\n\n      if (_this10.dimension.id == null) {\n        crudIndDimInfo.crud.add(_this10.dimension).then(function (data) {\n          if (data.code && data.code !== 0) {\n            _this10.$notify({\n              title: data.msg,\n              type: 'error',\n              duration: 2500\n            }); //this.showIndDimensionAdd = false\n\n          } else {\n            _this10.$notify({\n              title: '新增成功',\n              type: 'success',\n              duration: 2500\n            });\n\n            _this10.initTreeData();\n\n            _this10.showIndDimensionAdd = false;\n          }\n        });\n      } else {\n        crudIndDimInfo.crud.edit(_this10.dimension).then(function (data) {\n          if (data.code && data.code !== 0) {\n            _this10.$notify({\n              title: data.msg,\n              type: 'error',\n              duration: 2500\n            }); // this.showIndDimensionAdd = false\n\n          } else {\n            _this10.$notify({\n              title: '编辑成功',\n              type: 'success',\n              duration: 2500\n            });\n\n            _this10.initTreeData();\n\n            _this10.showIndDimensionAdd = false;\n          }\n        });\n      }\n    });\n  }), _defineProperty(_methods, \"closeIndDimensionValueAddDialog\", function closeIndDimensionValueAddDialog() {\n    this.showIndDimensionValueAdd = false;\n  }), _defineProperty(_methods, \"commitDimValue\", function commitDimValue() {\n    var _this11 = this;\n\n    this.crud.findVM('form').$refs['form'].validate(function (valid) {\n      if (!valid) {\n        return;\n      }\n\n      if (_this11.dimensionValue.id == null) {\n        crudIndDimValue.crud.add(_this11.dimensionValue).then(function (data) {\n          if (data.code && data.code !== 0) {\n            _this11.$notify({\n              title: data.msg,\n              type: 'error',\n              duration: 2500\n            }); //this.showIndDimensionValueAdd = false\n\n          } else {\n            _this11.$notify({\n              title: '新增成功',\n              type: 'success',\n              duration: 2500\n            });\n\n            _this11.initTreeData();\n\n            _this11.showIndDimensionValueAdd = false;\n            defaultCrud.toQuery();\n          }\n        });\n      } else {\n        crudIndDimValue.crud.edit(_this11.dimensionValue).then(function (data) {\n          if (data.code && data.code !== 0) {\n            _this11.$notify({\n              title: data.msg,\n              type: 'error',\n              duration: 2500\n            });\n\n            _this11.showIndDimensionValueAdd = false;\n          } else {\n            _this11.$notify({\n              title: '编辑成功',\n              type: 'success',\n              duration: 2500\n            });\n\n            _this11.initTreeData();\n\n            _this11.showIndDimensionValueAdd = false;\n            defaultCrud.toQuery();\n          }\n        });\n      }\n    });\n  }), _defineProperty(_methods, \"addDimension\", function addDimension(data) {\n    if (data.dimLevel == 0) {\n      // 新增分类\n      //置空输入项\n      this.category.categoryName = null;\n      this.category.tenant = null;\n      this.category.id = null;\n      this.indDimensionCateDialog = '指标维度分类-新增';\n      this.showIndDimensionCateAdd = true;\n    } else if (data.dimLevel == 1) {\n      //新增维度\n      this.indDimensionDialog = '指标维度名称-新增';\n      this.dimension.categoryName = null;\n      this.dimension.tenant = null;\n      this.dimension.remarks = null;\n      this.dimension.id = null;\n      this.showIndDimensionAdd = true;\n    } else if (data.dimLevel == 2) {\n      //新增维度值\n      this.indDimensionValueDialog = '指标维度值-新增'; // this.dimensionValue.dimInfoId = data.id\n\n      this.dimensionValue.categoryName = null;\n      this.dimensionValue.dimLevel = null;\n      this.dimensionValue.lastLevelDimValueId = null;\n      this.dimensionValue.id = null;\n      this.showIndDimensionValueAdd = true;\n      this.lastLevelDimValueFlag = true;\n    } else if (data.dimLevel > 2) {\n      this.indDimensionValueDialog = '指标维度值-新增';\n      this.dimensionValue.categoryName = null;\n      this.dimensionValue.dimInfoId = data.dimInfoId;\n      this.dimensionValue.dimLevel = data.dimLevel + 1;\n      this.dimensionValue.lastLevelDimValueId = data.id;\n      this.dimensionValue.id = null;\n      this.showIndDimensionValueAdd = true;\n      this.lastLevelDimValueFlag = true;\n    }\n    /*if (data.categoryName === '维度分类') {\r\n      //置空输入项\r\n      this.category.categoryName = null\r\n      this.category.tenant = null\r\n      this.category.id = null\r\n      this.indDimensionCateDialog = '指标维度分类-新增'\r\n      this.showIndDimensionCateAdd = true\r\n    } else if (data.dimLevel == 1 || this.dimLevel == 1 || this.dimLevel == 2) {\r\n      // this.dimension.classificationId = data.id\r\n      if (this.dimension.id != null && this.dimLevel == 2) {\r\n        this.indDimensionDialog = '指标维度名称-修改'\r\n        this.showIndDimensionAdd = true\r\n      } else {\r\n        this.indDimensionDialog = '指标维度名称-新增'\r\n        this.dimension.categoryName = null\r\n        this.dimension.tenant = null\r\n        this.dimension.remarks = null\r\n        this.dimension.id = null\r\n        this.showIndDimensionAdd = true\r\n      }\r\n    }*/\n\n  }), _defineProperty(_methods, \"addDimensionInfo\", function addDimensionInfo(data) {\n    if (this.dimLevel == 2) {\n      if (this.dimTreeInfoChildren != null && this.dimTreeInfoChildren.length > 0) {\n        this.$message({\n          type: 'error',\n          message: '该维度有子节点，不能修改！'\n        });\n      } else {\n        this.indDimensionDialog = '指标维度名称-修改';\n        /*this.dimension.categoryName = null\r\n        this.dimension.tenant = null\r\n        this.dimension.remarks = null\r\n        this.dimension.id = null*/\n\n        this.showIndDimensionAdd = true;\n      }\n    } else {\n      this.$message({\n        type: 'error',\n        message: '请选择分类！'\n      });\n    }\n  }), _defineProperty(_methods, \"addDimensionValue\", function addDimensionValue(data) {\n    if (this.dimLevel == 3 || this.dimLevel == 4 || this.dimLevel == 5) {\n      if (this.dimTreeValueChildren != null && this.dimTreeValueChildren.length > 0) {\n        this.$message({\n          type: 'error',\n          message: '该维度值有子节点，不能修改！'\n        });\n      } else {\n        this.indDimensionValueDialog = '维度值-修改';\n        this.dimensionValue.categoryName = this.dimTreeValueName;\n        this.dimensionValue.dimInfoId = this.dimTreeValueInfoId; //this.dimensionValue.dimLevel = data.dimLevel + 1;\n\n        this.dimensionValue.lastLevelDimValueId = this.dimTreeValueLastLevelId;\n        this.dimensionValue.id = this.dimTreeValueId;\n        this.showIndDimensionValueAdd = true;\n        this.lastLevelDimValueFlag = false;\n      }\n      /*     this.dimTreeValueName = data.categoryName;\r\n           this.dimTreeValueInfoId = data.dimInfoId;\r\n           this.dimTreeValueLastLevelId = data.lastLevelDimValueId;\r\n           this.dimTreeValueId = data.id;*/\n\n    } else {\n      this.$message({\n        type: 'error',\n        message: '请选择维度值！'\n      });\n    }\n    /*    if (data.dimLevel > 2 || this.dimLevel == 2) {\r\n            this.indDimensionValueDialog = '维度值-新增'\r\n            // this.dimensionValue.dimInfoId = data.id\r\n            this.dimensionValue.categoryName = null\r\n            this.dimensionValue.dimLevel = null\r\n            this.dimensionValue.lastLevelDimValueId = null\r\n            this.dimensionValue.id = null\r\n            this.showIndDimensionValueAdd = true\r\n            this.lastLevelDimValueFlag = true\r\n          } else if (data.dimLevel == 3 || data.dimLevel == 4 || this.dimLevel == 3 || this.dimLevel == 4 || this.dimLevel == 5) {\r\n            this.indDimensionValueDialog = '维度值-修改'\r\n            this.showIndDimensionValueAdd = true\r\n          }*/\n\n  }), _defineProperty(_methods, \"handleRemove\", function handleRemove(data) {\n    var _this12 = this;\n\n    //处理删除，level为1表示指标维度分类的操作\n    if (data.dimLevel == 1) {\n      var $this = this;\n      this.$confirm('确定要删除该节点吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        if (data.children.length === 0) {\n          crudIndClassification.crud.del([data.id]).then(function (res) {\n            if (res.code !== 0) {\n              $this.$message({\n                type: 'error',\n                message: '删除失败,' + res.msg\n              });\n            } else {\n              $this.$message({\n                type: 'success',\n                message: '删除成功 '\n              });\n\n              _this12.initTreeData();\n            }\n          }).catch(function () {\n            $this.$message({\n              type: 'error',\n              message: '删除失败 '\n            });\n          });\n        } else {\n          $this.$message({\n            type: 'error',\n            message: '该分类已被引用，不可删除'\n          });\n        }\n      });\n    } else if (data.dimLevel == 2) {\n      var _$this = this;\n\n      this.$confirm('确定要删除该节点吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        if (data.children.length === 0) {\n          crudIndDimInfo.crud.del([data.id]).then(function (res) {\n            if (res.code !== 0) {\n              _$this.$message({\n                type: 'error',\n                message: '删除失败,' + res.msg\n              });\n            } else {\n              _$this.$message({\n                type: 'success',\n                message: '删除成功 '\n              });\n\n              _this12.initTreeData();\n            }\n          }).catch(function () {\n            _$this.$message({\n              type: 'error',\n              message: '删除失败 '\n            });\n          });\n        } else {\n          _$this.$message({\n            type: 'error',\n            message: '当前节点下有子节点，不能删除'\n          });\n        }\n      });\n    } else if (data.dimLevel == 3 || data.dimLevel == 4 || data.dimLevel == 5) {\n      var _$this2 = this;\n\n      this.$confirm('确定要删除该节点吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        crudIndDimValue.crud.del([data.id]).then(function (res) {\n          if (res.code !== 0) {\n            _$this2.$message({\n              type: 'error',\n              message: '删除失败,' + res.msg\n            });\n          } else {\n            _$this2.$message({\n              type: 'success',\n              message: '删除成功 '\n            });\n\n            _this12.initTreeData();\n\n            defaultCrud.toQuery();\n          }\n        }).catch(function () {\n          _$this2.$message({\n            type: 'error',\n            message: '删除失败 '\n          });\n        });\n      });\n    }\n  }), _defineProperty(_methods, \"handleEdit\", function handleEdit(data) {\n    if (data.children != null && data.children.length > 0) {\n      this.$message({\n        type: 'error',\n        message: '该维度值有子节点，不能修改！'\n      });\n      return;\n    }\n\n    if (data.dimLevel == 1) {\n      this.indDimensionCateDialog = '指标维度分类名称-修改';\n      this.category.categoryName = data.categoryName;\n      this.category.tenant = data.tenant;\n      this.category.id = data.id;\n      this.showIndDimensionCateAdd = true;\n    } else if (data.dimLevel == 2) {\n      this.indDimensionDialog = '指标维度名称-修改';\n      this.dimension.categoryName = data.categoryName;\n      this.dimension.tenant = data.tenant;\n      this.dimension.id = data.id;\n      this.dimension.classificationId = data.classificationId;\n      this.dimension.remarks = data.remarks;\n      this.showIndDimensionAdd = true;\n    } else if (data.dimLevel >= 3) {\n      this.indDimensionValueDialog = '指标维度值-修改';\n      this.dimensionValue.categoryName = data.categoryName;\n      this.dimensionValue.id = data.id;\n      this.dimensionValue.lastLevelDimValueId = data.lastLevelDimValueId;\n      this.dimensionValue.dimInfoId = data.dimInfoId;\n      this.showIndDimensionValueAdd = true; //上级维度值不能选中\n\n      this.lastLevelDimValueFlag = false;\n    }\n    /*else if (data.dimLevel == 4 || data.dimLevel == 5) {\r\n    this.indDimensionValueDialog = '维度值-编辑'\r\n    this.dimensionValue.categoryName = data.categoryName\r\n    this.dimensionValue.id = data.id\r\n    this.dimensionValue.lastLevelDimValueId = data.lastLevelDimValueId\r\n    this.dimensionValue.dimInfoId = data.dimInfoId\r\n    this.showIndDimensionValueAdd = true\r\n    }*/\n\n  }), _defineProperty(_methods, \"closeIndDimensionCateAddDialog\", function closeIndDimensionCateAddDialog() {\n    this.showIndDimensionCateAdd = false;\n  }), _defineProperty(_methods, \"commitDimCate\", function commitDimCate() {\n    var _this13 = this;\n\n    this.crud.findVM('form').$refs['form'].validate(function (valid) {\n      if (!valid) {\n        return;\n      }\n\n      if (_this13.category.id == null) {\n        crudIndClassification.crud.add(_this13.category).then(function (data) {\n          if (data.code && data.code !== 0) {\n            _this13.$notify({\n              title: '新增失败，' + data.msg,\n              type: 'error',\n              duration: 2500\n            });\n\n            _this13.showIndDimensionCateAdd = false;\n          } else {\n            _this13.$notify({\n              title: '新增成功',\n              type: 'success',\n              duration: 2500\n            });\n\n            _this13.initTreeData();\n\n            _this13.showIndDimensionCateAdd = false;\n          }\n        });\n      } else {\n        crudIndClassification.crud.edit(_this13.category).then(function (data) {\n          if (data.code && data.code !== 0) {\n            _this13.$notify({\n              title: '编辑失败，' + data.msg,\n              type: 'error',\n              duration: 2500\n            });\n\n            _this13.showIndDimensionCateAdd = false;\n          } else {\n            _this13.$notify({\n              title: '编辑成功',\n              type: 'success',\n              duration: 2500\n            });\n\n            _this13.initTreeData();\n\n            _this13.showIndDimensionCateAdd = false;\n          }\n        });\n      }\n    });\n  }), _defineProperty(_methods, \"addDimensionButton\", function addDimensionButton() {\n    //新增按钮\n    if (this.dimLevel == null || this.dimLevel == undefined) {\n      this.$message({\n        type: 'error',\n        message: '请选择左侧维度分类树！'\n      });\n      return;\n    }\n\n    if (this.dimLevel == 5) {\n      this.$message({\n        type: 'error',\n        message: '维度树最多到5级！'\n      });\n      return;\n    }\n\n    this.addDimension(this.buttonTreeData);\n  }), _defineProperty(_methods, \"modifyDimensionButton\", function modifyDimensionButton() {\n    //修改按钮\n    if (this.dimLevel == null || this.dimLevel == undefined || this.dimLevel == 0) {\n      this.$message({\n        type: 'error',\n        message: '请选择左侧维度分类树！'\n      });\n      return;\n    }\n\n    if (this.buttonTreeData != null && this.buttonTreeData.children && this.buttonTreeData.children.length > 0) {\n      this.$message({\n        type: 'error',\n        message: '该节点下有子节点，不能修改！'\n      });\n      return;\n    }\n\n    this.handleEdit(this.buttonTreeData);\n  }), _methods)\n};",null]}