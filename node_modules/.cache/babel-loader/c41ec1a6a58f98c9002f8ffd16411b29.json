{"remainingRequest":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DataAssetPlatform000\\Pncui-Ind\\src\\views\\indicators\\home\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\src\\views\\indicators\\home\\index.vue","mtime":1655429856257},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1650418886580}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/code/DataAssetPlatform000/Pncui-Ind/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"D:/code/DataAssetPlatform000/Pncui-Ind/node_modules/@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/code/DataAssetPlatform000/Pncui-Ind/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"D:/code/DataAssetPlatform000/Pncui-Ind/node_modules/@babel/runtime/helpers/objectSpread2\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"D:/code/DataAssetPlatform000/Pncui-Ind/node_modules/@babel/runtime/helpers/defineProperty\"));\n\nvar _vuex = require(\"vuex\");\n\nvar _avatar = _interopRequireDefault(require(\"@eladmin/assets/images/avatar.png\"));\n\nvar _RoleSelect = _interopRequireDefault(require(\"@eladmin/components/RoleSelect\"));\n\nvar _ThemeSelect = _interopRequireDefault(require(\"@portal/components/ThemeSelect\"));\n\nvar _Logo = _interopRequireDefault(require(\"@portal/layout/components/Sidebar/Logo\"));\n\nvar echarts = _interopRequireWildcard(require(\"echarts\"));\n\nvar _swiperBox = _interopRequireDefault(require(\"./swiper-box.vue\"));\n\nvar _name$components$data;\n\nvar cnMap = {\n  公司银行: {\n    name1: \"company\",\n    name2: \"com\"\n  },\n  数字银行: {\n    name1: \"number\",\n    name2: \"num\"\n  },\n  零售银行: {\n    name1: \"retail\",\n    name2: \"sale\"\n  },\n  金融市场: {\n    name1: \"finance\",\n    name2: \"fin\"\n  },\n  公共类: {\n    name1: \"public\",\n    name2: \"pub\"\n  }\n};\n\nvar _default = (_name$components$data = {\n  name: \"home\",\n  components: {\n    SwiperBox: _swiperBox.default,\n    RoleSelect: _RoleSelect.default,\n    ThemeSelect: _ThemeSelect.default,\n    Logo: _Logo.default\n  },\n  data: function data() {\n    return (0, _defineProperty2.default)({\n      leftTree: [],\n      Avatar: _avatar.default,\n      dialogVisible: false,\n      searchValue: \"\",\n      // 搜索内容\n      // 左侧\n      thirdList: [],\n      currentSecond: {},\n      currentName: \"\",\n      currentId: -1,\n      currentFirstDir: \"\",\n      currentSecondDir: \"\",\n      // 资产\n      assetsList: [],\n      // 部门\n      deptList: [],\n      // 部门列表\n      // 部门滚动展示\n      currentProgressId: \"\",\n      scrollResultWidth: 0,\n      //transform滚动的距离\n      signleWidth: 166,\n      //单个流程的宽度\n      activeName: 0,\n      currentClickNumber: 0,\n      noScrollRight: true,\n      // 资产分类\n      pieData: [],\n      // 业务趋势\n      lineData: [],\n      // 机构规模排行\n      barData: [],\n      scaleDeptName: \"\",\n      // 分类账户数\n      scaleList: [],\n      // 我的收藏\n      assetList: [],\n      // 查询资产数据增长情况多折线图数据\n      monthList: [],\n      trendStatisticLegendColorList: [],\n      trendStatisticDeptList: [],\n      trendStatisticSeriesData: [],\n      netGoldDeptList: [],\n      retailDeptList: [],\n      companyDeptList: [],\n      mutualGoldList: [],\n      screenWidth: document.body.clientWidth,\n      screenHeight: document.body.clientHeight,\n      timer: null\n    }, \"activeName\", '');\n  },\n  mounted: function mounted() {\n    var that = this;\n\n    window.onresize = function () {\n      window.screenWidth = document.body.clientWidth;\n      window.screenHeight = document.body.clientHeight;\n      that.screenWidth = window.screenWidth;\n      that.screenHeight = window.screenHeight;\n    };\n  },\n  watch: {\n    // 窗口宽度发生变化则刷新页面   更新echarts\n    screenWidth: function screenWidth(oldVal, newVal) {\n      if (newVal != this.screenWidth) {\n        window.location.reload();\n      }\n    }\n  },\n  computed: (0, _objectSpread2.default)((0, _objectSpread2.default)((0, _objectSpread2.default)({}, (0, _vuex.mapGetters)([\"sidebar\", \"device\", \"user\", \"baseApi\"])), (0, _vuex.mapState)({\n    showBreadcrumb: function showBreadcrumb(state) {\n      return state.settings.showBreadcrumb;\n    }\n  })), {}, {\n    showLogo: function showLogo() {\n      return this.$store.state.settings.sidebarLogo;\n    },\n    show: {\n      get: function get() {\n        return this.$store.state.settings.showSettings;\n      },\n      set: function set(val) {\n        this.$store.dispatch(\"settings/changeSetting\", {\n          key: \"showSettings\",\n          value: val\n        });\n      }\n    }\n  }),\n  created: function created() {\n    // 加载数据\n    // 查询资产数量\n    this.queryAssetsCount(); // 查询部门笔数\n\n    this.queryDeptCount(); // 查询业务趋势折线图数据\n\n    this.queryLineData(); // 查询资产数据增长情况多折线图数据\n\n    this.queryLinesData(); // mock接口报错\n    // 查询我的各个资产收藏\n\n    this.queryCollection(); // 获取目录树\n\n    this.getLeftTree(); // this.$nextTick(() => {\n    //   setTimeout(() => {\n    //     this.initgoRightArrow();\n    //   }, 100);\n    // });\n  }\n}, (0, _defineProperty2.default)(_name$components$data, \"mounted\", function mounted() {\n  this.searchValue = \"\";\n}), (0, _defineProperty2.default)(_name$components$data, \"methods\", {\n  setBlur: function setBlur() {\n    this.$refs.autocomplete.activated = true;\n  },\n  // 输入框\n  querySearch: function querySearch(queryString, cb) {\n    var _this = this;\n\n    var request = {\n      page: 1,\n      size: 10,\n      keywords: queryString,\n      suggest: true\n    };\n    setTimeout(function () {\n      _this.$api.getListByKeywords(request).then(function (res) {\n        var temp = res.obj;\n        var suggestion = [];\n        temp.forEach(function (item) {\n          if (item.targetName) {\n            suggestion.push({\n              value: item.targetName,\n              assetType: item.assetType\n            });\n          } else if (item.labelName) {\n            suggestion.push({\n              value: item.labelName,\n              assetType: item.assetType\n            });\n          } else if (item.indexName) {\n            suggestion.push({\n              value: item.indexName,\n              assetType: item.assetType\n            });\n          } else if (item.tableName) {\n            suggestion.push({\n              value: item.tableComment ? item.tableComment : \"\" + item.tableName,\n              assetType: item.assetType\n            });\n          }\n        });\n        cb(suggestion);\n      });\n    }, 1000);\n  },\n  handleSelect: function handleSelect(item) {\n    var type;\n\n    if (item.assetType === \"table\") {\n      type = 1;\n    } else if (item.assetType === \"api\") {\n      type = 2;\n    } else if (item.assetType === \"target\") {\n      type = 3;\n    } else if (item.assetType === \"label\") {\n      type = 4;\n    }\n\n    this.$router.push({\n      path: \"/asset/searchPage/index\",\n      query: {\n        data: this.searchValue,\n        from: \"home\",\n        type: type\n      }\n    });\n  },\n  // 输入框值改变\n  inputChange: function inputChange(value) {\n    this.searchValue = value;\n    sessionStorage.setItem(\"searchKeyWords\", value);\n  },\n  globalSearch: function globalSearch() {\n    this.$router.push({\n      path: \"/asset/searchPage/index\",\n      query: {\n        data: this.searchValue,\n        from: \"home\"\n      }\n    });\n  },\n  open: function open() {\n    var _this2 = this;\n\n    this.$confirm(\"确定注销并退出系统吗？\", \"提示\", {\n      confirmButtonText: \"确定\",\n      cancelButtonText: \"取消\",\n      type: \"warning\"\n    }).then(function () {\n      _this2.logout();\n    });\n  },\n  logout: function logout() {\n    this.$store.dispatch(\"LogOut\").then(function () {\n      location.reload();\n    });\n  },\n  // 数字实现三位分割显示\n  numberFormat: function numberFormat(value) {\n    if (!value) return \"0\";\n    var intPart = Number(value).toFixed(0); // 获取整数部分\n\n    var intPartFormat = intPart.toString().replace(/(\\d)(?=(?:\\d{3})+$)/g, \"$1,\"); // 将整数部分逢三一断\n\n    var floatPart = \".00\"; // 预定义小数部分\n\n    var value2Array = value.toString().split(\".\"); // =2表示数据有小数位\n\n    if (value2Array.length === 2) {\n      floatPart = value2Array[1].toString(); // 拿到小数部分\n\n      if (floatPart.length === 1) {\n        // 补0\n        return intPartFormat + \".\" + floatPart + \"0\";\n      } else {\n        return intPartFormat + \".\" + floatPart;\n      }\n    } else {\n      return intPartFormat;\n    }\n  },\n  // 离开二级目录\n  leaveSecondArea: function leaveSecondArea() {\n    this.thirdList = [];\n    this.currentSecond = {};\n    this.currentName = \"\";\n    this.currentId = \"\";\n    this.currentFirstDir = \"\";\n    this.currentSecondDir = \"\";\n  },\n  getIconUrl: function getIconUrl(name) {\n    var picMap = {\n      公司银行: require(\"../../../assets/\\u5EFA\\u7B51.png\"),\n      // 公司银行: require(\"../../../assets/company.png\"),\n      数字银行: require(\"../../../assets/\\u94F6\\u884C\\u5361.png\"),\n      零售银行: require(\"../../../assets/\\u7406\\u8D22.png\"),\n      金融市场: require(\"../../../assets/\\u878D\\u8D442.png\"),\n      公共类: require(\"../../../assets/\\u6587\\u4EF6\\u67DC.png\")\n    };\n    return picMap[name];\n  },\n  clearSelectSecond: function clearSelectSecond() {\n    clearTimeout(this.timer);\n  },\n  showMore: function showMore(item) {\n    console.log(item);\n    this.currentSecond = item;\n    this.currentName = item.name;\n  },\n  selectSecondData: function selectSecondData(name, id, item) {\n    var _this3 = this;\n\n    this.timer = setTimeout(function () {\n      _this3.currentId = id;\n      _this3.currentName = name;\n      _this3.currentFirstDir = cnMap[name].name2;\n      _this3.currentSecondDir = id;\n      _this3.currentSecond = item;\n      _this3.thirdList = item.children.length > 0 ? item.children : [];\n    }, 300);\n  },\n  getLeftTree: function getLeftTree() {\n    var _this4 = this;\n\n    this.$api.getCatalogueTreeSort().then(function (res) {\n      _this4.leftTree = res.data;\n      console.log(res);\n    });\n  },\n  // 选择三级目录到检索页\n  // 0~3 表数据资产 4~6 指标数据资产 7~9 标签数据资产\n  selectThird: function selectThird(index, item, level) {\n    if (!this.currentSecond.id) {\n      return;\n    }\n\n    this.$router.push({\n      path: \"/asset/searchPage/index\",\n      query: {\n        // data: item.name,\n        index: level == 2 ? item.pid : this.currentSecond.pid,\n        firstDir: this.currentSecond.pid,\n        secondDir: this.currentSecond.contentsId,\n        thirdDir: level == 3 ? item.id : \"all\",\n        from: \"home\"\n      }\n    });\n  },\n  // 查询资产数量\n  queryAssetsCount: function queryAssetsCount() {\n    var _this5 = this;\n\n    this.$api.queryAssetsCount().then(function (res) {\n      _this5.assetsList = res.data;\n\n      _this5.getPieData();\n    });\n  },\n  // 查询部门笔数\n  queryDeptCount: function queryDeptCount() {\n    var _this6 = this;\n\n    this.$api.queryDeptCount().then(function (res) {\n      _this6.deptList = res;\n      _this6.scaleDeptName = res[0].deptName;\n\n      _this6.queryOrganizationScaleRanking(res[0].deptCode);\n    });\n  },\n  // 查询资产分类饼图数据\n  queryPieData: function queryPieData() {\n    var _this7 = this;\n\n    this.$api.queryPieData().then(function (res) {\n      _this7.pieData = res.data;\n    });\n  },\n  // 查询业务趋势折线图数据\n  queryLineData: function queryLineData() {\n    var _this8 = this;\n\n    this.$api.queryLineData().then(function (res) {\n      _this8.lineData = res;\n\n      _this8.getLineData();\n    });\n  },\n  // 点击部门查询查询机构规模排行数据\n  getOrganizationDcaleRankingData: function getOrganizationDcaleRankingData(item) {\n    this.scaleDeptName = item.deptName;\n    this.queryOrganizationScaleRanking(item.deptCode);\n  },\n  // 根据部门编号查询机构规模排行数据\n  queryOrganizationScaleRanking: function queryOrganizationScaleRanking(val) {\n    var _this9 = this;\n\n    this.$api.queryOrganizationScaleRanking(val).then(function (res) {\n      _this9.scaleList = res.accountCount;\n      _this9.barData = res.barData;\n\n      _this9.getBarData();\n    });\n  },\n  // 查询资产数据增长情况多折线图数据\n  queryLinesData: function () {\n    var _queryLinesData = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var _this10 = this;\n\n      var res;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.$api.queryLinesData();\n\n            case 2:\n              res = _context.sent;\n              this.monthList = res.data.monthRange;\n              this.trendStatisticDeptList = Object.keys(res.data.series);\n              this.trendStatisticLegendColorList.push();\n              this.trendStatisticDeptList.forEach(function (dept) {\n                _this10.trendStatisticSeriesData.push({\n                  name: dept,\n                  type: \"line\",\n                  data: res.data.series[dept]\n                });\n\n                var r = Math.floor(Math.random() * 256);\n                var g = Math.floor(Math.random() * 256);\n                var b = Math.floor(Math.random() * 256);\n\n                _this10.trendStatisticLegendColorList.push(\"rgba(\".concat(r, \",\").concat(g, \",\").concat(b, \",1)\"));\n              });\n              this.getLineListData();\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function queryLinesData() {\n      return _queryLinesData.apply(this, arguments);\n    }\n\n    return queryLinesData;\n  }(),\n  // 查询我的各个资产收藏\n  queryCollection: function queryCollection() {\n    var _this11 = this;\n\n    this.$api.queryCollection().then(function (res) {\n      _this11.assetList = res.data;\n    });\n  },\n  // 到检索页\n  goTo: function goTo(value) {\n    this.$router.push({\n      path: \"/asset/searchPage/index\",\n      query: {\n        type: value,\n        assetType: value\n      }\n    });\n  },\n  //初始化判断是否可以向右滚动\n  initgoRightArrow: function initgoRightArrow() {\n    var currentScrollWidth = this.$refs[\"fixedBox\"].clientWidth;\n    var canNumber = Math.floor(currentScrollWidth / this.signleWidth); //可以放下的个数\n    //如果最后一个流程图标已经展示出来，则停止滚动\n\n    if (this.currentClickNumber + canNumber >= this.deptList.length) {\n      this.noScrollRight = false;\n      return;\n    }\n  },\n  //点击上一个\n  fnPrev: function fnPrev() {\n    //如果右点击的次数大于0，才可以左滚\n    if (this.currentClickNumber > 0) {\n      this.currentClickNumber -= 1;\n      this.noScrollRight = true;\n      this.fnScrollWidth(\"reduce\");\n    } else {\n      return false;\n    }\n  },\n  //点击下一个\n  fnNext: function fnNext() {\n    var currentScrollWidth = this.$refs[\"fixedBox\"].clientWidth;\n    var canNumber = Math.floor(currentScrollWidth / this.signleWidth); //可以放下的个数\n    //如果最后一个流程图标已经展示出来，则停止滚动\n\n    if (this.currentClickNumber + canNumber >= this.deptList.length) {\n      return;\n    } //说明放不下有滚动条\n\n\n    if (this.deptList.length > canNumber) {\n      this.currentClickNumber += 1;\n\n      if (this.currentClickNumber + canNumber >= this.deptList.length) {\n        this.noScrollRight = false;\n      }\n\n      this.fnScrollWidth(\"add\");\n    }\n  },\n  //translate的宽度\n  fnScrollWidth: function fnScrollWidth(type) {\n    var result = 0;\n\n    if (type === \"reduce\") {\n      result = 166;\n    } else if (type === \"add\") {\n      result = -166;\n    } else {\n      result = 0;\n    }\n\n    this.scrollResultWidth += result;\n  },\n  // 资产分类 环状饼图\n  getPieData: function getPieData() {\n    var chartDom = document.getElementById(\"asset-classification\");\n    var myChart = echarts.init(chartDom);\n    var option;\n    var dataList = [{\n      value: Number(this.assetsList.table),\n      name: \"表资产\"\n    }, {\n      value: Number(this.assetsList.api),\n      name: \"API资产\"\n    }, {\n      value: Number(this.assetsList.target),\n      name: \"指标资产\"\n    }, {\n      value: Number(this.assetsList.label),\n      name: \"标签资产\"\n    }];\n    option = {\n      color: [\"rgba(126, 131, 237, 1)\", \"rgba(66.55499999999999, 188.20274999999998, 221.85, 1)\", \"rgba(229.5, 177.48000000000002, 45.9, 1)\", \"rgba(57.375, 129.09375, 229.5, 1)\"],\n      tooltip: {\n        trigger: \"item\"\n      },\n      legend: {\n        selectedMode: false,\n        top: \"15%\",\n        left: \"60%\",\n        orient: \"Vertical\"\n      },\n      series: [{\n        name: \"\",\n        type: \"pie\",\n        radius: [\"60%\", \"80%\"],\n        center: [\"30%\", \"50%\"],\n        avoidLabelOverlap: false,\n        label: {\n          show: false,\n          position: \"center\"\n        },\n        emphasis: {\n          label: {\n            show: true,\n            fontSize: \"12\",\n            // fontWeight: \"bold\",\n            color: \"rgba(56, 81, 105, 1)\",\n            formatter: \"{c|{c}}笔\\n{b|{b}}\",\n            rich: {\n              b: {\n                color: \"rgba(128, 128, 128, 1)\",\n                fontSize: \"12\"\n              },\n              c: {\n                color: \"rgba(56, 81, 105, 1)\",\n                fontSize: \"16\"\n              }\n            }\n          }\n        },\n        labelLine: {\n          show: false\n        },\n        data: dataList\n      }]\n    };\n    option && myChart.setOption(option);\n  },\n  // 业务趋势 折线图\n  getLineData: function getLineData() {\n    var monthList = this.lineData.month;\n    var tablePerList = this.lineData.percent.table;\n    var apiPerList = this.lineData.percent.api;\n    var targetPerList = this.lineData.percent.target;\n    var labelPerList = this.lineData.percent.label;\n    var chartDom = document.getElementById(\"business-trends\");\n    var myChart = echarts.init(chartDom);\n    var option;\n    option = {\n      tooltip: {\n        trigger: \"axis\"\n      },\n      color: [\"rgba(126, 131, 237, 1)\", \"rgba(66.55499999999999, 188.20274999999998, 221.85, 1)\", \"rgba(229.5, 177.48000000000002, 45.9, 1)\", \"rgba(57.375, 129.09375, 229.5, 1)\"],\n      grid: {\n        left: \"10%\",\n        right: \"5%\",\n        top: \"5%\",\n        bottom: \"15%\"\n      },\n      xAxis: {\n        type: \"category\",\n        boundaryGap: false,\n        data: monthList\n      },\n      yAxis: {\n        type: \"value\",\n        name: \"%\",\n        axisLabel: {\n          formatter: \"{value}%\"\n        }\n      },\n      series: [{\n        data: tablePerList,\n        type: \"line\",\n        areaStyle: {\n          color: {\n            type: \"linear\",\n            x: 0,\n            y: 0,\n            x2: 0,\n            y2: 1,\n            colorStops: [{\n              offset: 0,\n              color: \"rgba(126, 131, 237, 1)\" // 0% 处的颜色\n\n            }, {\n              offset: 1,\n              color: \"rgba(242.8977, 247.35, 239.9295, 1)\" // 100% 处的颜色\n\n            }],\n            global: false // 缺省为 false\n\n          }\n        }\n      }, {\n        data: apiPerList,\n        type: \"line\",\n        areaStyle: {\n          color: {\n            type: \"linear\",\n            x: 0,\n            y: 0,\n            x2: 0,\n            y2: 1,\n            colorStops: [{\n              offset: 0,\n              color: \"rgba(66.55499999999999, 188.20274999999998, 221.85, 1)\" // 0% 处的颜色\n\n            }, {\n              offset: 1,\n              color: \"rgba(242.8977, 247.35, 239.9295, 1)\" // 100% 处的颜色\n\n            }],\n            global: false // 缺省为 false\n\n          }\n        }\n      }, {\n        data: targetPerList,\n        type: \"line\",\n        areaStyle: {\n          color: {\n            type: \"linear\",\n            x: 0,\n            y: 0,\n            x2: 0,\n            y2: 1,\n            colorStops: [{\n              offset: 0,\n              color: \"rgba(229.5, 177.48000000000002, 45.9, 1)\" // 0% 处的颜色\n\n            }, {\n              offset: 1,\n              color: \"rgba(242.8977, 247.35, 239.9295, 1)\" // 100% 处的颜色\n\n            }],\n            global: false // 缺省为 false\n\n          }\n        }\n      }, {\n        data: labelPerList,\n        type: \"line\",\n        areaStyle: {\n          color: {\n            type: \"linear\",\n            x: 0,\n            y: 0,\n            x2: 0,\n            y2: 1,\n            colorStops: [{\n              offset: 0,\n              color: \"rgba(57.375, 129.09375, 229.5, 1)\" // 0% 处的颜色\n\n            }, {\n              offset: 1,\n              color: \"rgba(242.8977, 247.35, 239.9295, 1)\" // 100% 处的颜色\n\n            }],\n            global: false // 缺省为 false\n\n          }\n        }\n      }]\n    };\n    option && myChart.setOption(option);\n  },\n  // 机构规模排行 柱状图\n  getBarData: function getBarData() {\n    var _this12 = this;\n\n    var obj = [];\n    this.barData.count.forEach(function (item, key) {\n      obj.push({\n        count: item,\n        name: _this12.barData.name[key]\n      });\n    }); // 倒序\n\n    obj.sort(function (a, b) {\n      return a.count - b.count;\n    });\n    var nameList = [];\n    var countList = [];\n    obj.map(function (item) {\n      nameList.push(item.name);\n      countList.push(item.count);\n    });\n    var chartDom = document.getElementById(\"organization-scale-ranking\");\n    var myChart = echarts.init(chartDom);\n    var option;\n    option = {\n      // title: {\n      //   text: \"World Population\",\n      // },\n      color: [\"rgba(139, 201, 73, 1)\"],\n      tooltip: {\n        show: true,\n        trigger: \"axis\",\n        axisPointer: {\n          type: \"shadow\"\n        }\n      },\n      legend: {\n        show: false\n      },\n      grid: {\n        top: \"3%\",\n        left: \"3%\",\n        right: \"24%\",\n        bottom: \"3%\",\n        containLabel: true\n      },\n      xAxis: {\n        type: \"value\",\n        boundaryGap: [0, 0.01],\n        axisLine: {\n          show: false\n        },\n        axisTick: {\n          show: false\n        },\n        splitLine: {\n          show: false\n        },\n        axisLabel: {\n          show: false\n        }\n      },\n      yAxis: {\n        type: \"category\",\n        data: nameList,\n        axisLine: {\n          show: false\n        },\n        axisTick: {\n          show: false\n        },\n        splitLine: {\n          show: false\n        }\n      },\n      series: [{\n        type: \"bar\",\n        barWidth: \"20\",\n        data: countList,\n        label: {\n          show: true,\n          position: \"right\",\n          // position: 'insideBottom',\n          offset: [0, 0]\n        },\n        itemStyle: {\n          emphasis: {\n            barBorderRadius: 10\n          },\n          normal: {\n            barBorderRadius: 10\n          }\n        } // backgroundStyle  4.7版本开始支持，目前版本4.2.1\n        // showBackground: true,\n        // backgroundStyle: {\n        //   color: \"rgba(242.8977, 247.35, 239.9295, 1)\",\n        // },\n\n      }]\n    };\n    option && myChart.setOption(option);\n  },\n  // 资产数据增长情况 折线图\n  getLineListData: function getLineListData() {\n    var chartDom = document.getElementById(\"data-asset-growth\");\n    var myChart = echarts.init(chartDom);\n    var option;\n    option = {\n      color: this.trendStatisticLegendColorList,\n      tooltip: {\n        show: true,\n        trigger: \"axis\" // axisPointer: {\n        //   type: \"shadow\",\n        // },\n\n      },\n      legend: {\n        selectedMode: false,\n        show: true,\n        legend: {\n          data: this.trendStatisticDeptList\n        }\n      },\n      grid: {\n        top: \"18%\",\n        left: \"0%\",\n        right: \"0%\",\n        bottom: \"0%\",\n        containLabel: true\n      },\n      xAxis: {\n        type: \"category\",\n        boundaryGap: false,\n        data: this.monthList\n      },\n      yAxis: {\n        type: \"value\",\n        axisLabel: {\n          // formatter: \"{value}%\",\n          formatter: \"{value}\"\n        }\n      },\n      series: this.trendStatisticSeriesData\n    };\n    option && myChart.setOption(option);\n  },\n  // 跳转我的收藏页面\n  jumpCollection: function jumpCollection(index) {\n    var params = \"\";\n\n    if (index == 0) {\n      params = \"table\";\n    } else if (index == 1) {\n      params = \"api\";\n    } else if (index == 2) {\n      params = \"target\";\n    } else if (index == 3) {\n      params = \"label\";\n    }\n\n    this.$router.push({\n      path: \"/asset/myCollection/index\",\n      query: {\n        activeName: params\n      }\n    });\n  }\n}), _name$components$data);\n\nexports.default = _default;",null]}