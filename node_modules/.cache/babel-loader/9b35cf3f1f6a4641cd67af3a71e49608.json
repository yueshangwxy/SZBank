{"remainingRequest":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js!D:\\WorkSpace\\indicator\\Pncui-Indicator\\src\\api\\indicators\\indIndicatorInfo.js","dependencies":[{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\src\\api\\indicators\\indIndicatorInfo.js","mtime":1646633727670},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":["import request from '@/utils/request'; //import CRUD, { presenter, header, form, crud } from '@crud/crud'\n\nvar url = 'v1/indicators/indIndicatorInfos';\nexport function add(data) {\n  var _this = this;\n\n  return request({\n    url: url,\n    method: 'post',\n    data: data\n  }).then(function (res) {\n    if (res.code === 0) {\n      var indIndicatorInfos = [];\n      var data2 = res.data;\n      var indIndicatorInfo = {\n        'id': data2.id,\n        'ieCode': data2.ieCode,\n        'status': '1',\n        'ieProp': data2.ieProp\n      };\n      indIndicatorInfos.push(indIndicatorInfo);\n      return request({\n        url: url + '/updateStatus',\n        method: 'put',\n        data: indIndicatorInfos\n      });\n      /*.then(ref => {\r\n      console.log(ref.code )\r\n      if (ref.code !== 0) {\r\n        crud.notify('提交指标信息失败', CRUD.NOTIFICATION_TYPE.ERROR)\r\n        return false\r\n      } else {\r\n      }\r\n      })*/\n    } else {\n      _this.$message({\n        message: '指标提交失败',\n        type: 'warning'\n      });\n    }\n  });\n}\nexport function del(ids) {\n  return request({\n    url: url,\n    method: 'delete',\n    data: ids\n  });\n}\nexport function edit(data) {\n  return request({\n    url: url,\n    method: 'put',\n    data: data\n  });\n}\nexport function getDimInfo() {\n  return request({\n    url: 'v1/indicators/indDimensions/dim/all',\n    method: 'get'\n  });\n}\nexport function getAllSource() {\n  return request({\n    url: 'v1/datasource/indDatasources2/source/all',\n    method: 'get'\n  });\n}\nexport function getAtom(data) {\n  return request({\n    url: 'v1/indicators/indAtomInfos/atom/byDataSource',\n    method: 'post',\n    data: data\n  });\n}\nexport function getAllAtomInfos(data) {\n  return request({\n    url: 'v1/indicators/indAtomInfos/atom/getAllAtomInfos',\n    method: 'get',\n    data: data\n  });\n}\nexport function getAtomDimenston(data) {\n  return request({\n    url: 'v1/indicators/indAtomDimensions/atom/getAtomDimenstonByBizCode',\n    method: 'post',\n    data: data\n  });\n}\nexport function getTables(data) {\n  return request({\n    url: 'v1/database/tables/all',\n    method: 'post',\n    data: data\n  });\n}\nexport function getColumns(data) {\n  return request({\n    url: 'v1/database/columns/all',\n    method: 'post',\n    data: data\n  });\n}\nexport function saveArithmetic(data) {\n  return request({\n    url: 'v1/indicators/indDeriveRules/saveArithmetic',\n    method: 'put',\n    data: data\n  });\n}\nexport function getIndDeriveRule(ieCodes) {\n  return request({\n    url: 'v1/indicators/indDeriveRules/getIndDeriveRule',\n    method: 'post',\n    data: ieCodes\n  });\n}\nexport function getIndDeriveRuleByIeCode(data) {\n  return request({\n    url: 'v1/indicators/indDeriveRules/getIndDeriveRuleByIeCode',\n    method: 'post',\n    data: data\n  });\n}\nexport function updateStatuesByIeCode(data) {\n  return request({\n    url: url + '/updateStatuesByIeCode',\n    method: 'put',\n    data: data\n  });\n}\nexport function calculate(data) {\n  return request({\n    url: 'v1/indicators/indDeriveRules/calculate',\n    method: 'put',\n    data: data\n  });\n}\nexport function updateStatus(data) {\n  return request({\n    url: url + '/updateStatus',\n    method: 'put',\n    data: data\n  });\n}\nexport function updateDeriveStarStatus(data) {\n  return request({\n    url: url + '/updateDeriveStarStatus',\n    method: 'put',\n    data: data\n  });\n}\nexport function checkexpression(data) {\n  return request({\n    url: 'v1/indicators/indDeriveRules/checkexpression',\n    method: 'post',\n    data: data\n  });\n}\nexport function getBaseIndicatorByIeCode(id) {\n  return request({\n    url: url + '/getBaseIndicatorByIeCode/' + id,\n    method: 'get'\n  });\n}\nexport function getByIeCode(ieCode) {\n  return request({\n    url: url + '/getByIeCode/' + ieCode,\n    method: 'get'\n  });\n}\nexport function process(data, type) {\n  return request({\n    url: 'v1/indicator/' + type + '/process',\n    method: 'post',\n    data: data\n  });\n}\nexport function saveBaseRule(data) {\n  return request({\n    url: url + '/saveBaseRule',\n    method: 'put',\n    data: data\n  });\n}\nexport function getIndBaseRule(ieCodes) {\n  return request({\n    url: 'v1/indicators/indBaseRules/getIndBaseRule',\n    method: 'post',\n    data: ieCodes\n  });\n}\nexport function checkDept(data) {\n  return request({\n    url: url + '/checkDept' + '?manageDept=' + data,\n    method: 'get',\n    data: data\n  });\n}\nexport function getIeCodeHistoryList(data) {\n  return request({\n    url: url + '/ieHis',\n    method: 'get',\n    data: data\n  });\n}\nexport default {\n  url: url,\n  method: {\n    add: add,\n    edit: edit,\n    del: del\n  }\n};",null]}