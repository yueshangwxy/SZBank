{"remainingRequest":"D:\\code\\DataAssetPlatform000\\Pncui-SZBank\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\DataAssetPlatform000\\Pncui-SZBank\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\code\\DataAssetPlatform000\\Pncui-SZBank\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DataAssetPlatform000\\Pncui-SZBank\\src\\views\\indicators\\dataLab\\datasearch\\maskingRulesConfig.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\DataAssetPlatform000\\Pncui-SZBank\\src\\views\\indicators\\dataLab\\datasearch\\maskingRulesConfig.vue","mtime":1655804888192},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-SZBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-SZBank\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-SZBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-SZBank\\node_modules\\vue-loader\\lib\\index.js","mtime":1650418886580}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/code/DataAssetPlatform000/Pncui-SZBank/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.array.find-index\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/code/DataAssetPlatform000/Pncui-SZBank/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _request = _interopRequireDefault(require(\"@/utils/request\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'MaskingRulesConfig',\n  data: function data() {\n    return {\n      maskingRules: [],\n      addDialogVisible: false,\n      editDialogVisible: false,\n      importDialogVisible: false,\n      // 表格\n      tableData: [],\n      errorData: [],\n      ruleLevels: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n      queryForm: {\n        sc_project_name: '',\n        sc_table_name: '',\n        sc_column_name: '',\n        sc_config_user: '',\n        sc_config_time: '',\n        size: 10,\n        page: 1,\n        total: 0,\n        loading: true\n      },\n      editForm: {},\n      importForm: {},\n      file: undefined,\n      fileList: [],\n      fileType: ['xlsx', 'xls'],\n      fileSize: 50,\n      editFormRules: {\n        projectName: [{\n          required: true,\n          trigger: ['blur', 'change'],\n          message: '请输入项目名称'\n        }],\n        tableName: [{\n          required: true,\n          trigger: ['blur', 'change'],\n          message: '请输入表名称'\n        }],\n        columnName: [{\n          required: true,\n          trigger: ['blur', 'change'],\n          message: '请输入字段名称'\n        }],\n        maskingRule: [{\n          required: true,\n          trigger: ['blur', 'change'],\n          message: '请选择脱敏规则'\n        }],\n        ruleLevel: [{\n          required: true,\n          trigger: ['blur', 'change'],\n          message: '请选择规则等级'\n        }]\n      }\n    };\n  },\n  methods: {\n    //格式化日期\n    formatDate: function formatDate(row, column) {\n      // 获取单元格数据\n      var data = row[column.property];\n\n      if (data == null) {\n        return null;\n      }\n\n      var dt = new Date(data);\n      return dt.getFullYear() + '-' + (dt.getMonth() + 1 < 10 ? '0' + (dt.getMonth() + 1) : dt.getMonth() + 1) + '-' + (dt.getDate() < 10 ? '0' + dt.getDate() : dt.getDate()) + ' ' + (dt.getHours() < 10 ? '0' + dt.getHours() : dt.getHours()) + ':' + (dt.getMinutes() < 10 ? '0' + dt.getMinutes() : dt.getMinutes()) + ':' + (dt.getSeconds() < 10 ? '0' + dt.getSeconds() : dt.getSeconds());\n    },\n    //重置查询条件\n    resetQueryForm: function resetQueryForm() {\n      this.queryForm.sc_project_name = '';\n      this.queryForm.sc_table_name = '';\n      this.queryForm.sc_column_name = '';\n      this.queryForm.sc_config_user = '';\n      this.queryForm.sc_config_time = '';\n      this.queryPageList();\n    },\n    queryPageList: function () {\n      var _queryPageList = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.queryForm.loading = true;\n                _context.next = 3;\n                return (0, _request.default)({\n                  url: '/datalab/maskingRulesConfig/list',\n                  method: 'post',\n                  data: {\n                    pageSize: this.queryForm.size,\n                    pageNum: this.queryForm.page,\n                    projectName: this.queryForm.sc_project_name,\n                    tableName: this.queryForm.sc_table_name,\n                    columnName: this.queryForm.sc_column_name,\n                    userName: this.queryForm.sc_config_user,\n                    configTime: this.queryForm.sc_config_time\n                  }\n                });\n\n              case 3:\n                res = _context.sent;\n\n                if (res.data && res.data.records) {\n                  this.tableData = res.data.records;\n                  this.queryForm.total = res.data.total;\n                  this.queryForm.page = res.data.current;\n                }\n\n                this.queryForm.loading = false; //console.log(res)\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function queryPageList() {\n        return _queryPageList.apply(this, arguments);\n      }\n\n      return queryPageList;\n    }(),\n    handleCloseDetail: function handleCloseDetail() {\n      this.addDialogVisible = false;\n      this.editDialogVisible = false;\n      this.importDialogVisible = false;\n      this.$refs.editFormRef.resetFields();\n    },\n    // 分页\n    handleSizeChange: function handleSizeChange(val) {\n      this.queryForm.size = val;\n      this.queryPageList();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.queryForm.page = val;\n      this.queryPageList();\n    },\n    //查询规则枚举\n    queryMaskingRules: function () {\n      var _queryMaskingRules = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return (0, _request.default)({\n                  url: '/datalab/maskingRulesConfig/getMaskingRules',\n                  method: 'get',\n                  data: {}\n                });\n\n              case 2:\n                res = _context2.sent;\n\n                if (res.data) {\n                  this.maskingRules = res.data;\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function queryMaskingRules() {\n        return _queryMaskingRules.apply(this, arguments);\n      }\n\n      return queryMaskingRules;\n    }(),\n    //新增\n    handleAddRule: function handleAddRule() {\n      this.addDialogVisible = true;\n      this.editForm = {};\n    },\n    //导入窗口\n    handleOnImport: function handleOnImport() {\n      this.importDialogVisible = true;\n      this.fileList = [];\n      this.file = undefined;\n      this.errorData = [];\n    },\n    //提交新增\n    handleSendAddRule: function handleSendAddRule() {\n      var _this = this;\n\n      this.$refs['editFormRef'].validate(function (valid) {\n        if (valid) {\n          (0, _request.default)({\n            url: '/datalab/maskingRulesConfig/add',\n            method: 'post',\n            data: {\n              projectName: _this.editForm.projectName,\n              tableName: _this.editForm.tableName,\n              columnName: _this.editForm.columnName,\n              maskingRule: _this.editForm.maskingRule,\n              ruleLevel: _this.editForm.ruleLevel\n            }\n          }).then(function (res) {\n            if (res.returnCode === '200') {\n              _this.$message({\n                message: '新增成功',\n                type: 'success'\n              });\n            } else {\n              _this.$message({\n                message: '新增失败',\n                type: 'error'\n              });\n            }\n\n            _this.addDialogVisible = false;\n\n            _this.queryPageList();\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    //配置脱敏规则\n    handleEditRule: function handleEditRule(row) {\n      this.editDialogVisible = true;\n      this.editForm = row;\n    },\n    //配置脱敏规则提交\n    handleSendEditRule: function handleSendEditRule() {\n      var _this2 = this;\n\n      this.$refs['editFormRef'].validate(function (valid) {\n        if (valid) {\n          (0, _request.default)({\n            url: '/datalab/maskingRulesConfig/update',\n            method: 'post',\n            data: {\n              id: _this2.editForm.id,\n              projectName: _this2.editForm.projectName,\n              tableName: _this2.editForm.tableName,\n              columnName: _this2.editForm.columnName,\n              maskingRule: _this2.editForm.maskingRule,\n              ruleLevel: _this2.editForm.ruleLevel\n            }\n          }).then(function (res) {\n            if (res.returnCode === '200') {\n              _this2.$message({\n                message: '脱敏规则配置成功',\n                type: 'success'\n              });\n            } else {\n              _this2.$message({\n                message: '脱敏规则配置失败',\n                type: 'error'\n              });\n            }\n\n            _this2.editDialogVisible = false;\n\n            _this2.queryPageList();\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    //上传文件\n    handleImportFile: function handleImportFile(file) {\n      this.file = file.raw; //this.$refs.uploadButton.submit()\n    },\n    uploadFile: function uploadFile() {\n      var _this3 = this;\n\n      this.errorData = [];\n\n      if (!this.beforeUpload(this.file)) {\n        return;\n      }\n\n      var formData = new FormData();\n      formData.append('file', this.file);\n      (0, _request.default)({\n        url: '/datalab/maskingRulesConfig/importTemp',\n        method: 'post',\n        headers: {\n          'Content-Type': 'multipart/form-data;charset=UTF-8'\n        },\n        data: formData\n      }).then(function (res) {\n        if (res.returnCode === '200') {\n          if (res.data) {\n            _this3.$message({\n              message: '导入失败，请查看表格中的错误数据，重新导入',\n              type: 'error'\n            });\n\n            _this3.errorData = res.data;\n          } else {\n            _this3.$message({\n              message: '导入成功',\n              type: 'success'\n            });\n\n            _this3.importDialogVisible = false;\n\n            _this3.queryPageList();\n          }\n        } else {\n          _this3.$message({\n            message: '导入失败，' + res.returnMsg,\n            type: 'error'\n          });\n        }\n      });\n    },\n    //删除之前\n\n    /*      handleRemove(file,fileList) {\r\n            this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\r\n              confirmButtonText: '确定',\r\n              cancelButtonText: '取消',\r\n              type: 'warning'\r\n            }).then(() => {\r\n              this.$emit('on-remove', fileList)\r\n              this.fileList = fileList\r\n            }).catch(() => {\r\n              this.$message({\r\n                type: 'info',\r\n                message: '已取消删除'\r\n              })\r\n            })\r\n          },*/\n    // 下载模板\n    handleDownloadTemplate: function handleDownloadTemplate() {\n      var _this4 = this;\n\n      (0, _request.default)({\n        url: '/datalab/maskingRulesConfig/downTemplate',\n        method: 'get',\n        data: {},\n        responseType: 'arraybuffer'\n      }).then(function (res) {\n        var content = res.data;\n        var blob = new Blob([content]);\n        var contentDisposition = res.headers['content-disposition'];\n        var patt = new RegExp(\"fileName=([^;]+\\\\.[^\\\\.;]+);*\");\n        var result = patt.exec(contentDisposition);\n        var fileName = decodeURI(result[1]);\n\n        if (\"download\" in document.createElement(\"a\")) {\n          // 非IE下载\n          var elink = document.createElement(\"a\");\n          elink.download = fileName;\n          elink.style.display = \"none\";\n          elink.href = window.URL.createObjectURL(blob);\n          document.body.appendChild(elink);\n          elink.click();\n          window.URL.revokeObjectURL(elink.href); // 释放URL 对象\n\n          document.body.removeChild(elink);\n        } else {\n          // IE10+下载\n          navigator.msSaveBlob(blob, fileName);\n        }\n      }).catch(function (err) {\n        console.log(err);\n\n        _this4.$message.error('下载失败');\n      });\n    },\n    previewFile: function previewFile(file) {\n      if (file.url) {\n        window.location.href = file.url;\n      }\n    },\n    beforeUpload: function beforeUpload(file) {\n      if (file === null || file === undefined) {\n        this.$message.error('请选择文件');\n        return false;\n      }\n\n      var limitBody = this.fileUploadLimit(file, this.fileType);\n\n      if (limitBody.limit) {\n        this.$message({\n          message: limitBody.error,\n          type: 'error'\n        });\n      }\n\n      return !limitBody.limit;\n    },\n    handleExceed: function handleExceed(files, fileList) {\n      this.$message.error('仅可上传1个文件');\n    },\n    handleSuccess: function handleSuccess(res, file, fileList) {\n      this.$emit('on-success', this.fileList);\n    },\n    //文件上传限制\n    fileUploadLimit: function fileUploadLimit(file, fileType) {\n      var filePost = file.name.substring(file.name.lastIndexOf('.') + 1);\n      var extension = fileType.findIndex(function (item) {\n        return item.toLowerCase().indexOf(filePost.toLowerCase()) > -1;\n      }); //文件大小限定50kb\n\n      var isLimit = file.size / 1024 < this.fileSize;\n\n      if (extension === -1) {\n        var fileTypeStr = fileType.join(',');\n        return {\n          limit: true,\n          error: '仅支持上传' + fileTypeStr + '格式文件'\n        };\n      }\n\n      return {\n        limit: !isLimit,\n        error: '文件大小不能超过' + this.fileSize + 'kb'\n      };\n    },\n    //编辑\n    handleEdit: function handleEdit(index, row) {\n      this.editDialogVisible = true;\n      this.editForm = row;\n    },\n    //删除\n    handleDelete: function handleDelete(index, row) {\n      var _this5 = this;\n\n      this.$confirm('确定删除该条记录吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        (0, _request.default)({\n          url: '/datalab/maskingRulesConfig/delete',\n          method: 'post',\n          data: {\n            id: row.id\n          }\n        }).then(function (res) {\n          if (res.returnCode === '200') {\n            _this5.$message({\n              type: 'success',\n              message: '删除成功!'\n            });\n\n            _this5.queryPageList();\n          } else {\n            _this5.$message({\n              type: 'error',\n              message: res.returnMsg\n            });\n          }\n        });\n      }).catch(function () {\n        _this5.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.queryPageList();\n    this.queryMaskingRules();\n  }\n};\nexports.default = _default;",null]}