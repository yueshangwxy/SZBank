{"remainingRequest":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\DataAssetPlatform\\Pncui-Ind\\src\\router\\index.js","dependencies":[{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\src\\router\\index.js","mtime":1647930387762},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647917124586},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1647917124178}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/code/DataAssetPlatform/Pncui-Ind/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"D:/code/DataAssetPlatform/Pncui-Ind/node_modules/@babel/runtime/helpers/typeof\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.weak-map\");\n\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.loadMenus = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"D:/code/DataAssetPlatform/Pncui-Ind/node_modules/@babel/runtime/helpers/defineProperty\"));\n\nvar _routers = _interopRequireWildcard(require(\"./routers\"));\n\nvar _store = _interopRequireDefault(require(\"../store\"));\n\nvar _settings = _interopRequireDefault(require(\"@public/config/settings\"));\n\nvar _nprogress = _interopRequireDefault(require(\"nprogress\"));\n\nrequire(\"nprogress/nprogress.css\");\n\nvar _auth = require(\"@eladmin/utils/auth\");\n\nvar _menu = require(\"@eladmin/api/system/menu\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n_nprogress.default.configure({\n  showSpinner: false\n}); // NProgress Configuration\n\n\nvar whiteList = ['/login', '/sso/login']; // no redirect whitelist\n// router.beforeEach((to, from, next) => {\n//   // console.debug('==15===router foreache>',from, to,next)\n//   if (to.meta.title) {\n//     document.title = to.meta.title + ' - ' + Config.title\n//   }\n//   NProgress.start()\n//   console.log(\"to.path==> \" + to.path)\n//   if(isSSORequest(to)) { //单点登录\n//     console.log(\"单点登录\")\n//     removeToken()\n//     next(`/login?token=${to.query.token}&type=sso`) // 跳转的登录页面\n//     NProgress.done()\n//     return;\n//   }\n//   console.log(\"正常登录\")\n//   if (getToken()) {\n//     // console.debug('==21===router foreache>', to)\n//     // 已登录且要跳转的页面是登录页\n//     if (to.path === '/login') {\n//       next({ path: '/' })\n//       NProgress.done()\n//     } else {\n//       // console.debug('==27===router foreache>', to, store.getters.loadMenus, store.getters.authorizes)\n//       if (store.getters.authorizes.length === 0) { // 判断当前用户是否已拉取完user_info信息\n//         store.dispatch('GetInfo').then(() => { // 拉取user_info\n//           // 动态路由，拉取菜单\n//           loadMenus(next, to)\n//         }).catch((err) => {\n//           console.log(err)\n//           store.dispatch('LogOut').then(() => {\n//             location.reload() // 为了重新实例化vue-router对象 避免bug\n//           })\n//         })\n//         // 登录时未拉取 菜单，在此处拉取\n//       } else if (store.getters.loadMenus) {\n//         // 修改成false，防止死循环\n//         store.dispatch('updateLoadMenus').then(() => {\n//         })\n//         loadMenus(next, to)\n//       } else {\n//         next()\n//       }\n//     }\n//   } else {\n//      console.debug('==49===router foreache>', to)\n//     /* has no token*/\n//     if (whiteList.indexOf(to.path) !== -1 || to.path.startsWith('/assets')) { // 在免登录白名单，直接进入\n//       next()\n//     } else {\n//       //next(`/login?redirect=${to.fullPath || to.path}`) // 否则全部重定向到登录页\n//       next(`/login`) // 否则全部重定向到登录页\n//       NProgress.done()\n//     }\n//   }\n// })\n\nvar loadMenus = function loadMenus(next, to) {\n  var roleId = '';\n  console.log('-----loadMenus getCurrentRole()>>>', (0, _auth.getCurrentRole)());\n\n  if ((0, _auth.getCurrentRole)() && (0, _auth.getCurrentRole)().id) {\n    roleId = (0, _auth.getCurrentRole)().id;\n  }\n\n  (0, _menu.buildMenus)(roleId).then(function (res) {\n    console.log('-----loadMenus>>>', res);\n    var asyncRouter = (0, _routers.filterAsyncRouter)(res.menu);\n\n    _store.default.commit('SET_AUTHORIZES', res.authorities);\n\n    asyncRouter.push({\n      path: '*',\n      redirect: '/404',\n      hidden: true\n    });\n\n    _store.default.dispatch('GenerateRoutes', asyncRouter).then(function () {\n      // 存储路由\n      _routers.default.addRoutes(asyncRouter); // 动态添加可访问路由表\n\n\n      if (to.path === '/404' && to.redirectedFrom === '/refresh') {\n        next({\n          path: '/'\n        });\n      } else {\n        next(_objectSpread(_objectSpread({}, to), {}, {\n          replace: true\n        }));\n      }\n    });\n  });\n  /*} else {\r\n    next({ path: '/login' })\r\n  }*/\n};\n\nexports.loadMenus = loadMenus;\n\n_routers.default.afterEach(function () {\n  _nprogress.default.done(); // finish progress bar\n\n});",{"version":3,"sources":["D:/code/DataAssetPlatform/Pncui-Ind/src/router/index.js"],"names":["NProgress","configure","showSpinner","whiteList","loadMenus","next","to","roleId","console","log","id","then","res","asyncRouter","menu","store","commit","authorities","push","path","redirect","hidden","dispatch","router","addRoutes","redirectedFrom","replace","afterEach","done"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAGAA,mBAAUC,SAAV,CAAoB;AAAEC,EAAAA,WAAW,EAAE;AAAf,CAApB,E,CAA2C;;;AAE3C,IAAMC,SAAS,GAAG,CAAC,QAAD,EAAW,YAAX,CAAlB,C,CAA0C;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAOC,EAAP,EAAc;AACrC,MAAIC,MAAM,GAAG,EAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkD,2BAAlD;;AACA,MAAI,+BAAoB,4BAAiBC,EAAzC,EAA6C;AAC3CH,IAAAA,MAAM,GAAG,4BAAiBG,EAA1B;AACD;;AACC,wBAAWH,MAAX,EAAmBI,IAAnB,CAAwB,UAAAC,GAAG,EAAI;AAC7BJ,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCG,GAAjC;AACA,QAAMC,WAAW,GAAG,gCAAkBD,GAAG,CAACE,IAAtB,CAApB;;AACAC,mBAAMC,MAAN,CAAa,gBAAb,EAA+BJ,GAAG,CAACK,WAAnC;;AACAJ,IAAAA,WAAW,CAACK,IAAZ,CAAiB;AAAEC,MAAAA,IAAI,EAAE,GAAR;AAAaC,MAAAA,QAAQ,EAAE,MAAvB;AAA+BC,MAAAA,MAAM,EAAE;AAAvC,KAAjB;;AACAN,mBAAMO,QAAN,CAAe,gBAAf,EAAiCT,WAAjC,EAA8CF,IAA9C,CAAmD,YAAM;AAAE;AACzDY,uBAAOC,SAAP,CAAiBX,WAAjB,EADuD,CACzB;;;AAC9B,UAAIP,EAAE,CAACa,IAAH,KAAY,MAAZ,IAAsBb,EAAE,CAACmB,cAAH,KAAsB,UAAhD,EAA4D;AAC1DpB,QAAAA,IAAI,CAAC;AAAEc,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAJ;AACD,OAFD,MAEO;AACLd,QAAAA,IAAI,iCAAMC,EAAN;AAAUoB,UAAAA,OAAO,EAAE;AAAnB,WAAJ;AACD;AACF,KAPD;AAQD,GAbD;AAcF;AACF;AACA;AACC,CAvBM;;;;AAyBPH,iBAAOI,SAAP,CAAiB,YAAM;AACrB3B,qBAAU4B,IAAV,GADqB,CACJ;;AAClB,CAFD","sourcesContent":["import router from './routers'\r\nimport store from '../store'\r\nimport Config from '@public/config/settings'\r\nimport NProgress from 'nprogress' // progress bar\r\nimport 'nprogress/nprogress.css'// progress bar style\r\nimport {getToken, getCurrentRole, removeToken,isSSORequest} from '@eladmin/utils/auth' // getToken from cookie\r\nimport { buildMenus } from '@eladmin/api/system/menu'\r\nimport { filterAsyncRouter } from './routers'\r\n\r\nNProgress.configure({ showSpinner: false })// NProgress Configuration\r\n\r\nconst whiteList = ['/login', '/sso/login']// no redirect whitelist\r\n\r\n// router.beforeEach((to, from, next) => {\r\n//   // console.debug('==15===router foreache>',from, to,next)\r\n//   if (to.meta.title) {\r\n//     document.title = to.meta.title + ' - ' + Config.title\r\n//   }\r\n//   NProgress.start()\r\n//   console.log(\"to.path==> \" + to.path)\r\n//   if(isSSORequest(to)) { //单点登录\r\n//     console.log(\"单点登录\")\r\n//     removeToken()\r\n//     next(`/login?token=${to.query.token}&type=sso`) // 跳转的登录页面\r\n//     NProgress.done()\r\n//     return;\r\n//   }\r\n//   console.log(\"正常登录\")\r\n//   if (getToken()) {\r\n//     // console.debug('==21===router foreache>', to)\r\n//     // 已登录且要跳转的页面是登录页\r\n//     if (to.path === '/login') {\r\n//       next({ path: '/' })\r\n//       NProgress.done()\r\n//     } else {\r\n//       // console.debug('==27===router foreache>', to, store.getters.loadMenus, store.getters.authorizes)\r\n//       if (store.getters.authorizes.length === 0) { // 判断当前用户是否已拉取完user_info信息\r\n//         store.dispatch('GetInfo').then(() => { // 拉取user_info\r\n//           // 动态路由，拉取菜单\r\n//           loadMenus(next, to)\r\n//         }).catch((err) => {\r\n//           console.log(err)\r\n//           store.dispatch('LogOut').then(() => {\r\n//             location.reload() // 为了重新实例化vue-router对象 避免bug\r\n//           })\r\n//         })\r\n//         // 登录时未拉取 菜单，在此处拉取\r\n//       } else if (store.getters.loadMenus) {\r\n//         // 修改成false，防止死循环\r\n//         store.dispatch('updateLoadMenus').then(() => {\r\n//         })\r\n//         loadMenus(next, to)\r\n//       } else {\r\n//         next()\r\n//       }\r\n//     }\r\n//   } else {\r\n//      console.debug('==49===router foreache>', to)\r\n//     /* has no token*/\r\n//     if (whiteList.indexOf(to.path) !== -1 || to.path.startsWith('/assets')) { // 在免登录白名单，直接进入\r\n//       next()\r\n//     } else {\r\n//       //next(`/login?redirect=${to.fullPath || to.path}`) // 否则全部重定向到登录页\r\n//       next(`/login`) // 否则全部重定向到登录页\r\n//       NProgress.done()\r\n//     }\r\n//   }\r\n// })\r\n\r\nexport const loadMenus = (next, to) => {\r\n  let roleId = ''\r\n  console.log('-----loadMenus getCurrentRole()>>>', getCurrentRole())\r\n  if (getCurrentRole() && getCurrentRole().id) {\r\n    roleId = getCurrentRole().id\r\n  }\r\n    buildMenus(roleId).then(res => {\r\n      console.log('-----loadMenus>>>', res)\r\n      const asyncRouter = filterAsyncRouter(res.menu)\r\n      store.commit('SET_AUTHORIZES', res.authorities)\r\n      asyncRouter.push({ path: '*', redirect: '/404', hidden: true })\r\n      store.dispatch('GenerateRoutes', asyncRouter).then(() => { // 存储路由\r\n        router.addRoutes(asyncRouter) // 动态添加可访问路由表\r\n        if (to.path === '/404' && to.redirectedFrom === '/refresh') {\r\n          next({ path: '/' })\r\n        } else {\r\n          next({ ...to, replace: true })\r\n        }\r\n      })\r\n    })\r\n  /*} else {\r\n    next({ path: '/login' })\r\n  }*/\r\n}\r\n\r\nrouter.afterEach(() => {\r\n  NProgress.done() // finish progress bar\r\n})\r\n"]}]}