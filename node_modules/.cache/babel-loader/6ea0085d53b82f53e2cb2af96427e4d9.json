{"remainingRequest":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\eladmin-common\\src\\views\\ssologin.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\eladmin-common\\src\\views\\ssologin.vue","mtime":1647917128166},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647917124586},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1647917124178},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647917124586},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1647917137429},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647917124586},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1647917124178},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647917124586},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1647917137429}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\nimport _defineProperty from \"D:/code/DataAssetPlatform/Pncui-Ind/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Config from \"../../public/config/settings\";\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n  name: 'SsoLogin',\n  data: function data() {\n    return {\n      title: Config.title,\n      currentRole: '',\n      selectRole: false\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$store.dispatch('SsoLogin', this.$route.query['token']).then(function () {\n      if (_this.user().roles != null && _this.user().roles.length > 0) {\n        if (_this.user().roles.length > 1) {\n          //console.log('=======login=====>', this.user())\n          _this.selectRole = true;\n        } else if (_this.user().roles.length == 1) {\n          _this.currentRole = _this.user().roles[0].id;\n\n          _this.goin();\n        }\n      } else {\n        _this.$message(\"当前用户没有访问该系统的权限，请联系管理员！\", 'error');\n      }\n    }).catch(function () {});\n  },\n  methods: _objectSpread(_objectSpread({\n    goin: function goin() {\n      var _this2 = this;\n\n      if (!this.currentRole) {\n        this.$message('请选择角色', 'error');\n        return;\n      }\n\n      console.log('======goin============', this.currentRole, this.user().roles.find(function (e) {\n        return e.id == _this2.currentRole;\n      }));\n      this.$store.dispatch('setCurrentRole', this.user().roles.find(function (e) {\n        return e.id == _this2.currentRole;\n      }));\n      this.$router.push({\n        path: this.redirect || '/'\n      });\n    },\n    cancel: function cancel() {\n      this.selectRole = false;\n      this.loading = false;\n    }\n  }, mapGetters(['getSmartbi', 'user'])), mapActions(['setSmartbi']))\n};",null]}