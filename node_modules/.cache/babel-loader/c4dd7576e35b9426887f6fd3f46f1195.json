{"remainingRequest":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\DataAssetPlatform\\Pncui-Ind\\src\\api\\indicators\\indCategory.js","dependencies":[{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\src\\api\\indicators\\indCategory.js","mtime":1647917138725},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647917124586},{"path":"D:\\code\\DataAssetPlatform\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1647917124178}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/code/DataAssetPlatform/Pncui-Ind/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.add = add;\nexports.del = del;\nexports.edit = edit;\nexports.tree = tree;\nexports.treeInfo = treeInfo;\nexports.treeByTable = treeByTable;\nexports.getCategoryList = getCategoryList;\nexports.getCategoryName = getCategoryName;\nexports.default = void 0;\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/code/DataAssetPlatform/Pncui-Ind/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _request = _interopRequireDefault(require(\"@/utils/request\"));\n\nvar url = 'v1/indicators/indCategorys';\n\nfunction add(data) {\n  return (0, _request.default)({\n    url: url,\n    method: 'post',\n    data: data\n  });\n}\n\nfunction del(ids) {\n  return (0, _request.default)({\n    url: url,\n    method: 'delete',\n    data: ids\n  });\n}\n\nfunction edit(data) {\n  return (0, _request.default)({\n    url: url,\n    method: 'put',\n    data: data\n  });\n}\n\nfunction tree(type, parentId) {\n  return (0, _request.default)({\n    url: url + \"/\".concat(type, \"/\").concat(parentId),\n    method: 'get'\n  });\n}\n\nfunction treeInfo(type, parentId) {\n  return (0, _request.default)({\n    url: url + \"/treeInfo/\".concat(type, \"/\").concat(parentId),\n    method: 'get'\n  });\n}\n\nfunction treeByTable(type) {\n  return (0, _request.default)({\n    url: url + \"/treeByTable/\".concat(type),\n    method: 'get'\n  });\n}\n\nfunction getCategoryList(data) {\n  return (0, _request.default)({\n    url: url + \"/getCategoryList/\".concat(data),\n    method: 'get'\n  });\n}\n\nfunction getCategoryName(_x) {\n  return _getCategoryName.apply(this, arguments);\n}\n\nfunction _getCategoryName() {\n  _getCategoryName = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee(id) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", (0, _request.default)({\n              url: url + \"/getCategoryName/\".concat(id),\n              method: 'get'\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getCategoryName.apply(this, arguments);\n}\n\nvar _default = {\n  url: url,\n  tree: tree,\n  treeInfo: treeInfo,\n  treeByTable: treeByTable,\n  getCategoryList: getCategoryList,\n  getCategoryName: getCategoryName,\n  crud: {\n    add: add,\n    edit: edit,\n    del: del\n  }\n};\nexports.default = _default;",null]}