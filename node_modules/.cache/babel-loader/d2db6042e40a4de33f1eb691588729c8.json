{"remainingRequest":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js!D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WorkSpace\\indicator\\Pncui-Indicator\\src\\views\\indicators\\result\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\src\\views\\indicators\\result\\index.vue","mtime":1646633727708},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WorkSpace\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"D:/WorkSpace/indicator/Pncui-Indicator/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _objectSpread from \"D:/WorkSpace/indicator/Pncui-Indicator/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _methods;\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nfunction getDay(num) {\n  var today = new Date();\n  var nowTime = today.getTime();\n  var ms = 24 * 3600 * 1000 * num;\n  today.setTime(parseInt(nowTime + ms));\n  today.setHours(23);\n  today.setMinutes(59);\n  today.setSeconds(59);\n  /* var oYear = today.getFullYear();\r\n   var oMoth = (today.getMonth() + 1).toString();\r\n   if (oMoth.length <= 1) oMoth = '0' + oMoth;\r\n   var oDay = today.getDate().toString();\r\n   if (oDay.length <= 1) oDay = '0' + oDay;\r\n   let m =  oYear + '-' + oMoth + '-' + oDay + ' ' + today.getHours().toString() + ':' + today.getMinutes() + ':' + today.getSeconds();\r\n   console.log(\"==\" + m)*/\n\n  return today;\n}\n\nimport crudIndIndicatorResult, { addFavorites as _addFavorites, removeFavorites as _removeFavorites, saveReadRec as _saveReadRec } from \"../../../api/indicators/indIndicatorResult\";\nimport { getResultDepts } from '@/api/indicators/indResultSubscribe';\nimport CRUD, { presenter, header, form, crud } from '@crud/crud';\nimport rrOperation from '@crud/RR.operation';\nimport crudOperation from '@crud/CRUD.operation'; // import udOperation from '@crud/UD.operation'\n\nimport pagination from '@crud/Pagination';\nimport category from \"../category/categoryNew\";\nimport { getDepts } from '@/utils/system';\nimport Treeselect from '@riophae/vue-treeselect';\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css';\nimport moment from \"moment\"; // crud交由presenter持有\n\nvar defaultCrud = CRUD({\n  title: '指标计算结果表',\n  url: crudIndIndicatorResult.url,\n  sort: 'id,desc',\n  initQry: false,\n  crudMethod: _objectSpread({}, crudIndIndicatorResult.crud)\n});\nvar defaultForm = {\n  id: null,\n  orgId: null,\n  ieId: null,\n  ieCode: null,\n  ieName: null,\n  ieValue: null,\n  status: null,\n  crtUserCode: null,\n  crtOrgCode: null,\n  crtDate: null,\n  updUserCode: null,\n  updOrgCode: null,\n  updDate: null,\n  frequency: null,\n  periodDateInterval: null,\n  ieKindOneName: null\n};\nexport default {\n  name: 'IndIndicatorResult',\n  components: {\n    Treeselect: Treeselect,\n    pagination: pagination,\n    crudOperation: crudOperation,\n    rrOperation: rrOperation,\n    category: category\n  },\n  mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\n  dicts: ['IND_FIRST_TYPE', 'RETENTION', 'IE_TYPE', 'IE_STATUS', 'IND_CURRENCY', 'YN', 'IE_FREQUENCY'],\n  data: function data() {\n    var _this = this;\n\n    return {\n      zoomDirection: 'left',\n      depts: [],\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      table: {\n        columns: {\n          id: 'hidden',\n          ieId: 'hidden',\n          updUserCode: 'hidden',\n          updDate: 'hidden'\n        }\n      },\n      permission: {\n        add: [''],\n        edit: [''],\n        del: ['']\n      },\n      showDialog: false,\n      pickerMinDate: \"\",\n      //第一次选中的时间\n      pickerOptions: {\n        onPick: function onPick(obj) {//this.pickerMinDate = new Date(obj.minDate).getTime();\n          //console.log(\"times===>,\" + this.pickerTimes + \", pickerMinDate==>\" + this.pickerMinDate)\n          //this.pickerMaxDate = new Date(obj.maxDate).getTime();\n          //this.query.periodDateInterval= [this.pickerMinDate, this.pickerMaxDate]\n          //this.$set(this.query,'periodDateInterval',[obj.minDate, obj.maxDate]);\n        },\n        disabledDate: function disabledDate(time) {\n          var yestoday = getDay(-1);\n\n          if (_this.pickerMinDate) {\n            var day1 = 366 * 24 * 3600 * 1000;\n            var maxTime = _this.pickerMinDate + day1;\n            var minTime = yestoday - day1;\n            return time.getTime() < minTime || time.getTime() > yestoday;\n          } else {\n            var _day = 366 * 24 * 3600 * 1000;\n\n            var _minTime = yestoday - _day;\n\n            return time.getTime() < _minTime || time.getTime() > yestoday;\n          }\n        }\n      },\n      form: {}\n    };\n  },\n  created: function created() {\n    //debugger\n    //defaultCrud.query.periodDateInterval = this.timeDefault\n    this.crud.optShow.del = false;\n    this.crud.optShow.edit = false;\n    this.crud.optShow.add = false;\n    this.getDepts();\n\n    if (this.$route.query.ieName) {\n      this.query.ieName = this.$route.query.ieName;\n    }\n\n    if (this.$route.query.deptId) {\n      this.query.deptId = this.$route.query.deptId;\n    }\n\n    if (this.$route.query.currency) {\n      this.query.currency = this.$route.query.currency;\n    }\n\n    if (this.$route.query.frequency) {\n      this.query.frequency = this.$route.query.frequency;\n    }\n\n    if ((this.$route.query.ieName == null || this.$route.query.ieName == 'undefined' || this.$route.query.ieName == '') && (this.$route.query.deptId == null || this.$route.query.deptId == 'undefined' || this.$route.query.deptId == '') && (this.$route.query.currency == null || this.$route.query.currency == 'undefined' || this.$route.query.currency == '') && (this.$route.query.frequency == null || this.$route.query.frequency == 'undefined' || this.$route.query.frequency == '')) {\n      //this.crud.resetQuery(false);\n      this.getPassYearFormatDate();\n      this.query.ieName = '';\n      this.query.deptId = null;\n      this.query.currency = '';\n      this.query.frequency = '';\n      this.query.isFavorites = ''; //this.query.periodDateInterval =''\n\n      this.query.isNotClearIeName = true;\n      defaultCrud.loading = false;\n    }\n\n    if ((this.query.ieName == null || this.query.ieName == 'undefined' || this.query.ieName == '') && (this.query.deptId == null || this.query.deptId == 'undefined' || this.query.deptId == '') && (this.query.currency == null || this.query.currency == 'undefined' || this.query.currency == '') && (this.query.frequency == null || this.query.frequency == 'undefined' || this.query.frequency == '')) {\n      console.log(\"无条件查询\"); //defaultCrud.initQry = false\n      //defaultCrud.refresh()\n    } else {\n      //CRUD.toQuery\n      console.log(\"有条件查询\"); //defaultCrud.initQry = true\n      //defaultCrud.refresh()\n    }\n  },\n  mounted: function mounted() {\n    //debugger\n    if (this.$route.query.ieName == null || this.$route.query.ieName == 'undefined' || this.$route.query.ieName == '') {\n      this.getPassYearFormatDate(); //this.query.periodDateInterval = this.timeDefault\n    } else {\n      this.query.periodDateInterval = [];\n    }\n  },\n  computed: {\n    // 默认时间\n    timeDefault: function timeDefault() {\n      /!*console.log(\"times===>,\" + this.pickerTimes)*!/;\n      var defalutStartTime = moment().subtract(1, \"year\").format('YYYY-MM-DD');\n      var defalutEndTime = moment().format('YYYY-MM-DD');\n      return [defalutStartTime, defalutEndTime];\n    }\n  },\n  methods: (_methods = {\n    handleZoom: function handleZoom() {\n      if (this.zoomDirection == 'left') this.zoomDirection = 'right';else this.zoomDirection = 'left';\n    },\n    resetQuery: function resetQuery() {\n      this.crud.resetQuery();\n      this.query.isNotClearIeName = true;\n\n      if (this.$route.query.ieName == null || this.$route.query.ieName == 'undefined' || this.$route.query.ieName == '') {\n        this.getPassYearFormatDate();\n        this.query.ieName = '';\n        this.query.deptId = null;\n        this.query.currency = '';\n        this.query.frequency = '';\n        this.query.isFavorites = ''; //this.query.periodDateInterval = this.timeDefault\n      } else {\n        this.query.periodDateInterval = [];\n      }\n\n      this.crud.refresh();\n    },\n    changeTime: function changeTime(e) {\n      this.$forceUpdate();\n    }\n  }, _defineProperty(_methods, CRUD.HOOK.beforeRefresh, function () {\n    //debugger\n    if (this.$route.query.ieName) {\n      this.query.ieName = this.$route.query.ieName;\n      this.query.periodDateInterval = [];\n    } else if (!this.query.isNotClearIeName) {\n      this.query.ieName = '';\n\n      if (this.query.periodDateInterval == null || this.query.periodDateInterval == 'undifined' || this.query.periodDateInterval == []) {\n        //defaultCrud.loading = false\n        //defaultCrud.initQry = true\n        return false;\n      }\n    }\n    /*if(defaultCrud.initQry){\r\n      defaultCrud.loading = true\r\n      return true\r\n    }else{\r\n      defaultCrud.initQry = true\r\n      defaultCrud.loading = false\r\n      return false\r\n    }*/\n\n\n    return true;\n  }), _defineProperty(_methods, CRUD.HOOK.beforeToDetail, function (data) {\n    this.form.correspondRate = data.form.correspondRate == null ? 0 : data.form.correspondRate;\n    this.form.yearFloatRate = data.form.yearFloatRate == null ? 0 : data.form.yearFloatRate;\n    this.form.circalRate = data.form.circalRate == null ? 0 : data.form.circalRate;\n  }), _defineProperty(_methods, \"viewHandle\", function viewHandle(row) {\n    this.form = row;\n    this.form.correspondRate = row.correspondRate == null ? 0 : row.correspondRate;\n    this.form.yearFloatRate = row.yearFloatRate == null ? 0 : row.yearFloatRate;\n    this.form.circalRate = row.circalRate == null ? 0 : row.circalRate;\n    this.showDialog = true;\n    this.saveReadRec(row.id);\n  }), _defineProperty(_methods, \"getDepts\", function getDepts() {\n    var _this2 = this;\n\n    getResultDepts().then(function (res) {\n      _this2.depts = res.content;\n    });\n  }), _defineProperty(_methods, \"saveReadRec\", function saveReadRec(id) {\n    _saveReadRec(id).then(function (res) {\n      console.log(\"saveReadRec res===>,\" + res);\n    });\n  }), _defineProperty(_methods, \"addFavorites\", function addFavorites(data) {\n    console.log(\"addFavorites,\" + data);\n\n    if (data == null && !Array.isArray(data)) {\n      this.$notify({\n        title: '请选择指标结果',\n        type: 'warning',\n        duration: 2500\n      });\n      return;\n    }\n\n    var ids = \"\";\n\n    for (var i = 0; i < data.length; i++) {\n      ids += data[i].id + \",\";\n    }\n\n    if (ids != null && ids.includes(\",\")) {\n      ids = ids.substr(0, ids.length - 1);\n    }\n\n    _addFavorites(ids).then(function (res) {\n      console.log(\"addFavorites res===>,\" + res);\n\n      if (res.code === 0) {\n        defaultCrud.notify(res.msg, CRUD.NOTIFICATION_TYPE.SUCCESS);\n      } else {\n        defaultCrud.notify(res.msg, CRUD.NOTIFICATION_TYPE.ERROR);\n      }\n\n      defaultCrud.refresh();\n    });\n  }), _defineProperty(_methods, \"removeFavorites\", function removeFavorites(data) {\n    console.log(\"removeFavorites,\" + data);\n\n    if (data == null && !Array.isArray(data)) {\n      this.$notify({\n        title: '请选择指标结果',\n        type: 'warning',\n        duration: 2500\n      });\n      return;\n    }\n\n    var ids = \"\";\n\n    for (var i = 0; i < data.length; i++) {\n      ids += data[i].id + \",\";\n    }\n\n    if (ids != null && ids.includes(\",\")) {\n      ids = ids.substr(0, ids.length - 1);\n    }\n\n    _removeFavorites(ids).then(function (res) {\n      console.log(\"removeFavorites res===>,\" + res);\n\n      if (res.code === 0) {\n        defaultCrud.notify(res.msg, CRUD.NOTIFICATION_TYPE.SUCCESS);\n      } else {\n        defaultCrud.notify(res.msg, CRUD.NOTIFICATION_TYPE.ERROR);\n      }\n\n      defaultCrud.refresh();\n    });\n  }), _defineProperty(_methods, \"cellStyle\", function cellStyle(data) {\n    if (data.row.readed === 0) {\n      return 'font-weight: 1000;color:#1742a5;';\n    } else {\n      return '';\n    }\n  }), _defineProperty(_methods, \"forceUpdate\", function forceUpdate() {\n    this.$forceUpdate();\n  }), _defineProperty(_methods, \"handleCategoryClick\", function handleCategoryClick(data) {\n    this.crud.form.categoryId = data.id;\n    this.crud.query.categoryIds = data.childrenIds;\n    this.crud.query.categoryType = data.categoryType;\n    this.crud.query.categoryLevel = data.level;\n    this.crud.query.tenant = data.tenant;\n\n    if (data.categoryType == '0') {\n      this.crud.query.categoryId = data.id;\n    } else {\n      this.crud.query.categoryId = data.childrenIds != null ? data.childrenIds.toString() : \"\";\n    }\n\n    this.form.categoryType = data.categoryType;\n    this.form.categoryId = data.id;\n    this.crud.form.indFirstType = data.id;\n    this.crud.refresh();\n  }), _defineProperty(_methods, \"getPassYearFormatDate\", function getPassYearFormatDate() {\n    var nowDate = getDay(-1); //nowDate.setDate(nowDate.getDate() - 1)\n\n    var date = new Date(nowDate);\n    date.setDate(date.getDate() - 365);\n    var seperator1 = '-';\n    var year = date.getFullYear();\n    var month = date.getMonth() + 1;\n    var strDate = date.getDate();\n\n    if (month >= 1 && month <= 9) {\n      month = '0' + month;\n    }\n\n    if (strDate >= 0 && strDate <= 9) {\n      strDate = '0' + strDate;\n    }\n\n    var formatDate = year + seperator1 + month + seperator1 + strDate;\n    this.getNowFormatDate(formatDate);\n  }), _defineProperty(_methods, \"getNowFormatDate\", function getNowFormatDate(formatDate) {\n    var date = getDay(-1); //date.setDate(date.getDate() - 1)\n\n    var seperator1 = '-';\n    var year = date.getFullYear();\n    var month = date.getMonth() + 1;\n    var strDate = date.getDate();\n\n    if (month >= 1 && month <= 9) {\n      month = '0' + month;\n    }\n\n    if (strDate >= 0 && strDate <= 9) {\n      strDate = '0' + strDate;\n    }\n\n    var nowData = year + seperator1 + month + seperator1 + strDate;\n    this.query.periodDateInterval = [formatDate, nowData]; // 默认赋值一年时间\n    //this.$set(this.query,\"periodDateInterval\",[formatDate, nowData]);\n  }), _methods)\n};",null]}