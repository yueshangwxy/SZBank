{"remainingRequest":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js!D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\code\\DataAssetPlatform000\\Pncui-Ind\\src\\views\\indicators\\portalHome\\manager\\userManager.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\src\\views\\indicators\\portalHome\\manager\\userManager.vue","mtime":1654848715709},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\code\\DataAssetPlatform000\\Pncui-Ind\\node_modules\\vue-loader\\lib\\index.js","mtime":1650418886580}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/code/DataAssetPlatform000/Pncui-Ind/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"D:/code/DataAssetPlatform000/Pncui-Ind/node_modules/@babel/runtime/helpers/defineProperty\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: \"userManager\",\n  components: {},\n  data: function data() {\n    return {\n      currentUserId: \"\",\n      // 当前选择用户\n      dataWorksVisible: false,\n      currentSelectDataWorks: [],\n      dataWorksInfo: {\n        page: 1,\n        size: 10,\n        total: 0\n      },\n      dataWorksTable: [],\n      // 筛选项\n      name: \"\",\n      date: \"\",\n      dateValue: \"\",\n      enabled: \"\",\n      userType: \"\",\n      // 树状图\n      filterText: \"\",\n      treeData: [],\n      nodeId: \"\",\n      // 表格\n      tableData: [],\n      propList: [],\n      defaultProps: {\n        id: \"id\",\n        children: \"children\",\n        label: \"name\"\n      },\n      // 分页\n      pageSize: 10,\n      total: 10,\n      currentPage: 1,\n      // 详情弹窗\n      detailsVisible: false,\n      ruleForm: {\n        num: \"123\",\n        name: \"123\",\n        org: \"123\",\n        role: \"1\",\n        job: \"123\",\n        phone: \"123456789\",\n        tellerNo: \"12131231223\",\n        gender: \"男\",\n        status: \"启用\"\n      },\n      rules: {\n        num: [{\n          required: true,\n          message: \"请输入编号\",\n          trigger: \"blur\"\n        }],\n        name: [{\n          required: true,\n          message: \"请输入名称\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  watch: {\n    // 节点过滤\n    filterText: function filterText(val) {\n      this.$refs.tree.filter(val);\n    },\n    //\n    date: function date(val) {\n      if (val) {\n        var startTime = this.$formatDate(val[0]);\n        var endTime = this.$formatDate(val[1]);\n        this.dateValue = [startTime, endTime];\n        console.log(this.dateValue);\n      } else {\n        this.dateValue = [];\n      }\n    }\n  },\n  mounted: function mounted() {},\n  computed: {},\n  created: function created() {\n    var _this = this;\n\n    this.propList = [{\n      prop: \"username\",\n      label: \"用户名\",\n      width: 70\n    }, {\n      prop: \"userNo\",\n      label: \"用户编号\",\n      align: \"center\"\n    }, {\n      prop: \"nickName\",\n      label: \"姓名\"\n    }, {\n      prop: \"sex\",\n      width: 50,\n      label: \"性别\"\n    }, {\n      prop: \"phone\",\n      label: \"电话\"\n    }, {\n      prop: \"email\",\n      label: \"邮箱\"\n    }, {\n      prop: \"deptName\",\n      label: \"机构\"\n    }, {\n      prop: \"roleName\",\n      label: \"角色\"\n    }, {\n      prop: \"jobName\",\n      label: \"岗位\"\n    }, {\n      width: 120,\n      prop: \"dataworksAccount\",\n      label: \"Dataworks账号\"\n    }];\n    this.$api.getSysDeptList({}).then(function (res) {\n      _this.treeData = res.content;\n    });\n    this.queryList();\n  },\n  methods: {\n    transTime: function transTime(datetime) {\n      var date = new Date(datetime); //时间戳为10位需*1000，时间戳为13位的话不需乘1000\n\n      var Y = date.getFullYear();\n      var M = date.getMonth() + 1 < 10 ? \"0\" + (date.getMonth() + 1) : date.getMonth() + 1;\n      var d = date.getDate();\n      d = d < 10 ? \"0\" + d : d;\n      return Y + \"-\" + M + \"-\" + d;\n    },\n    // 提交修改\n    submitUpdateDateWorks: function submitUpdateDateWorks() {\n      var _this2 = this;\n\n      if (!this.currentSelectDataWorks[0] && !this.currentSelectDataWorks[0].dataworksAccount) {\n        this.$message.error(\"请先选择Dataworks账号\");\n        return;\n      }\n\n      var request = {\n        dataworksAccount: this.currentSelectDataWorks[0].dataworksAccount || \"\",\n        id: this.currentUserId\n      };\n      this.$api.updateDataworks(request).then(function (res) {\n        if (res.code == 0) {\n          _this2.$message.success(\"修改成功\");\n\n          _this2.dataWorksVisible = false;\n\n          _this2.queryList();\n        } else {\n          _this2.$message.error(res.msg);\n        }\n      });\n    },\n    handleDataWorksChange: function handleDataWorksChange(val) {\n      if (val.length > 1) {\n        this.$refs.dataWorksTable.clearSelection(); //清除\n\n        this.$refs.dataWorksTable.toggleRowSelection(val.pop()); //pop：最后一个\n      } else {\n        this.currentSelectDataWorks = val; //multipleSelection：当前选择的数组\n      }\n    },\n    handleCloseDataWork: function handleCloseDataWork() {\n      this.currentSelectDataWorks = [];\n      this.dataWorksInfo = {\n        page: 1,\n        size: 10,\n        total: 0\n      };\n      this.dataWorksVisible = false;\n    },\n    handleDataWorksTable: function handleDataWorksTable(num) {\n      this.$set(this.dataWorksInfo, \"page\", num);\n      this.getDataWorksTable();\n    },\n    getDataWorksTable: function getDataWorksTable() {\n      var _this3 = this;\n\n      var request = _objectSpread({}, this.dataWorksInfo);\n\n      this.$api.getDataWorksList(request).then(function (res) {\n        _this3.dataWorksTable = res.data.records;\n\n        _this3.$set(_this3.dataWorksInfo, \"total\", res.data.total);\n\n        selectDefaultDataWorks.call(_this3);\n      });\n\n      function selectDefaultDataWorks() {// TODO ...\n      }\n    },\n    // 重置\n    reset: function reset() {\n      this.name = \"\";\n      this.date = \"\";\n      this.enabled = \"\";\n      this.userType = \"\";\n    },\n    // 树状图过滤\n    filterNode: function filterNode(value, data) {\n      if (!value) return true;\n      return data.name.indexOf(value.toString()) !== -1;\n    },\n    // 树状图节点点击\n    handleNodeClick: function handleNodeClick(node, data) {\n      this.currentPage = 1;\n      this.nodeId = node.id;\n      this.queryList();\n    },\n    // 搜索按钮\n    searchList: function searchList() {\n      this.currentPage = 1;\n      this.nodeId = \"\";\n      this.queryList();\n    },\n    // 维护账号\n    defendAccount: function defendAccount(row) {\n      this.getDataWorksTable();\n      this.dataWorksInfo.currentUserDataWorks = row.dataworksAccount;\n      this.currentUserId = row.id;\n      this.dataWorksVisible = true;\n    },\n    // 列表查询\n    queryList: function queryList() {\n      var _this4 = this;\n\n      var request = {\n        deptId: this.nodeId,\n        keyWord: this.name,\n        crtDate: this.dateValue,\n        enabled: this.enabled,\n        userType: this.userType,\n        size: this.pageSize,\n        page: this.currentPage\n      };\n      this.$api.qryUserListPage(request).then(function (res) {\n        _this4.tableData = res.data.records;\n        _this4.total = res.data.total;\n      });\n    },\n    // 复选框\n    handleSelectionChange: function handleSelectionChange(val) {},\n    // 懒加载\n    load: function load(tree, treeNode, resolve) {\n      setTimeout(function () {\n        resolve([{\n          id: 31,\n          name: \"菜单1\",\n          sort: 10,\n          router: \"/xxx\",\n          auth: \"xxxx\",\n          component: \"组件1\",\n          links: \"www.baidu.com\",\n          cache: \"否\",\n          visibility: \"fou\",\n          date: \"2016-05-02\"\n        }, {\n          id: 32,\n          name: \"菜单1\",\n          sort: 10,\n          router: \"/xxx\",\n          auth: \"xxxx\",\n          component: \"组件1\",\n          links: \"www.baidu.com\",\n          cache: \"否\",\n          visibility: \"fou\",\n          date: \"2016-05-02\"\n        }]);\n      }, 1000);\n    },\n    // 详情\n    viewDetails: function viewDetails(row) {\n      this.detailsVisible = true;\n    },\n    //  分页\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.currentPage = val;\n      this.queryList();\n    }\n  }\n};\nexports.default = _default;",null]}