{"remainingRequest":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js!F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\code\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\code\\indicator\\Pncui-Indicator\\src\\views\\indicators\\result\\resultCheck.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\code\\indicator\\Pncui-Indicator\\src\\views\\indicators\\result\\resultCheck.vue","mtime":1638758244881},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"F:/code/indicator/Pncui-Indicator/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\nimport _createForOfIteratorHelper from \"F:/code/indicator/Pncui-Indicator/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\n\nvar _methods;\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getCheckList, saveCheckData, deleteCheckData } from '@/api/indicators/indResultSubscribe';\nimport qs from 'qs';\nimport CRUD, { presenter, header, form, crud } from '@crud/crud';\nimport rrOperation from '@crud/RR.operation';\nimport crudOperation from '@crud/CRUD.operation';\nimport pagination from '@crud/Pagination';\nvar defaultCrud = CRUD({\n  title: '指标加工结果校验',\n  url: 'v1/indicators/result/atom/getCheckList',\n  loading: true,\n  crudMethod: {\n    getCheckList: getCheckList\n  }\n});\nvar defaultForm = {\n  name: null,\n  checkData: null\n};\nexport default {\n  name: \"resultCheck\",\n  components: {\n    pagination: pagination,\n    crudOperation: crudOperation,\n    rrOperation: rrOperation\n  },\n  mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\n  data: function data() {\n    return {\n      permission: {\n        add: ['admin', 'add'],\n        edit: ['admin', 'edit'],\n        del: ['admin', 'del']\n      },\n      activeName: 'first',\n      showDetailDialog: false,\n      detailDialogTitle: '新增|编辑',\n      firstDisabled: false,\n      secondDisabled: false,\n      checkForm: {}\n    };\n  },\n  methods: (_methods = {}, _defineProperty(_methods, CRUD.HOOK.beforeRefresh, function () {\n    this.crud.optShow.del = true;\n    this.crud.optShow.add = true;\n    this.crud.optShow.edit = true;\n    return true;\n  }), _defineProperty(_methods, CRUD.HOOK.beforeToAdd, function () {\n    this.showDetailDialog = true;\n    this.activeName = 'first';\n    this.firstDisabled = false;\n    this.secondDisabled = false;\n  }), _defineProperty(_methods, CRUD.HOOK.beforeToEdit, function () {\n    console.log(\"===修改\");\n    this.showDetailDialog = true;\n\n    if (this.crud.selections[0].check_type == '0') {\n      //定量\n      this.activeName = 'first';\n      this.firstDisabled = false;\n      this.secondDisabled = true;\n      this.checkForm.checkType = this.crud.selections[0].check_type;\n      this.checkForm.id = this.crud.selections[0].id;\n      this.checkForm.code = this.crud.selections[0].ie_code;\n      this.checkForm.name = this.crud.selections[0].ie_name;\n      this.checkForm.compareSymbol = this.crud.selections[0].compare_symbol;\n      this.checkForm.fixVal = this.crud.selections[0].fix_val;\n    } else if (this.crud.selections[0].check_type == '1') {\n      this.activeName = 'second';\n      this.firstDisabled = true;\n      this.secondDisabled = false;\n      this.checkForm.checkType = this.crud.selections[0].check_type;\n      this.checkForm.id = this.crud.selections[0].id; //this.checkForm.code = this.crud.selections[0].ie_code\n\n      this.checkForm.formulaOne = this.crud.selections[0].ie_name;\n      this.checkForm.formulaCompareSymbol = this.crud.selections[0].compare_symbol;\n      this.checkForm.formulaTwo = this.crud.selections[0].fix_val;\n    }\n  }), _defineProperty(_methods, CRUD.HOOK.beforeDelete, function () {\n    var _this = this;\n\n    var selectIds = \"\";\n\n    var _iterator = _createForOfIteratorHelper(this.crud.selections),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var items = _step.value;\n\n        if (items.id != '') {\n          selectIds += items.id + \",\";\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    deleteCheckData(qs.stringify({\n      ids: selectIds\n    })).then(function (res) {\n      if (res.code == '0') {\n        _this.$message({\n          type: 'success',\n          message: '操作成功 '\n        });\n      }\n\n      _this.crud.refresh();\n    });\n    return false;\n  }), _defineProperty(_methods, \"closeApproveDetailDialog\", function closeApproveDetailDialog() {\n    this.showDetailDialog = false;\n    this.activeName = 'first';\n    this.checkForm = {};\n  }), _defineProperty(_methods, \"handleClick\", function handleClick(tab, event) {\n    console.log(\"=====\" + tab, event);\n  }), _defineProperty(_methods, \"saveCheckForm\", function saveCheckForm() {\n    var _this2 = this;\n\n    var checkParam = {};\n    checkParam.id = this.checkForm.id;\n\n    if (this.activeName == 'first') {\n      checkParam.code = this.checkForm.code;\n      checkParam.name = this.checkForm.name;\n      checkParam.compareSymbol = this.checkForm.compareSymbol;\n      checkParam.fixVal = this.checkForm.fixVal;\n      checkParam.checkType = '0';\n    } else {\n      checkParam.formulaOne = this.checkForm.formulaOne;\n      checkParam.formulaTwo = this.checkForm.formulaTwo;\n      checkParam.formulaCompareSymbol = this.checkForm.formulaCompareSymbol;\n      checkParam.checkType = '1';\n    }\n\n    saveCheckData(qs.stringify(checkParam)).then(function (res) {\n      if (res.code == '0') {\n        _this2.$message({\n          type: 'success',\n          message: '操作成功 '\n        });\n      }\n\n      _this2.closeApproveDetailDialog();\n\n      _this2.crud.refresh();\n    });\n  }), _defineProperty(_methods, \"onInput\", function onInput() {\n    this.$forceUpdate();\n  }), _methods)\n};",null]}