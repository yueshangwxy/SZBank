{"remainingRequest":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js!F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\code\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\code\\indicator\\Pncui-Indicator\\node_modules\\pncui-workflow\\src\\views\\activiti\\processes.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\pncui-workflow\\src\\views\\activiti\\processes.vue","mtime":499162500000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { processList } from \"../../api/workflow/activiti\";\nimport FlowImage from \"../../components/Activiti/FlowImage\";\nexport default {\n  name: 'Processes',\n  data: function data() {\n    return {\n      query: {\n        type: '1',\n        finished: ''\n      },\n      form: {\n        taskId: '',\n        assignee: '',\n        comment: '',\n        parameter: ''\n      },\n      current: {},\n      rows: [],\n      loading: false,\n      startFlow: false,\n      isAssign: false,\n      showImage: false,\n      users: [],\n      page: {\n        // 页码\n        start: 0,\n        // 每页数据条数\n        size: 10,\n        // 总数据条数\n        total: 0\n      }\n    };\n  },\n  props: {\n    processInstanceId: {\n      type: String,\n      required: true,\n      default: null\n    }\n  },\n  components: {\n    FlowImage: FlowImage\n  },\n  mounted: function mounted() {\n    this.refresh();\n  },\n  methods: {\n    refresh: function refresh() {\n      var _this = this;\n\n      console.log('==refresh======', this.processInstanceId);\n      processList(this.processInstanceId).then(function (res) {\n        //console.log(res)\n        _this.rows = res.data;\n      });\n    }\n  },\n  watch: {\n    processInstanceId: function processInstanceId(newValue, oldValue) {\n      console.log('==refresh======', this.currentRole());\n      this.refresh();\n    }\n  }\n};",null]}