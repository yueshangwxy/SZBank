{"remainingRequest":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\src\\views\\indicators\\result\\resultCheck.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\src\\views\\indicators\\result\\resultCheck.vue","mtime":1644369310617},{"path":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"C:/Users/Evicce/Desktop/\\u5DE5\\u4F5C/code2/indicator/Pncui-Indicator/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\nimport _createForOfIteratorHelper from \"C:/Users/Evicce/Desktop/\\u5DE5\\u4F5C/code2/indicator/Pncui-Indicator/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\n\nvar _methods;\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getCheckList, saveCheckData, deleteCheckData, getResultDepts as _getResultDepts } from '@/api/indicators/indResultSubscribe';\nimport qs from 'qs';\nimport CRUD, { presenter, header, form, crud } from '@crud/crud';\nimport rrOperation from '@crud/RR.operation';\nimport crudOperation from '@crud/CRUD.operation';\nimport pagination from '@crud/Pagination';\nimport crudIndAtomInfo, { getColumnByTabel, getDimensions, getGenAndDerivedInd, getAllInds, getGenInd, getTablesById, bizNameIsContract, approveDetailByBusinessKey, abolish, startProcess, delAtom, getHisList } from '@/api/indicators/indAtomInfo';\nimport Treeselect from '@riophae/vue-treeselect';\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css';\n\nString.prototype.replaceAll = function (s1, s2) {\n  return this.replace(new RegExp(s1, \"gm\"), s2);\n};\n\nvar defaultCrud = CRUD({\n  title: '指标加工结果校验',\n  url: 'v1/indicators/result/atom/getCheckList',\n  loading: true,\n  crudMethod: {\n    getCheckList: getCheckList\n  }\n});\nvar defaultForm = {\n  name: null,\n  checkData: null\n};\nexport default {\n  name: \"resultCheck\",\n  components: {\n    pagination: pagination,\n    crudOperation: crudOperation,\n    rrOperation: rrOperation,\n    Treeselect: Treeselect\n  },\n  mixins: [presenter(defaultCrud), header(), form(defaultForm), crud()],\n  dicts: ['IND_CURRENCY', 'IE_FREQUENCY'],\n  data: function data() {\n    var h = this.$createElement;\n    return {\n      permission: {\n        add: ['admin', 'resultCheck:add'],\n        edit: ['admin', 'resultCheck:edit'],\n        del: ['admin', 'resultCheck:del']\n      },\n      activeName: 'first',\n      showDetailDialog: false,\n      detailDialogTitle: '新增|编辑',\n      firstDisabled: false,\n      secondDisabled: false,\n      resultDepts: [],\n      checkForm: {\n        formulaOne: '',\n        formulaOneExp: '',\n        formulaTwo: '',\n        formulaTwoExp: '',\n        name: '',\n        code: ''\n      },\n      showIndDefRule: false,\n      value: [],\n      valueLable: [],\n      transferData: [],\n      renderFunc: function renderFunc(h, option) {\n        return h(\"span\", [option.label]);\n      },\n      genAndDerivedIndArr: [],\n      compareSymbolArr: [{\n        id: \"0\",\n        value: \">\"\n      }, {\n        id: \"1\",\n        value: \">=\"\n      }, {\n        id: \"2\",\n        value: \"<\"\n      }, {\n        id: \"3\",\n        value: \"<=\"\n      }, {\n        id: \"4\",\n        value: \"=\"\n      }, {\n        id: \"5\",\n        value: \"≠\"\n      }],\n      showIndDefRuleTwo: false,\n      valueTwo: [],\n      valueLableTwo: [],\n      valueFix: [],\n      valueLableFix: [],\n      showIndDefRuleFix: false,\n      fixRules: {\n        code: [{\n          required: true,\n          message: '指标不能为空',\n          trigger: 'blur'\n        }],\n        fixOrgCode: [{\n          required: true,\n          message: '机构不能为空',\n          trigger: 'blur'\n        }],\n        fixCurrency: [{\n          required: true,\n          message: '币种不能为空',\n          trigger: 'blur'\n        }],\n        fixIndFrequency: [{\n          required: true,\n          message: '指标频率不能为空',\n          trigger: 'blur'\n        }],\n        compareSymbol: [{\n          required: true,\n          message: '比较符不能为空',\n          trigger: 'blur'\n        }],\n        fixVal: [{\n          required: true,\n          message: '定量值是数值且不能为空',\n          trigger: 'blur'\n        }]\n      },\n      //是否显示错误信息\n      ruleTipShow: {\n        formulaOne: false,\n        formulaOrgCode: false,\n        formulaCurrency: false,\n        formulaIndFrequency: false,\n        formulaCompareSymbol: false,\n        formulaTwo: false\n      },\n      formulaRules: {\n        formulaOne: [{\n          required: true,\n          message: '计算公式不能为空',\n          trigger: 'blur'\n        }],\n        formulaOrgCode: [{\n          required: true,\n          message: '机构不能为空',\n          trigger: 'blur'\n        }],\n        formulaCurrency: [{\n          required: true,\n          message: '币种不能为空',\n          trigger: 'blur'\n        }],\n        formulaIndFrequency: [{\n          required: true,\n          message: '指标频率不能为空',\n          trigger: 'blur'\n        }],\n        formulaCompareSymbol: [{\n          required: true,\n          message: '比较符不能为空',\n          trigger: 'blur'\n        }],\n        formulaTwo: [{\n          required: true,\n          message: '计算公式不能为空',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    //this.crud.optShow.del=false\n    //this.crud.optShow.edit=false\n    //this.initDimInfos()\n    //this.initDimValuesChildren()\n    // this.initDimValues()\n    //this.initClassifications()\n    this.initGenAndDerivedInd(); //this.initIndFirstType()\n    //this.getDepts();\n\n    this.getResultDepts();\n    this.resetQuery();\n  },\n  methods: (_methods = {\n    resetQuery: function resetQuery() {\n      this.crud.resetQuery(false);\n      this.crud.refresh();\n    }\n  }, _defineProperty(_methods, CRUD.HOOK.beforeRefresh, function () {\n    this.crud.optShow.del = true;\n    this.crud.optShow.add = true;\n    this.crud.optShow.edit = true;\n    return true;\n  }), _defineProperty(_methods, CRUD.HOOK.beforeToAdd, function () {\n    this.showDetailDialog = true;\n    this.activeName = 'first';\n    this.firstDisabled = false;\n    this.secondDisabled = false;\n  }), _defineProperty(_methods, CRUD.HOOK.beforeToEdit, function () {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.$refs.fixForm.clearValidate();\n    });\n    /*this.$nextTick(() => {\n        this.$refs.formulaForm.clearValidate();\n    })*/\n\n    this.showDetailDialog = true;\n    this.valueLable = [];\n    this.valueLableTwo = [];\n\n    if (this.crud.selections[0].check_type == '0') {\n      //定量\n      this.activeName = 'first';\n      this.firstDisabled = false;\n      this.secondDisabled = true;\n      this.checkForm.checkType = this.crud.selections[0].check_type;\n      this.checkForm.id = this.crud.selections[0].id;\n      this.checkForm.code = this.crud.selections[0].ie_code;\n      this.checkForm.name = this.crud.selections[0].ie_name;\n      this.checkForm.compareSymbol = this.crud.selections[0].compare_symbol;\n      this.checkForm.fixVal = this.crud.selections[0].fix_val;\n      this.checkForm.fixCurrency = this.crud.selections[0].ind_currency;\n      this.checkForm.fixOrgCode = this.crud.selections[0].ind_dept_code;\n      this.checkForm.fixIndFrequency = this.crud.selections[0].ind_frequency;\n    } else if (this.crud.selections[0].check_type == '1') {\n      this.activeName = 'second';\n      this.firstDisabled = true;\n      this.secondDisabled = false;\n      this.checkForm.checkType = this.crud.selections[0].check_type;\n      this.checkForm.id = this.crud.selections[0].id; //this.checkForm.code = this.crud.selections[0].ie_code\n\n      this.checkForm.formulaOne = this.crud.selections[0].ie_name;\n      this.checkForm.formulaCompareSymbol = this.crud.selections[0].compare_symbol;\n      this.checkForm.formulaTwo = this.crud.selections[0].fix_val;\n      this.checkForm.formulaOneExp = this.crud.selections[0].formula_one_exp;\n      this.checkForm.formulaTwoExp = this.crud.selections[0].formula_two_exp;\n      this.checkForm.formulaCurrency = this.crud.selections[0].ind_currency;\n      this.checkForm.formulaOrgCode = this.crud.selections[0].ind_dept_code;\n      this.checkForm.formulaIndFrequency = this.crud.selections[0].ind_frequency;\n    }\n  }), _defineProperty(_methods, CRUD.HOOK.beforeDelete, function () {\n    var _this2 = this;\n\n    var selectIds = \"\";\n\n    var _iterator = _createForOfIteratorHelper(this.crud.selections),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var items = _step.value;\n\n        if (items.id != '') {\n          selectIds += items.id + \",\";\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    deleteCheckData(qs.stringify({\n      ids: selectIds\n    })).then(function (res) {\n      if (res.code == '0') {\n        _this2.$message({\n          type: 'success',\n          message: '操作成功 '\n        });\n      }\n\n      _this2.crud.refresh();\n    });\n    return false;\n  }), _defineProperty(_methods, \"closeApproveDetailDialog\", function closeApproveDetailDialog() {\n    this.showDetailDialog = false;\n    this.activeName = 'first';\n    this.checkForm = {};\n  }), _defineProperty(_methods, \"handleClick\", function handleClick(tab, event) {\n    console.log(\"=====\" + tab, event);\n  }), _defineProperty(_methods, \"saveCheckForm\", function saveCheckForm() {\n    var _this3 = this;\n\n    var checkParam = {};\n    checkParam.id = this.checkForm.id;\n\n    if (this.activeName == 'first') {\n      checkParam.code = this.checkForm.code;\n      checkParam.name = this.checkForm.name;\n      checkParam.compareSymbol = this.checkForm.compareSymbol;\n      checkParam.fixVal = this.checkForm.fixVal;\n      checkParam.checkType = '0';\n      checkParam.indDeptCode = this.checkForm.fixOrgCode;\n      checkParam.indCurrency = this.checkForm.fixCurrency;\n      checkParam.indFrequency = this.checkForm.fixIndFrequency;\n    } else {\n      checkParam.formulaOne = this.checkForm.formulaOne;\n      checkParam.formulaOneExp = this.checkForm.formulaOneExp;\n      checkParam.formulaTwo = this.checkForm.formulaTwo;\n      checkParam.formulaTwoExp = this.checkForm.formulaTwoExp;\n      checkParam.formulaCompareSymbol = this.checkForm.formulaCompareSymbol;\n      checkParam.checkType = '1';\n      checkParam.indDeptCode = this.checkForm.formulaOrgCode;\n      checkParam.indCurrency = this.checkForm.formulaCurrency;\n      checkParam.indFrequency = this.checkForm.formulaIndFrequency;\n    }\n\n    if (this.activeName == 'first') {\n      this.$refs[\"fixForm\"].validate(function (valid) {\n        if (!valid) {\n          return;\n        }\n\n        saveCheckData(qs.stringify(checkParam)).then(function (res) {\n          if (res.code == '0') {\n            _this3.$message({\n              type: 'success',\n              message: '操作成功 '\n            });\n          } else {\n            _this3.$message({\n              type: 'error',\n              message: '操作失败 ' + res.msg\n            });\n          }\n\n          _this3.closeApproveDetailDialog();\n\n          _this3.crud.refresh();\n        });\n      });\n    } else {\n      console.log(\"checkParam\", checkParam);\n      this.ruleTipShow = {\n        formulaOne: false,\n        formulaOrgCode: false,\n        formulaCurrency: false,\n        formulaIndFrequency: false,\n        formulaCompareSymbol: false,\n        formulaTwo: false\n      };\n      var flag = true; //校验是否通过\n\n      if (!checkParam.formulaOne) {\n        this.ruleTipShow.formulaOne = true;\n        flag = false;\n      }\n\n      if (!checkParam.indDeptCode) {\n        this.ruleTipShow.formulaOrgCode = true;\n        flag = false;\n      }\n\n      if (!checkParam.indCurrency) {\n        this.ruleTipShow.formulaCurrency = true;\n        flag = false;\n      }\n\n      if (!checkParam.indFrequency) {\n        this.ruleTipShow.formulaIndFrequency = true;\n        flag = false;\n      }\n\n      if (!checkParam.formulaCompareSymbol) {\n        this.ruleTipShow.formulaCompareSymbol = true;\n        flag = false;\n      }\n\n      if (!checkParam.formulaTwo) {\n        this.ruleTipShow.formulaTwo = true;\n        flag = false;\n      }\n\n      if (flag) {\n        //合规行校验\n        var formulaFlag = this.checkFormulaExp(checkParam.formulaOne);\n\n        if (!formulaFlag) {\n          this.$message({\n            type: 'error',\n            message: '计算公式1配置错误'\n          });\n          return;\n        }\n\n        checkParam.formulaOneExp = this.setFormulaExp(this.checkForm.formulaOne);\n\n        if (checkParam.formulaOneExp != null) {\n          if (checkParam.formulaOneExp.indexOf(\"[\") >= 0 || checkParam.formulaOneExp.indexOf(\"]\") >= 0) {\n            this.$message({\n              type: 'error',\n              message: '计算公式1指标名称不能修改'\n            });\n            return;\n          }\n\n          checkParam.formulaOneExp = checkParam.formulaOneExp.replaceAll(\"#\", \"[\");\n          checkParam.formulaOneExp = checkParam.formulaOneExp.replaceAll(\";\", \"]\");\n        } //计算公式2\n\n\n        var formulaFlagTwo = this.checkFormulaExp(checkParam.formulaTwo);\n\n        if (!formulaFlagTwo) {\n          this.$message({\n            type: 'error',\n            message: '计算公式2配置错误'\n          });\n          return;\n        }\n\n        checkParam.formulaTwoExp = this.setFormulaExp(this.checkForm.formulaTwo);\n\n        if (checkParam.formulaTwoExp != null) {\n          if (checkParam.formulaTwoExp.indexOf(\"[\") >= 0 || checkParam.formulaTwoExp.indexOf(\"]\") >= 0) {\n            this.$message({\n              type: 'error',\n              message: '计算公式2指标名称不能修改'\n            });\n            return;\n          }\n\n          checkParam.formulaTwoExp = checkParam.formulaTwoExp.replaceAll(\"#\", \"[\");\n          checkParam.formulaTwoExp = checkParam.formulaTwoExp.replaceAll(\";\", \"]\");\n        } //调用接口\n\n\n        saveCheckData(qs.stringify(checkParam)).then(function (res) {\n          if (res.code == '0') {\n            _this3.$message({\n              type: 'success',\n              message: '操作成功 '\n            });\n          } else {\n            _this3.$message({\n              type: 'error',\n              message: '操作失败 ' + res.msg\n            });\n          }\n\n          _this3.closeApproveDetailDialog();\n\n          _this3.crud.refresh();\n        });\n      } else {\n        return;\n      }\n    }\n  }), _defineProperty(_methods, \"onInput\", function onInput() {\n    this.$forceUpdate();\n  }), _defineProperty(_methods, \"clearFormulaOne\", function clearFormulaOne() {\n    this.checkForm.formulaOne = '';\n    this.checkForm.formulaOneExp = '';\n    this.$forceUpdate();\n  }), _defineProperty(_methods, \"indDefRulePlus\", function indDefRulePlus() {\n    if (this.checkForm.formulaOne == undefined || this.checkForm.formulaOne == null) {\n      this.checkForm.formulaOne = '';\n    }\n\n    if (this.checkForm.formulaOneExp == undefined || this.checkForm.formulaOneExp == null) {\n      this.checkForm.formulaOneExp = '';\n    }\n\n    this.checkForm.formulaOne += ' + '; //this.checkForm.formulaOneExp += ' + '\n\n    this.$forceUpdate();\n  }), _defineProperty(_methods, \"indDefRuleSubtraction\", function indDefRuleSubtraction() {\n    if (this.checkForm.formulaOne == undefined || this.checkForm.formulaOne == null) {\n      this.checkForm.formulaOne = '';\n    }\n\n    if (this.checkForm.formulaOneExp == undefined || this.checkForm.formulaOneExp == null) {\n      this.checkForm.formulaOneExp = '';\n    }\n\n    this.checkForm.formulaOne += ' - '; // this.checkForm.formulaOneExp += ' - '\n\n    this.$forceUpdate();\n  }), _defineProperty(_methods, \"indDefRuleMultiplication\", function indDefRuleMultiplication() {\n    if (this.checkForm.formulaOne == undefined || this.checkForm.formulaOne == null) {\n      this.checkForm.formulaOne = '';\n    }\n\n    if (this.checkForm.formulaOneExp == undefined || this.checkForm.formulaOneExp == null) {\n      this.checkForm.formulaOneExp = '';\n    }\n\n    this.checkForm.formulaOne += ' * '; //  this.checkForm.formulaOneExp += ' * '\n\n    this.$forceUpdate();\n  }), _defineProperty(_methods, \"indDefRuleDivision\", function indDefRuleDivision() {\n    if (this.checkForm.formulaOne == undefined || this.checkForm.formulaOne == null) {\n      this.checkForm.formulaOne = '';\n    }\n\n    if (this.checkForm.formulaOneExp == undefined || this.checkForm.formulaOneExp == null) {\n      this.checkForm.formulaOneExp = '';\n    }\n\n    this.checkForm.formulaOne += ' / '; //  this.checkForm.formulaOneExp += ' / '\n\n    this.$forceUpdate();\n  }), _defineProperty(_methods, \"indDefRuleLP\", function indDefRuleLP() {\n    if (this.checkForm.formulaOne == undefined || this.checkForm.formulaOne == null) {\n      this.checkForm.formulaOne = '';\n    }\n\n    if (this.checkForm.formulaOneExp == undefined || this.checkForm.formulaOneExp == null) {\n      this.checkForm.formulaOneExp = '';\n    }\n\n    this.checkForm.formulaOne += ' ( '; //    this.checkForm.formulaOneExp += ' ( '\n\n    this.$forceUpdate();\n  }), _defineProperty(_methods, \"indDefRuleRP\", function indDefRuleRP() {\n    if (this.checkForm.formulaOne == undefined || this.checkForm.formulaOne == null) {\n      this.checkForm.formulaOne = '';\n    }\n\n    if (this.checkForm.formulaOneExp == undefined || this.checkForm.formulaOneExp == null) {\n      this.checkForm.formulaOneExp = '';\n    }\n\n    this.checkForm.formulaOne += ' ) '; //    this.checkForm.formulaOneExp += ' ) '\n\n    this.$forceUpdate();\n  }), _defineProperty(_methods, \"showIndDefRuleDialog\", function showIndDefRuleDialog() {\n    // this.formulaOneExp = ''\n    this.value = [];\n    this.showIndDefRule = true;\n  }), _defineProperty(_methods, \"closeIndDefRuleDialog\", function closeIndDefRuleDialog() {\n    this.showIndDefRule = false;\n  }), _defineProperty(_methods, \"handleChange\", function handleChange(value, direction, movedKeys) {\n    var _this4 = this;\n\n    // valueLable\n    //this.transferData[0].label\n    this.valueLable = [];\n    this.value.map(function (item) {\n      var targetObj = _this4.transferData.filter(function (itemObj) {\n        return itemObj.key == item;\n      });\n\n      _this4.valueLable.push(targetObj[0].label);\n    });\n  }), _defineProperty(_methods, \"initGenAndDerivedInd\", function initGenAndDerivedInd() {\n    var _this5 = this;\n\n    getAllInds().then(function (data) {\n      _this5.genAndDerivedIndArr = data.data;\n\n      for (var i = 0; i < _this5.genAndDerivedIndArr.length; i++) {\n        _this5.transferData.push({\n          key: _this5.genAndDerivedIndArr[i].bizCode,\n          label: _this5.genAndDerivedIndArr[i].bizName\n        });\n      }\n    });\n  }), _defineProperty(_methods, \"selectInd\", function selectInd() {\n    /*if (this.checkForm.formulaOne == undefined || this.checkForm.formulaOne == null) {\n        this.checkForm.formulaOne = '';\n    }*/\n\n    /*if (this.checkForm.formulaOneExp == undefined || this.checkForm.formulaOneExp == null) {\n        this.checkForm.formulaOneExp = '';\n    }*/\n\n    /*if (this.valueLable.length > 0 ) {\n        this.checkForm.formulaOne += ' [' + this.valueLable[0] + '] '\n    }*/\n    if (this.checkForm.formulaOne == undefined || this.checkForm.formulaOne == null) {\n      this.checkForm.formulaOne = '';\n    }\n\n    if (this.checkForm.formulaOneExp == undefined || this.checkForm.formulaOneExp == null) {\n      this.checkForm.formulaOneExp = '';\n    }\n\n    if (this.value.length > 0) {\n      for (var i = 0; i < this.value.length; i++) {\n        var name = ' [' + this.valueLable[i] + '] ';\n        var code = ' [' + this.value[i] + '] ';\n        this.checkForm.formulaOne += name;\n      } //this.checkForm.formulaOneExp += ' [' + this.value[0] + '] '\n\n    }\n\n    this.showIndDefRule = false;\n  }), _defineProperty(_methods, \"clearFormulaTwo\", function clearFormulaTwo() {\n    this.checkForm.formulaTwo = '';\n    this.checkForm.formulaTwoExp = '';\n    this.$forceUpdate();\n  }), _defineProperty(_methods, \"indDefRulePlusTwo\", function indDefRulePlusTwo() {\n    if (this.checkForm.formulaTwo == undefined || this.checkForm.formulaTwo == null) {\n      this.checkForm.formulaTwo = '';\n    }\n\n    if (this.checkForm.formulaTwoExp == undefined || this.checkForm.formulaTwoExp == null) {\n      this.checkForm.formulaTwoExp = '';\n    }\n\n    this.checkForm.formulaTwo += ' + ';\n    this.checkForm.formulaTwoExp += ' + ';\n    this.$forceUpdate();\n  }), _defineProperty(_methods, \"indDefRuleSubtractionTwo\", function indDefRuleSubtractionTwo() {\n    if (this.checkForm.formulaTwo == undefined || this.checkForm.formulaTwo == null) {\n      this.checkForm.formulaTwo = '';\n    }\n\n    if (this.checkForm.formulaTwoExp == undefined || this.checkForm.formulaTwoExp == null) {\n      this.checkForm.formulaTwoExp = '';\n    }\n\n    this.checkForm.formulaTwo += ' - ';\n    this.checkForm.formulaTwoExp += ' - ';\n    this.$forceUpdate();\n  }), _defineProperty(_methods, \"indDefRuleMultiplicationTwo\", function indDefRuleMultiplicationTwo() {\n    if (this.checkForm.formulaTwo == undefined || this.checkForm.formulaTwo == null) {\n      this.checkForm.formulaTwo = '';\n    }\n\n    if (this.checkForm.formulaTwoExp == undefined || this.checkForm.formulaTwoExp == null) {\n      this.checkForm.formulaTwoExp = '';\n    }\n\n    this.checkForm.formulaTwo += ' * ';\n    this.checkForm.formulaTwoExp += ' * ';\n    this.$forceUpdate();\n  }), _defineProperty(_methods, \"indDefRuleDivisionTwo\", function indDefRuleDivisionTwo() {\n    if (this.checkForm.formulaTwo == undefined || this.checkForm.formulaTwo == null) {\n      this.checkForm.formulaTwo = '';\n    }\n\n    if (this.checkForm.formulaTwoExp == undefined || this.checkForm.formulaTwoExp == null) {\n      this.checkForm.formulaTwoExp = '';\n    }\n\n    this.checkForm.formulaTwo += ' / ';\n    this.checkForm.formulaTwoExp += ' / ';\n    this.$forceUpdate();\n  }), _defineProperty(_methods, \"indDefRuleLPTwo\", function indDefRuleLPTwo() {\n    if (this.checkForm.formulaTwo == undefined || this.checkForm.formulaTwo == null) {\n      this.checkForm.formulaTwo = '';\n    }\n\n    if (this.checkForm.formulaTwoExp == undefined || this.checkForm.formulaTwoExp == null) {\n      this.checkForm.formulaTwoExp = '';\n    }\n\n    this.checkForm.formulaTwo += ' ( ';\n    this.checkForm.formulaTwoExp += ' ( ';\n    this.$forceUpdate();\n  }), _defineProperty(_methods, \"indDefRuleRPTwo\", function indDefRuleRPTwo() {\n    if (this.checkForm.formulaTwo == undefined || this.checkForm.formulaTwo == null) {\n      this.checkForm.formulaTwo = '';\n    }\n\n    if (this.checkForm.formulaTwoExp == undefined || this.checkForm.formulaTwoExp == null) {\n      this.checkForm.formulaTwoExp = '';\n    }\n\n    this.checkForm.formulaTwo += ' ) ';\n    this.checkForm.formulaTwoExp += ' ) ';\n    this.$forceUpdate();\n  }), _defineProperty(_methods, \"showIndDefRuleDialogTwo\", function showIndDefRuleDialogTwo() {\n    // this.formulaOneExp = ''\n    this.valueTwo = [];\n    this.showIndDefRuleTwo = true;\n  }), _defineProperty(_methods, \"closeIndDefRuleDialogTwo\", function closeIndDefRuleDialogTwo() {\n    this.showIndDefRuleTwo = false;\n  }), _defineProperty(_methods, \"handleChangeTwo\", function handleChangeTwo(value, direction, movedKeys) {\n    var _this6 = this;\n\n    // valueLable\n    //this.transferData[0].label\n    this.valueLableTwo = [];\n    this.valueTwo.map(function (item) {\n      var targetObj = _this6.transferData.filter(function (itemObj) {\n        return itemObj.key == item;\n      });\n\n      _this6.valueLableTwo.push(targetObj[0].label);\n    });\n  }), _defineProperty(_methods, \"selectIndTwo\", function selectIndTwo() {\n    if (this.checkForm.formulaTwo == undefined || this.checkForm.formulaTwo == null) {\n      this.checkForm.formulaTwo = '';\n    }\n\n    if (this.checkForm.formulaTwoExp == undefined || this.checkForm.formulaTwoExp == null) {\n      this.checkForm.formulaTwoExp = '';\n    }\n\n    if (this.valueTwo.length > 0) {\n      for (var i = 0; i < this.valueTwo.length; i++) {\n        var name = ' [' + this.valueLableTwo[i] + '] ';\n        var code = ' [' + this.valueTwo[i] + '] ';\n        this.checkForm.formulaTwo += name;\n      }\n    }\n\n    this.showIndDefRuleTwo = false;\n  }), _defineProperty(_methods, \"showIndDefRuleDialogFix\", function showIndDefRuleDialogFix() {\n    // this.formulaOneExp = ''\n    this.valueFix = [];\n    this.showIndDefRuleFix = true;\n  }), _defineProperty(_methods, \"closeIndDefRuleDialogFix\", function closeIndDefRuleDialogFix() {\n    this.showIndDefRuleFix = false;\n  }), _defineProperty(_methods, \"handleChangeFix\", function handleChangeFix(value, direction, movedKeys) {\n    var _this7 = this;\n\n    //this.transferData[0].label\n    this.valueLableFix = [];\n    this.valueFix.map(function (item) {\n      var targetObj = _this7.transferData.filter(function (itemObj) {\n        return itemObj.key == item;\n      });\n\n      _this7.valueLableFix.push(targetObj[0].label);\n    });\n  }), _defineProperty(_methods, \"selectIndFix\", function selectIndFix() {\n    if (this.valueFix.length > 0) {\n      this.checkForm.name = ' [' + this.valueLableFix[0] + '] ';\n      this.checkForm.code = this.valueFix[0];\n    }\n\n    this.showIndDefRuleFix = false;\n  }), _defineProperty(_methods, \"selectFixInd\", function selectFixInd(id) {\n    var targetObj = this.transferData.filter(function (itemObj) {\n      return itemObj.key == id;\n    });\n    this.checkForm.name = targetObj[0].label;\n  }), _defineProperty(_methods, \"getResultDepts\", function getResultDepts() {\n    var _this8 = this;\n\n    _getResultDepts().then(function (res) {\n      _this8.resultDepts = res.content;\n    });\n  }), _defineProperty(_methods, \"checkFormulaExp\", function checkFormulaExp(formulaStr) {\n    //公式前端校验\n    var formulaTmp = formulaStr.replaceAll(\" \", \"\");\n\n    do {\n      if (formulaTmp.lastIndexOf(\"]\") < formulaTmp.length - 1) {\n        var suf = formulaTmp.charAt(formulaTmp.lastIndexOf(\"]\") + 1);\n\n        if (suf != '+' && suf != '-' && suf != '*' && suf != '/' && suf != ')') {\n          return false;\n        }\n      }\n\n      if (formulaTmp.lastIndexOf(\"[\") > 0) {\n        var pre = formulaTmp.charAt(formulaTmp.lastIndexOf(\"[\") - 1);\n\n        if (pre != '+' && pre != '-' && pre != '*' && pre != '/' && pre != '(') {\n          return false;\n        }\n      }\n\n      formulaTmp = formulaTmp.replace(formulaTmp.substring(formulaTmp.lastIndexOf(\"[\"), formulaTmp.lastIndexOf(\"]\") + 1), \"1\");\n    } while (formulaTmp.lastIndexOf(\"]\") > 0);\n\n    return true;\n  }), _defineProperty(_methods, \"setFormulaExp\", function setFormulaExp(formulaStr) {\n    var formulaExp = formulaStr;\n\n    do {\n      var pre = formulaExp.lastIndexOf(\"[\");\n      var suf = formulaExp.lastIndexOf(\"]\"); //指标名称\n\n      var indName = formulaExp.substring(pre, suf + 1);\n      var indCode = ''; //指标编码\n\n      var targetObj = this.transferData.filter(function (itemObj) {\n        return indName.indexOf(itemObj.label) >= 0;\n      });\n\n      if (targetObj[0] == null) {\n        return '[]';\n      }\n\n      indCode = targetObj[0].key;\n      formulaExp = formulaExp.replace(indName, '#' + indCode + ';');\n    } while (formulaExp.lastIndexOf(\"]\") > 0);\n\n    return formulaExp;\n  }), _methods)\n};",null]}