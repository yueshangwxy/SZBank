{"remainingRequest":"D:\\SZBank\\node_modules\\babel-loader\\lib\\index.js!D:\\SZBank\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\SZBank\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\SZBank\\node_modules\\eladmin-system\\src\\views\\system\\dept\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\SZBank\\node_modules\\eladmin-system\\src\\views\\system\\dept\\index.vue","mtime":1650418877002},{"path":"D:\\SZBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\SZBank\\node_modules\\babel-loader\\lib\\index.js","mtime":1650418872733},{"path":"D:\\SZBank\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650418873221},{"path":"D:\\SZBank\\node_modules\\vue-loader\\lib\\index.js","mtime":1650418886580}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/SZBank/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof = require(\"D:/SZBank/node_modules/@babel/runtime/helpers/typeof\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.weak-map\");\n\nrequire(\"core-js/modules/es7.object.get-own-property-descriptors\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _defineProperty2 = _interopRequireDefault(require(\"D:/SZBank/node_modules/@babel/runtime/helpers/defineProperty\"));\n\nvar _dept = _interopRequireDefault(require(\"../../../api/system/dept\"));\n\nvar _qs = _interopRequireDefault(require(\"qs\"));\n\nvar _vueTreeselect = _interopRequireDefault(require(\"@riophae/vue-treeselect\"));\n\nrequire(\"@riophae/vue-treeselect/dist/vue-treeselect.css\");\n\nvar _crud = _interopRequireWildcard(require(\"@crud/crud\"));\n\nvar _RR = _interopRequireDefault(require(\"@crud/RR.operation\"));\n\nvar _CRUD = _interopRequireDefault(require(\"@crud/CRUD.operation\"));\n\nvar _UD = _interopRequireDefault(require(\"@crud/UD.operation\"));\n\nvar _methods;\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n// crud交由presenter持有\nvar defaultCrud = (0, _crud.default)({\n  title: '机构',\n  url: 'system/dept/queryDepts',\n  crudMethod: _objectSpread({}, _dept.default)\n});\nvar defaultForm = {\n  id: null,\n  name: null,\n  pid: 1,\n  enabled: 'true',\n  code: null,\n  bussCode: null,\n  bussName: null\n};\nvar _default = {\n  name: 'Dept',\n  components: {\n    Treeselect: _vueTreeselect.default,\n    crudOperation: _CRUD.default,\n    rrOperation: _RR.default,\n    udOperation: _UD.default\n  },\n  mixins: [(0, _crud.presenter)(defaultCrud), (0, _crud.header)(), (0, _crud.form)(defaultForm), (0, _crud.crud)()],\n  // 设置数据字典\n  dicts: ['dept_status', 'DEPT_CATEGORY'],\n  data: function data() {\n    return {\n      expands: ['1'],\n      depts: [],\n      dbpdata: {\n        id: null,\n        name: null,\n        thirdPath: null,\n        defaultApproveUser: null\n      },\n      dbpconfigTitle: '机构配置',\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入名称',\n          trigger: 'blur'\n        }],\n        id: [{\n          required: true,\n          message: '请输入编号',\n          trigger: 'blur'\n        }]\n      },\n      permission: {\n        add: ['admin', 'dept:add'],\n        edit: ['admin', 'dept:edit'],\n        del: ['admin', 'dept:del']\n      },\n      enabledTypeOptions: [{\n        key: '1',\n        display_name: '启用'\n      }, {\n        key: '0',\n        display_name: '停用'\n      }],\n      dbpconfigStatus: false,\n      submitConfigStatus: 1,\n      deptUsers: []\n    };\n  },\n  created: function created() {\n    this.resetQuery();\n  },\n  methods: (_methods = {\n    resetQuery: function resetQuery() {\n      this.crud.resetQuery(false);\n      this.crud.refresh();\n    },\n    getRowKeys: function getRowKeys(row) {\n      return row.id;\n    }\n  }, (0, _defineProperty2.default)(_methods, _crud.default.HOOK.afterToCU, function (crud, form) {\n    var _this = this;\n\n    form.enabled = \"\".concat(form.enabled); // 获取所有部门\n\n    _dept.default.getDepts({\n      enabled: true\n    }).then(function (res) {\n      _this.depts = res.content;\n    });\n  }), (0, _defineProperty2.default)(_methods, _crud.default.HOOK.beforeToDetail, function (crud, form) {\n    form.enabled = \"\".concat(form.enabled); // 获取所有部门\n\n    /*crudDept.getDepts({enabled: true}).then(res => {\r\n      this.depts = res.content\r\n    })*/\n  }), (0, _defineProperty2.default)(_methods, _crud.default.HOOK.afterValidateCU, function () {\n    if (!this.form.pid && this.form.id !== 1) {\n      this.$message({\n        message: '上级部门不能为空',\n        type: 'warning'\n      });\n      return false;\n    }\n\n    return true;\n  }), (0, _defineProperty2.default)(_methods, \"changeEnabled\", function changeEnabled(data, val) {\n    var _this2 = this;\n\n    this.$confirm('此操作将 \"' + this.dict.label.dept_status[val] + '\" ' + data.name + '部门, 是否继续？', '提示', {\n      confirmButtonText: '确定',\n      cancelButtonText: '取消',\n      type: 'warning'\n    }).then(function () {\n      _dept.default.edit(data).then(function (res) {\n        _this2.crud.notify(_this2.dict.label.dept_status[val] + '成功', _crud.default.NOTIFICATION_TYPE.SUCCESS);\n      }).catch(function (err) {\n        data.enabled = !data.enabled;\n        console.log(err.response.data.message);\n      });\n    }).catch(function () {\n      data.enabled = !data.enabled;\n    });\n  }), (0, _defineProperty2.default)(_methods, \"checkboxT\", function checkboxT(row, rowIndex) {\n    return row.id !== 1;\n  }), (0, _defineProperty2.default)(_methods, \"configDbpPath\", function configDbpPath(row) {\n    var _this3 = this;\n\n    //this.getDeptUser(row.id);\n    defaultCrud.crudMethod.getDeptUser(_qs.default.stringify({\n      deptId: row.id\n    })).then(function (res) {\n      _this3.deptUsers = res.data;\n      console.log(\"configDbpPath   \" + row.name);\n      _this3.dbpdata.id = row.id;\n      _this3.dbpdata.name = row.name;\n      _this3.dbpdata.thirdPath = row.dbpPath;\n      _this3.dbpdata.defaultApproveUser = row.defaultApproveUserList;\n      _this3.dbpconfigStatus = true;\n    });\n  }), (0, _defineProperty2.default)(_methods, \"submitConfig\", function submitConfig(dbpdata) {\n    var _this4 = this;\n\n    this.submitConfigStatus = 2;\n    console.log(\"submitConfig  id:  \" + dbpdata.id + \",thirdPath: \" + dbpdata.thirdPath);\n    var formData = {};\n    formData.deptId = dbpdata.id;\n    formData.deptName = dbpdata.name;\n    /*if(!dbpdata.thirdPath){\r\n      this.$message({\r\n        message: '请输入DBP路径',\r\n        type: 'warning'\r\n      })\r\n      this.submitConfigStatus = 1\r\n      return false;\r\n    }*/\n\n    formData.thirdPath = dbpdata.thirdPath;\n    formData.defaultApproveUser = dbpdata.defaultApproveUser != null ? dbpdata.defaultApproveUser.toString() : null;\n    defaultCrud.crudMethod.configDbp(formData).then(function (res) {\n      console.log(\"submitConfig res : \" + res);\n      defaultCrud.notify(res, _crud.default.NOTIFICATION_TYPE.SUCCESS);\n      _this4.dbpconfigStatus = false;\n      _this4.submitConfigStatus = 1;\n      defaultCrud.toQuery();\n    });\n  }), (0, _defineProperty2.default)(_methods, \"cancelConfig\", function cancelConfig() {\n    this.dbpconfigStatus = false;\n    this.submitConfigStatus = 1;\n  }), _methods)\n};\nexports.default = _default;",null]}