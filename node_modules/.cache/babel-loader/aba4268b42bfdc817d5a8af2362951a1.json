{"remainingRequest":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\src\\utils\\request.js","dependencies":[{"path":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\src\\utils\\request.js","mtime":1644369310580},{"path":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Evicce\\Desktop\\工作\\code2\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport axios from 'axios';\nimport router from '@/router/routers';\nimport { Notification, MessageBox } from 'element-ui';\nimport store from '@/store';\nimport { getToken, getCurrentRole } from \"./auth\";\nimport Config from '@public/config/settings'; // 创建axios实例\n\nvar service = axios.create({\n  baseURL: process.env.NODE_ENV === 'production' ? process.env.VUE_APP_BASE_API : '/api',\n  // api 的 base_url\n  //baseURL: process.env.VUE_APP_BASE_API === '' ? '/' : process.env.VUE_APP_BASE_API, // api 的 base_url\n  timeout: Config.timeout,\n  // 请求超时时间\n  withCredentials: true\n}); // request拦截器\n\nservice.interceptors.request.use(function (config) {\n  if (getToken()) {\n    config.headers['Authorization'] = getToken(); // 让每个请求携带自定义token 请根据实际情况自行修改\n  }\n\n  config.headers['Content-Type'] = 'application/json'; // console.log('========request.use=========>', store.state.user.user.currentRole)\n\n  var path = window.location.href.replace(window.location.origin, '').replace('/#', '');\n  config.headers['client-page'] = path;\n\n  try {\n    if (getCurrentRole()) {\n      config.headers['current-roleid'] = getCurrentRole().id;\n    }\n  } catch (e) {}\n\n  return config;\n}, function (error) {\n  // Do something with request error\n  console.log(error); // for debug\n\n  Promise.reject(error);\n}); // response 拦截器\n\nservice.interceptors.response.use(function (response) {\n  var code = response.status;\n\n  if (code < 200 || code > 300) {\n    Notification.error({\n      title: response.message\n    });\n    return Promise.reject('error');\n  } else {\n    return response.data;\n  }\n}, function (error) {\n  var code = 0;\n  var msg = '';\n\n  try {\n    code = error.response.data.status;\n    msg = error.response.data.message;\n  } catch (e) {\n    if (error.toString().indexOf('Error: timeout') !== -1) {\n      Notification.error({\n        title: '网络请求超时',\n        duration: 5000\n      });\n      return Promise.reject(error);\n    }\n  }\n\n  if (code) {\n    if (code === 401) {\n      MessageBox.confirm('登录状态已过期，您可以继续留在该页面，或者重新登录', '系统提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        store.dispatch('LogOut').then(function () {\n          location.reload(); // 为了重新实例化vue-router对象 避免bug\n        });\n      });\n    } else if (code === 403) {\n      router.push({\n        path: '/401'\n      });\n    } else {\n      var errorMsg = error.response.data.message;\n\n      if (errorMsg !== undefined) {\n        Notification.error({\n          title: errorMsg,\n          duration: 5000\n        });\n      }\n    }\n  } else {\n    Notification.error({\n      title: '接口请求失败',\n      duration: 5000\n    });\n  }\n\n  return Promise.reject(error);\n});\nexport default service;",null]}