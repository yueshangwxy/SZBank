{"remainingRequest":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js!F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\code\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\code\\indicator\\Pncui-Indicator\\node_modules\\eladmin-system\\src\\views\\system\\dict\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\eladmin-system\\src\\views\\system\\dict\\index.vue","mtime":1641455808139},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _objectSpread from \"F:/code/indicator/Pncui-Indicator/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport crud, { beforeSubmitMethod } from '@eladmin/mixins/crud';\nimport dictDetail from \"./dictDetail\";\nimport crudDict, { getDicts } from \"../../../api/system/dict\";\nexport default {\n  name: 'Dict',\n  components: {\n    dictDetail: dictDetail\n  },\n  mixins: [crud],\n  data: function data() {\n    return {\n      title: '参数',\n      allDate: [],\n      crudMethod: _objectSpread({}, crudDict),\n      queryTypeOptions: [{\n        key: 'name',\n        display_name: '参数名称'\n      }, {\n        key: 'remark',\n        display_name: '描述'\n      }],\n      form: {\n        id: null,\n        name: null,\n        remark: null\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入名称',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.init();\n    });\n  },\n  methods: {\n    // 获取数据前设置好接口地址\n    beforeInit: function beforeInit() {\n      this.url = 'api/dict';\n\n      if (this.$refs.dictDetail) {\n        this.$refs.dictDetail.data = [];\n        this.$refs.dictDetail.dictName = '';\n      }\n\n      return true;\n    },\n    beforeSubmitMethod: function beforeSubmitMethod() {\n      if (this.form.id) {\n        for (var j = 0; j < Object.keys(this.allDate).length; j++) {\n          if (this.form.id == this.allDate[j].id) {\n            this.allDate.splice(j, 1);\n            break;\n          }\n        }\n      }\n\n      for (var i = 0; i < Object.keys(this.allDate).length; i++) {\n        if (this.form.name == this.allDate[i].name) {\n          this.$message({\n            message: '参数名称不可以重复！',\n            type: 'error'\n          });\n          return false;\n        }\n      }\n\n      return true;\n    },\n    afterEditMethod: function afterEditMethod() {\n      var _this2 = this;\n\n      getDicts().then(function (data) {\n        _this2.allDate = data;\n      });\n    },\n    afterDelMethod: function afterDelMethod() {\n      var _this3 = this;\n\n      getDicts().then(function (data) {\n        _this3.allDate = data;\n      });\n    },\n    // 选中参数后，设置参数详情数据\n    handleCurrentChange: function handleCurrentChange(val) {\n      if (val) {\n        this.$refs.dictDetail.dictName = val.name;\n        this.$refs.dictDetail.form.dict.id = val.id;\n        this.$refs.dictDetail.init();\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this4 = this;\n\n    getDicts().then(function (data) {\n      _this4.allDate = data;\n    });\n  }\n};",null]}