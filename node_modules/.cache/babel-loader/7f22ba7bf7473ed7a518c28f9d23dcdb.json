{"remainingRequest":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js!F:\\code\\indicator\\Pncui-Indicator\\src\\router\\index.js","dependencies":[{"path":"F:\\code\\indicator\\Pncui-Indicator\\src\\router\\index.js","mtime":1638500591199},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\code\\indicator\\Pncui-Indicator\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":["import _objectSpread from \"F:/code/indicator/Pncui-Indicator/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport \"core-js/modules/es6.string.starts-with\";\nimport router from \"./routers\";\nimport store from \"../store\";\nimport Config from '@public/config/settings';\nimport NProgress from 'nprogress'; // progress bar\n\nimport 'nprogress/nprogress.css'; // progress bar style\n\nimport { getToken, getCurrentRole } from '@eladmin/utils/auth'; // getToken from cookie\n\nimport { buildMenus } from '@eladmin/api/system/menu';\nimport { filterAsyncRouter } from \"./routers\";\nNProgress.configure({\n  showSpinner: false\n}); // NProgress Configuration\n\nvar whiteList = ['/login', '/sso/login']; // no redirect whitelist\n\nrouter.beforeEach(function (to, from, next) {\n  // console.debug('==15===router foreache>',from, to,next)\n  if (to.meta.title) {\n    document.title = to.meta.title + ' - ' + Config.title;\n  }\n\n  NProgress.start();\n\n  if (getToken()) {\n    // console.debug('==21===router foreache>', to)\n    // 已登录且要跳转的页面是登录页\n    if (to.path === '/login') {\n      next({\n        path: '/'\n      });\n      NProgress.done();\n    } else {\n      // console.debug('==27===router foreache>', to, store.getters.loadMenus, store.getters.authorizes)\n      if (store.getters.authorizes.length === 0) {\n        // 判断当前用户是否已拉取完user_info信息\n        store.dispatch('GetInfo').then(function (res) {\n          // 拉取user_info\n          // 动态路由，拉取菜单\n          loadMenus(next, to);\n        }).catch(function (err) {\n          console.log(err);\n          store.dispatch('LogOut').then(function () {\n            location.reload(); // 为了重新实例化vue-router对象 避免bug\n          });\n        }); // 登录时未拉取 菜单，在此处拉取\n      } else if (store.getters.loadMenus) {\n        // 修改成false，防止死循环\n        store.dispatch('updateLoadMenus').then(function (res) {});\n        loadMenus(next, to);\n      } else {\n        next();\n      }\n    }\n  } else {\n    console.debug('==49===router foreache>', to);\n    /* has no token*/\n\n    if (whiteList.indexOf(to.path) !== -1 || to.path.startsWith('/assets')) {\n      // 在免登录白名单，直接进入\n      next();\n    } else {\n      //next(`/login?redirect=${to.fullPath || to.path}`) // 否则全部重定向到登录页\n      next(\"/login\"); // 否则全部重定向到登录页\n\n      NProgress.done();\n    }\n  }\n});\nexport var loadMenus = function loadMenus(next, to) {\n  var roleId = '';\n  console.log('-----loadMenus getCurrentRole()>>>', getCurrentRole());\n\n  if (getCurrentRole() && getCurrentRole().id) {\n    roleId = getCurrentRole().id;\n  }\n\n  buildMenus(roleId).then(function (res) {\n    console.log('-----loadMenus>>>', res);\n    var asyncRouter = filterAsyncRouter(res.menu);\n    debugger;\n    store.commit('SET_AUTHORIZES', res.authorities);\n    asyncRouter.push({\n      path: '*',\n      redirect: '/404',\n      hidden: true\n    });\n    store.dispatch('GenerateRoutes', asyncRouter).then(function () {\n      // 存储路由\n      router.addRoutes(asyncRouter); // 动态添加可访问路由表\n\n      if (to.path === '/404' && to.redirectedFrom === '/refresh') {\n        next({\n          path: '/'\n        });\n      } else {\n        next(_objectSpread(_objectSpread({}, to), {}, {\n          replace: true\n        }));\n      }\n    });\n  });\n  /*} else {\r\n    next({ path: '/login' })\r\n  }*/\n};\nrouter.afterEach(function () {\n  NProgress.done(); // finish progress bar\n});",null]}