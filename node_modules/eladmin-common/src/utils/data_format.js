// const moment = require('moment')
const accounting = require('accounting')
const dayjs = require('dayjs')

export function dateColumnFormat(row, column, cellValue, index) {
  // console.log('===========4444=================', cellValue)
  if (cellValue != null) {
    return dayjs(cellValue).format('YYYY-MM-DD')
  } else {
    return ''
  }
  // return moment(row.crtDate).format('YYYY-MM-DD HH:mm:ss');
}

export function timeColumnFormat(row, column, cellValue, index) {
  // console.log('===========55=================', cellValue)
  if (cellValue != null) {
    return dayjs(cellValue).format('YYYY-MM-DD HH:mm:ss')
  } else {
    return ''
  }
  // return moment(row.crtDate).format('YYYY-MM-DD HH:mm:ss');
}

export function dateFormat(cellValue, format) {
  if (cellValue != null) {
    return dayjs(cellValue).format(format)
  } else {
    return ''
  }
  // return moment(row.crtDate).format('YYYY-MM-DD HH:mm:ss');
}

export function getYesterday(days, format) {
  let d = days
  if (!d) {
    d = 1
  }
  if (format != null) {
    return dayjs().add((0 - d), 'days').format(format)
  } else {
    return dayjs().add((0 - d), 'days').format('YYYYMMDD')
  }
}

export function numberColumnFormat(row, column, cellValue, index) {
  // console.log('===========4444=================', cellValue)
  if (cellValue != null) {
    return accounting.formatNumber(cellValue, 2)
  } else {
    return ''
  }
}

export function intColumnFormat(row, column, cellValue, index) {
  // console.log('===========4444=================', cellValue)
  if (cellValue != null) {
    return accounting.formatNumber(cellValue,)
  } else {
    return ''
  }
}

export default { dateColumnFormat, timeColumnFormat, dateFormat, numberColumnFormat, intColumnFormat }
