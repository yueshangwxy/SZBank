import Cookies from 'js-cookie'
import Config from '@public/config/settings'

const TokenKey = Config.TokenKey

export function getToken() {
  return Cookies.get(TokenKey)
}

export function setToken(token, rememberMe) {
  if (rememberMe) {
    return Cookies.set(TokenKey, token, { expires: Config.tokenCookieExpires })
  } else {
    return Cookies.set(TokenKey, token)
  }
}

export function removeToken() {
  return Cookies.remove(TokenKey)
}

export function getCurrentRole() {
  const role = Cookies.get('_current.role')
  if (role && typeof role === 'string') {
    return JSON.parse(role)
  }
  return {}
}

export function setCurrentRole(currentRole) {
  // console.debug('======setCurrentRole=======', currentRole)
  if (currentRole) {
    return Cookies.set('_current.role', JSON.stringify(currentRole))
  }
}

export function removeCurrentRole() {
  return Cookies.remove('_current.role')
}

export function getTheme() {
  const theme = Cookies.get('_current.theme')
  if (theme && typeof theme === 'string') {
    return JSON.parse(theme)
  }
  return Config.defaultTheme
}

export function setTheme(theme) {
  //console.debug('======set theme=======', theme)
  if (theme) {
    return Cookies.set('_current.theme', JSON.stringify(theme))
  }
}

export function removeTheme() {
  return Cookies.remove('_current.theme')
}


export function getStyle() {
  const theme = Cookies.get('_current.style')
  if (theme && typeof theme === 'string') {
    return JSON.parse(theme)
  }
  return Config.defaultTheme
}

export function setStyle(theme) {
  //console.debug('======set theme=======', theme)
  if (theme) {
    return Cookies.set('_current.style', JSON.stringify(theme))
  }
}

export function removeStyle() {
  return Cookies.remove('_current.style')
}

/**
 * 是否是单点登录
 * @param to
 * @returns {boolean}
 */
export function isSSORequest(to) {
  console.log("to==> " + to.path)
  return (to.path === "/" || to.path === "/dashboard") && isSSOLogin(to);
}
/**
 * 是否是单点登录
 * @param to
 * @returns {boolean}
 */
export function isSSOLogin(to) {
  let token = to.query.ICMS_SSO_USER_TOKEN? to.query.ICMS_SSO_USER_TOKEN : to.query.token;
  let userName = to.query.ICMS_SSO_USER_NAME? to.query.ICMS_SSO_USER_NAME : to.query.userName;
  console.log("to.path==> " + to.path + ",to.query.token===> " + token + ",to.query.userName===> " + userName)
  to.query.token = token;
  to.query.userName = userName;
  return to.query != null
    && ((token != null && token !== '') || (userName != null && userName !== ''));
}
export function getSsoTargetUrl(to) {
  let targetUrl = to.query.ICMS_SSO_PARAMS? to.query.ICMS_SSO_PARAMS : ''
  return targetUrl;
}
